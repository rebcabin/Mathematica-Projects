(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    474986,       9990]
NotebookOptionsPosition[    461798,       9748]
NotebookOutlinePosition[    467865,       9881]
CellTagsIndexPosition[    467797,       9876]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Little Fingers", "Title",
 CellChangeTimes->{{3.727038100871808*^9, 3.727038119380846*^9}, {
   3.727471593317396*^9, 3.7274715984595823`*^9}, {3.729120277549485*^9, 
   3.729120279330949*^9}, {3.729164818218039*^9, 3.729164831400428*^9}, {
   3.72917959045429*^9, 3.7291795965711203`*^9}, {3.7291976388841267`*^9, 
   3.729197641402032*^9}, 3.7618173218764267`*^9, 3.766010196702277*^9, {
   3.766053840839232*^9, 3.766053854214931*^9}, {3.766064635820005*^9, 
   3.766064666465206*^9}, {3.766087377462359*^9, 3.766087385906043*^9}, {
   3.7664119698137407`*^9, 3.766411975254353*^9}},
 CellTags->"c:1",ExpressionUUID->"6f3cba05-b339-4654-99a4-829a31dbb3b1"],

Cell["\<\
Brian Beckman
9 May 2019\
\>", "Text",
 CellChangeTimes->{{3.727471602355763*^9, 3.7274716101393967`*^9}, {
   3.727925773402236*^9, 3.727925775055613*^9}, {3.7291796049113493`*^9, 
   3.729179606176675*^9}, 3.729642307282371*^9, {3.72971195796128*^9, 
   3.729711959054461*^9}, {3.7297934248121*^9, 3.729793424979403*^9}, 
   3.731527806071295*^9, {3.733640231589473*^9, 3.733640234672677*^9}, {
   3.761817304934888*^9, 3.7618173125575304`*^9}, {3.7660102753115883`*^9, 
   3.766010279790196*^9}, {3.7660873923218718`*^9, 3.7660873975423603`*^9}, {
   3.766088099067906*^9, 3.7660881044808073`*^9}, {3.766411978277776*^9, 
   3.766411979674424*^9}},ExpressionUUID->"f8a900e9-2e08-4795-8dd9-\
f13eab31aca1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"t2\[Theta]", "=", 
   FractionBox[
    SuperscriptBox["x", "2"], 
    RowBox[{"1", "-", 
     SuperscriptBox["x", "2"]}]]}], ";", 
  RowBox[{
   RowBox[{"1", "+", "t2\[Theta]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.766507449156374*^9, 3.766507513668462*^9}},
 CellLabel->
  "In[294]:=",ExpressionUUID->"3c096ea3-fe53-4135-a67a-5167fbeb6a98"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "-", 
   SuperscriptBox["x", "2"]}]]], "Output",
 CellChangeTimes->{{3.766507507071858*^9, 3.766507514478428*^9}, 
   3.766569636609963*^9},
 CellLabel->
  "Out[294]=",ExpressionUUID->"1d346773-116f-4058-a9e0-5e2a1901cda0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"ArcTan", "[", 
     FractionBox["x", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["x", "2"]}]]], "]"}], "]"}], "\[Equal]", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["x", "2"]}]]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.766507536674399*^9, 3.766507627214665*^9}, {
  3.766507669601449*^9, 3.766507671013278*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"8649ada3-bbd3-49e4-8b7c-8e84b0f06269"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox[
    FractionBox["1", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}]]]], "\[Equal]", 
  SqrtBox[
   RowBox[{"1", "-", 
    SuperscriptBox["x", "2"]}]]}]], "Output",
 CellChangeTimes->{{3.7665075752428102`*^9, 3.76650759604641*^9}, 
   3.766507629545567*^9, 3.7665696367498703`*^9},
 CellLabel->
  "Out[295]=",ExpressionUUID->"15b66c9d-6b49-477e-bab3-00dfdb1bc5f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["x", "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76650767394847*^9, 3.766507709249753*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"22aa9a6a-b5a9-47ae-9640-82a5ae000563"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
yUYfwYTkd7Fv406SJJUenIlIhP8BDnT01Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$91147#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {0., 0.9999988152828132}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.766507698210967*^9, 3.7665077239196167`*^9}, 
   3.766569636778974*^9},
 CellLabel->
  "Out[296]=",ExpressionUUID->"dfc0195e-a3ec-4099-bbb2-490852842099"]
}, Open  ]],

Cell["\<\
Fingers appear to be pendula. Let\[CloseCurlyQuote]s have stacked pendula \
with spherical spring-dampers, then figure out the normal modes. First a \
review of normal modes of oscillations\
\>", "Text",
 CellChangeTimes->{{3.7664119881408453`*^9, 3.766411989934229*^9}, {
  3.766412131709775*^9, 3.7664121354290752`*^9}, {3.76641619254957*^9, 
  3.766416194812821*^9}, {3.766416935973255*^9, 3.766416963258421*^9}, {
  3.766417674268413*^9, 3.766417713615934*^9}, {3.7665701611373053`*^9, 
  3.766570164315186*^9}},ExpressionUUID->"d7e913e0-0326-4141-8abe-\
3f4ca87342b1"],

Cell["2-link, stacked pendula in 2D. MIT8_03SCF16_Text_Ch3.pdf. ", "Text",
 CellChangeTimes->{{3.766418515517342*^9, 3.7664185361070147`*^9}, {
  3.766418608492366*^9, 
  3.7664186215339117`*^9}},ExpressionUUID->"6ee75921-d795-480d-9ae2-\
25363897628f"],

Cell["Top link", "Text",
 CellChangeTimes->{{3.766419290758799*^9, 
  3.766419310387348*^9}},ExpressionUUID->"21da0045-6451-4fe4-ab06-\
7ba9536303d7"],

Cell["\<\
l1\thalf-length of top link
l2\thalf-length of bottom link
r\tradii of the links about long axis, same for the two links
\[Theta]1\tswing angle from vertical downward of the top link
\[Theta]2\tswing angle from vertical of bottom link
m1\tmass of top link
m2\tmass of bottom link\
\>", "Text",
 CellChangeTimes->{{3.766418929316975*^9, 3.766418952412745*^9}, {
   3.766419062682081*^9, 3.7664191488535433`*^9}, {3.766419189349832*^9, 
   3.7664192129337797`*^9}, 3.76642323436489*^9, {3.766445399986442*^9, 
   3.7664454247808237`*^9}},ExpressionUUID->"e5e59c80-5976-49f5-9034-\
f630494fb28b"],

Cell["asdf", "ItemParagraph",
 CellChangeTimes->{{3.7665701376981153`*^9, 
  3.766570137983932*^9}},ExpressionUUID->"e0171550-1b74-4b02-8001-\
f99421b0d5e7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "l1", ",", "l2", ",", "r", ",", "\[Theta]1", ",", "\[Theta]2", ",", "x1", 
   ",", "y1", ",", "x2", ",", "y2", ",", "m1", ",", "m2", ",", "J1", ",", 
   "J2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"topLink", "=", 
   RowBox[{"Cylinder", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "l1"}], ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", "r"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"J1", "=", 
  RowBox[{"m1", " ", 
   RowBox[{
    RowBox[{"MomentOfInertia", "[", 
     RowBox[{"topLink", ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{
        RowBox[{"l1", ">", "0"}], "&&", 
        RowBox[{"r", ">", "0"}]}]}]}], "]"}], "/", 
    RowBox[{"Volume", "[", "topLink", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bottomLink", "=", 
   RowBox[{"Cylinder", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "l2"}], ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", "r"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"J2", "=", 
  RowBox[{"m2", " ", 
   RowBox[{
    RowBox[{"MomentOfInertia", "[", 
     RowBox[{"bottomLink", ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{
        RowBox[{"l2", ">", "0"}], "&&", 
        RowBox[{"r", ">", "0"}]}]}]}], "]"}], "/", 
    RowBox[{"Volume", "[", "bottomLink", "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.766419223438108*^9, 3.76641922787792*^9}, {
  3.766445333489882*^9, 3.766445395738909*^9}, {3.7664454404977407`*^9, 
  3.766445635299512*^9}, {3.76644568069976*^9, 3.7664458820205593`*^9}},
 CellLabel->
  "In[297]:=",ExpressionUUID->"28e860a2-4735-46c9-bb25-cb4d75fd5793"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"m1", " ", 
       SuperscriptBox["r", "2"]}], "2"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{"m1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"16", " ", 
          SuperscriptBox["l1", "4"]}], "+", 
         RowBox[{"12", " ", 
          SuperscriptBox["l1", "2"], " ", 
          SuperscriptBox["r", "2"]}]}], ")"}]}], 
      RowBox[{"48", " ", 
       SuperscriptBox["l1", "2"]}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      RowBox[{"m1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"16", " ", 
          SuperscriptBox["l1", "4"]}], "+", 
         RowBox[{"12", " ", 
          SuperscriptBox["l1", "2"], " ", 
          SuperscriptBox["r", "2"]}]}], ")"}]}], 
      RowBox[{"48", " ", 
       SuperscriptBox["l1", "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7664456227381363`*^9, 3.766445635889928*^9}, 
   3.766445682177443*^9, 3.76644573616243*^9, {3.766445773742663*^9, 
   3.766445804527935*^9}, {3.766445876652358*^9, 3.766445882840732*^9}, 
   3.766569636801485*^9},
 CellLabel->
  "Out[299]=",ExpressionUUID->"bf92da8b-0ee6-4772-a123-6de7475e7d67"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"m2", " ", 
       SuperscriptBox["r", "2"]}], "2"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{"m2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"16", " ", 
          SuperscriptBox["l2", "4"]}], "+", 
         RowBox[{"12", " ", 
          SuperscriptBox["l2", "2"], " ", 
          SuperscriptBox["r", "2"]}]}], ")"}]}], 
      RowBox[{"48", " ", 
       SuperscriptBox["l2", "2"]}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      RowBox[{"m2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"16", " ", 
          SuperscriptBox["l2", "4"]}], "+", 
         RowBox[{"12", " ", 
          SuperscriptBox["l2", "2"], " ", 
          SuperscriptBox["r", "2"]}]}], ")"}]}], 
      RowBox[{"48", " ", 
       SuperscriptBox["l2", "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7664456227381363`*^9, 3.766445635889928*^9}, 
   3.766445682177443*^9, 3.76644573616243*^9, {3.766445773742663*^9, 
   3.766445804527935*^9}, {3.766445876652358*^9, 3.766445882840732*^9}, 
   3.7665696368035097`*^9},
 CellLabel->
  "Out[301]=",ExpressionUUID->"4a8edea9-b713-41f2-8e19-9b63db4c9324"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], "m", " ", 
    SuperscriptBox["r", "2"]}], " ", "+", " ", 
   RowBox[{
    FractionBox["1", "2"], "J", " "}]}], TraditionalForm]],
 FormatType->
  "TraditionalForm",ExpressionUUID->"5a8365e9-6cc8-4870-ae29-a0a111c2e846"]], \
"Text",
 CellChangeTimes->{{3.766418648727429*^9, 3.7664186890884123`*^9}, {
  3.766418737208065*^9, 
  3.7664187393919277`*^9}},ExpressionUUID->"2f52397c-d277-4f4b-92c1-\
f626d33f4d7b"],

Cell["From https://stackoverflow.com/questions/4201346", "Text",
 CellChangeTimes->{{3.7660900056879168`*^9, 
  3.766090046076166*^9}},ExpressionUUID->"558cbc3f-939f-402d-a71a-\
05944e62f4b3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"approxEqual", ",", "expr1", ",", "expr2"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expr1", "=", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], " ", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"Cosh", "[", 
       RowBox[{"q", "+", 
        RowBox[{"x", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}]}], "]"}], " ", 
      RowBox[{"Sech", "[", 
       RowBox[{"q", "-", 
        RowBox[{"x", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}]}], "]"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expr2", "=", 
    RowBox[{
     RowBox[{"Sqrt", "[", "2", "]"}], " ", 
     RowBox[{"ArcTanh", "[", 
      RowBox[{
       RowBox[{"Tanh", "[", "q", "]"}], " ", 
       RowBox[{"Tanh", "[", 
        RowBox[{"x", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"approxEqual", "[", 
    RowBox[{"lhs_", ",", "rhs_", ",", 
     RowBox[{"tol_:", " ", 
      RowBox[{"10", "^", 
       RowBox[{"-", "10"}]}]}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vars", "=", "\[IndentingNewLine]", 
       RowBox[{"DeleteDuplicates", "[", "\[IndentingNewLine]", 
        RowBox[{"Cases", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"lhs", ",", "rhs"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"s_Symbol", "/;", 
           RowBox[{"Not", "[", 
            RowBox[{"ValueQ", "[", "s", "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", "Infinity"}], " ", 
         RowBox[{"(*", " ", "levelspec", " ", "*)"}], "]"}], "]"}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Chop", "[", 
       RowBox[{
        RowBox[{"First", "[", 
         RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
          RowBox[{"FindMaximum", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"lhs", "-", "rhs"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "vars"}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], "]"}], "]"}], ",", "tol"}], "]"}], 
      "\[Equal]", "0"}]}], "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"approxEqual", "[", 
  RowBox[{"expr1", ",", "expr2"}], "]"}], "\n", 
 RowBox[{"approxEqual", "[", 
  RowBox[{"expr1", ",", "expr2", ",", 
   RowBox[{"10", "^", 
    RowBox[{"-", "20"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.766089924761076*^9, 3.7660899520156937`*^9}, {
   3.766089983191236*^9, 3.766089985622241*^9}, {3.766090091380219*^9, 
   3.766090143673624*^9}, {3.766090269859179*^9, 3.766090297270681*^9}, {
   3.766090347044055*^9, 3.766090407073986*^9}, 3.766090443140987*^9, {
   3.766090636852459*^9, 3.766090648599918*^9}, {3.766090874058971*^9, 
   3.766090885607156*^9}, {3.7660909454972773`*^9, 3.7660910295657597`*^9}, {
   3.7660911423750563`*^9, 3.766091143143223*^9}, {3.766091189270406*^9, 
   3.766091196914585*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"a2ac0b29-b122-4713-a081-104a0851646f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.766090409074301*^9, 3.766090649753339*^9, 
  3.76609090866369*^9, 3.766090973509692*^9, 3.7660911595040913`*^9, 
  3.766091199215993*^9, 3.76618805529205*^9, 3.766335540421116*^9, 
  3.766357256135858*^9, 3.766392396103413*^9, 3.766569636819091*^9},
 CellLabel->
  "Out[306]=",ExpressionUUID->"961366f4-d7b6-43b7-9ed8-df1b7cf398ce"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.766090409074301*^9, 3.766090649753339*^9, 
  3.76609090866369*^9, 3.766090973509692*^9, 3.7660911595040913`*^9, 
  3.766091199215993*^9, 3.76618805529205*^9, 3.766335540421116*^9, 
  3.766357256135858*^9, 3.766392396103413*^9, 3.766569636824048*^9},
 CellLabel->
  "Out[307]=",ExpressionUUID->"61f73c0e-c815-44b0-be80-459faa6e6695"]
}, Open  ]],

Cell["From https://mathematica.stackexchange.com/questions/51491/", "Text",
 CellChangeTimes->{{3.7660997138180847`*^9, 
  3.7660997179333982`*^9}},ExpressionUUID->"4efff4e9-9c38-4a1c-b0e7-\
cb0c220f47d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"polarEllipseParametric", ",", "r"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polarEllipseParametric", "[", 
    RowBox[{"a_", ",", "b_", ",", "\[Theta]_", ",", "t_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"a", " ", 
    FractionBox[
     SqrtBox["2."], 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["a", "b"], ")"}], "2"], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["a", "b"], ")"}], "2"]}], ")"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"t", "-", "\[Theta]"}], ")"}]}], "]"}]}]}]]]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.766099703933825*^9, 3.766099703935706*^9}, {
   3.766099737769335*^9, 3.766099811803069*^9}, {3.76609986083895*^9, 
   3.7660999011254883`*^9}, {3.766100724701482*^9, 3.766100744325067*^9}, 
   3.766100823982503*^9, {3.766101010324298*^9, 3.766101061244464*^9}, {
   3.766102578922823*^9, 3.766102578947843*^9}},
 CellLabel->
  "In[308]:=",ExpressionUUID->"9ff43b8c-6584-49d5-adb1-7c7ed479ad40"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", "1"}], ",", 
       RowBox[{"b", "=", "0.5"}], ",", 
       RowBox[{"\[Theta]", "=", 
        RowBox[{"\[Pi]", "/", "3.0"}]}], ",", 
       RowBox[{"x0", "=", "1"}], ",", 
       RowBox[{"y0", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x0", ",", "y0"}], "}"}], "+", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "t", "]"}], ",", 
           RowBox[{"Sin", "[", "t", "]"}]}], "}"}], "*", 
         RowBox[{"polarEllipseParametric", "[", 
          RowBox[{"a", ",", "b", ",", "\[Theta]", ",", "t"}], "]"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"0", ",", ".05"}], "]"}], ",", "2"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"UniformDistribution", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"2.", "\[Pi]"}]}], "}"}], "]"}], ",", "100"}], "]"}]}], 
        "}"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.766099950996422*^9, 3.7661000246011047`*^9}, {
  3.766102091707312*^9, 3.7661020978974237`*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"80e25fc1-da31-42b1-a608-0ac5f8ef7e72"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", "\[IndentingNewLine]", 
   RowBox[{"Select", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "=", "1"}], ",", 
         RowBox[{"b", "=", "0.1"}], ",", 
         RowBox[{"\[Theta]", "=", 
          RowBox[{"\[Pi]", "/", "6."}]}], ",", 
         RowBox[{"x0", "=", "1"}], ",", 
         RowBox[{"y0", "=", "1"}]}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x0", ",", "y0"}], "}"}], "+", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "t", "]"}], ",", 
             RowBox[{"Sin", "[", "t", "]"}]}], "}"}], "*", 
           RowBox[{"polarEllipseParametric", "[", 
            RowBox[{"a", ",", "b", ",", "\[Theta]", ",", "t"}], "]"}]}], "+", 
          
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0", ",", ".01"}], "]"}], ",", "2"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"RandomVariate", "[", 
            RowBox[{
             RowBox[{"UniformDistribution", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"2.", "\[Pi]"}]}], "}"}], "]"}], ",", "200"}], 
            "]"}]}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ">", "1"}], "&&", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ">", 
        RowBox[{"1", "/", "2"}]}]}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7661005107943487`*^9, 3.766100583986377*^9}, {
  3.76610265621861*^9, 3.766102661167386*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"01b9c8a4-13b3-4182-bcbb-0fe317d8fdd7"],

Cell["Spectacular failing case", "Text",
 CellChangeTimes->{{3.766131461345232*^9, 
  3.766131470899189*^9}},ExpressionUUID->"fa5b5cf0-9fb9-467f-a511-\
afb7a2e7f92f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.16550727710836116`", ",", "0.07368858739595108`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.13464824318933685`", ",", "0.14954202398584215`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0.074303898354803`", ",", "0.22868388471452056`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.032382794181396043`"}], ",", "0.3081017058878809`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.21388888888888882`"}], ",", "0.3704664227300099`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.4926902869387768`"}], ",", "0.35796044659618564`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.7754996473179878`"}], ",", "0.1648375386102261`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.7754996473179879`"}], ",", 
       RowBox[{"-", "0.1648375386102261`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.49269028693877703`"}], ",", 
       RowBox[{"-", "0.35796044659618564`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.2138888888888892`"}], ",", 
       RowBox[{"-", "0.37046642273000996`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.03238279418139636`"}], ",", 
       RowBox[{"-", "0.30810170588788127`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.07430389835480296`", ",", 
       RowBox[{"-", "0.22868388471452059`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.13464824318933685`", ",", 
       RowBox[{"-", "0.14954202398584204`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.1655072771083609`", ",", 
       RowBox[{"-", "0.07368858739595108`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.175`", ",", "0.`"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.766105706007147*^9, 3.766105736072967*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"0dd15450-6a85-43f6-9055-549db446cae4"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"data", "=", 
   RowBox[{"Round", "[", 
    RowBox[{"data", ",", 
     RowBox[{"10.0", "^", 
      RowBox[{"-", "2"}]}]}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.766105774057169*^9, 3.766105912923046*^9}, 
   3.766136340981977*^9},
 CellLabel->
  "In[313]:=",ExpressionUUID->"f2ea43bd-cf28-4909-86d9-5633eedcd547"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"bestpfit", ",", "param", ",", "guess"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bestpfit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xc_", "?", "NumericQ"}], ",", 
       RowBox[{"yc_", "?", "NumericQ"}]}], "}"}], ",", "data_"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"polardata", ",", "fit"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"polardata", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ArcTan", "@@", "#"}], ",", 
           RowBox[{"Norm", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "-", 
            RowBox[{"{", 
             RowBox[{"xc", ",", "yc"}], "}"}]}], "&"}], "/@", "data"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fit", "=", 
       RowBox[{"NonlinearModelFit", "[", "\[IndentingNewLine]", 
        RowBox[{"polardata", ",", "\[IndentingNewLine]", 
         RowBox[{"polarEllipseParametric", "[", 
          RowBox[{"a", ",", "b", ",", "\[Theta]", ",", "t"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "\[Theta]"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "t", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Sow", "[", 
       RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Norm", "@", 
       RowBox[{"fit", "[", "\"\<FitResiduals\>\"", "]"}]}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7661001106962223`*^9, 3.766100130087516*^9}, {
  3.766100180157441*^9, 3.766100205630906*^9}, {3.7661002649969807`*^9, 
  3.7661002655149508`*^9}, {3.766101227819685*^9, 3.76610124204007*^9}, {
  3.7661013670583057`*^9, 3.76610137845599*^9}, {3.766101591671694*^9, 
  3.766101593282772*^9}, {3.766102106856464*^9, 3.766102118808395*^9}},
 CellLabel->
  "In[314]:=",ExpressionUUID->"d03b696a-947f-4980-acda-232159d40ad1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"result", ",", "x0", ",", "y0", ",", "ellipseFit"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ellipseFit", "[", "data_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"guess", "=", 
       RowBox[{"Mean", "[", "data", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"intermediate", "=", "\[IndentingNewLine]", 
          RowBox[{"Reap", "[", 
           RowBox[{"Quiet", "@", "\[IndentingNewLine]", 
            RowBox[{"FindMinimum", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"bestpfit", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x0", ",", "y0"}], "}"}], ",", "data"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x0", ",", 
                  RowBox[{
                  "guess", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y0", ",", 
                  RowBox[{
                  "guess", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "}"}]}], "}"}]}], "]"}]}], 
           "]"}]}], ",", "\[IndentingNewLine]", "min2", ",", "params"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"params", "=", 
         RowBox[{"Last", "@", 
          RowBox[{"First", "@", 
           RowBox[{"Last", "@", "intermediate"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"min2", "=", 
         RowBox[{"Last", "@", 
          RowBox[{"First", "@", "intermediate"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"params", "~", "Join", "~", "min2"}]}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.766100292209203*^9, 3.766100341508556*^9}, {
  3.766101250740779*^9, 3.766101389119911*^9}, {3.766101612566613*^9, 
  3.766101665410304*^9}, {3.766101787288488*^9, 3.766101836852532*^9}, {
  3.7661018940209*^9, 3.7661020699334173`*^9}, {3.766102142915654*^9, 
  3.76610222308419*^9}, {3.7661023098772783`*^9, 3.766102314095632*^9}},
 CellLabel->
  "In[316]:=",ExpressionUUID->"8e6a99c5-b80a-493f-b421-2834e3ab7bc3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"result", "=", 
       RowBox[{"ellipseFit", "[", "data", "]"}]}], "}"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{"data", ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x0", ",", "y0"}], "}"}], "+", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "t", "]"}], ",", 
              RowBox[{"Sin", "[", "t", "]"}]}], "}"}], "*", 
            "\[IndentingNewLine]", 
            RowBox[{"polarEllipseParametric", "[", 
             RowBox[{"a", ",", "b", ",", "\[Theta]", ",", "t"}], "]"}]}]}], "/.",
           "result"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"2.", "\[Pi]"}]}], "}"}]}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7661003780181847`*^9, 3.766100389520104*^9}, {
  3.7661022351415577`*^9, 3.766102320524261*^9}, {3.766102371780963*^9, 
  3.766102531512904*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"00e4b9ee-9f56-4986-ab67-c0796b838699"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{0.16550727710836116`, 0.07368858739595108}, {
       0.13464824318933685`, 0.14954202398584215`}, {0.074303898354803, 
       0.22868388471452056`}, {-0.032382794181396043`, 
       0.3081017058878809}, {-0.21388888888888882`, 
       0.3704664227300099}, {-0.4926902869387768, 
       0.35796044659618564`}, {-0.7754996473179878, 
       0.1648375386102261}, {-0.7754996473179879, -0.1648375386102261}, \
{-0.49269028693877703`, -0.35796044659618564`}, {-0.2138888888888892, \
-0.37046642273000996`}, {-0.03238279418139636, -0.30810170588788127`}, {
       0.07430389835480296, -0.22868388471452059`}, {
       0.13464824318933685`, -0.14954202398584204`}, {
       0.1655072771083609, -0.07368858739595108}, {0.175, 0.}}]}, {
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
a3Q=
        "]]},
      Annotation[#, "Charting`Private`Tag$91740#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.766100380900502*^9, 3.766100390689603*^9}, 
   3.766102027271927*^9, 3.766102322996669*^9, {3.7661023662295313`*^9, 
   3.7661023891516533`*^9}, {3.766102498615035*^9, 3.7661025125647593`*^9}, 
   3.766102597242701*^9, 3.766102671154594*^9, 3.7661057435006857`*^9, {
   3.766105857565155*^9, 3.7661059241127243`*^9}, 3.7661363530373287`*^9, 
   3.766188055545088*^9, 3.76633554068045*^9, 3.7663572805219517`*^9, 
   3.76639239643692*^9, 3.766569637145811*^9},
 CellLabel->
  "Out[318]=",ExpressionUUID->"aeeb582d-34c1-4a09-a7c9-f1866695620b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.7661317687821617`*^9, 3.7661317736128597`*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"f18b095a-dd7f-4707-9864-e37a4e69a647"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.14033362648993988`"}], ",", 
   RowBox[{"-", "2.4054832200211726`*^-17"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7661317740087357`*^9, 3.766136355023307*^9, 
  3.7661880555656023`*^9, 3.766335540703746*^9, 3.766357292667967*^9, 
  3.7663923964544067`*^9, 3.7665696371614437`*^9},
 CellLabel->
  "Out[319]=",ExpressionUUID->"1206abce-4f2b-4db0-8975-f49c39a1cdd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newData", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Mu]", "=", 
      RowBox[{"Mean", "[", "data", "]"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "-", "\[Mu]"}], ")"}], "&"}], "/@", "data"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7661325261945*^9, 3.7661325951848*^9}},
 CellLabel->
  "In[320]:=",ExpressionUUID->"9a7ca034-a86a-450d-a5d7-d60ba5bcbbe6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.3058409035983011`", ",", "0.0736885873959511`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27498186967927674`", ",", "0.14954202398584218`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21463752484474288`", ",", "0.22868388471452059`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10795083230854384`", ",", "0.3081017058878809`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.07355526239894894`"}], ",", "0.3704664227300099`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35235666044883696`"}], ",", "0.35796044659618564`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.635166020828048`"}], ",", "0.16483753861022613`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6351660208280481`"}], ",", 
     RowBox[{"-", "0.16483753861022607`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3523566604488372`"}], ",", 
     RowBox[{"-", "0.35796044659618564`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.07355526239894933`"}], ",", 
     RowBox[{"-", "0.37046642273000996`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10795083230854352`", ",", 
     RowBox[{"-", "0.30810170588788127`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21463752484474286`", ",", 
     RowBox[{"-", "0.22868388471452056`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27498186967927674`", ",", 
     RowBox[{"-", "0.14954202398584202`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3058409035983008`", ",", 
     RowBox[{"-", "0.07368858739595105`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3153336264899399`", ",", "2.4054832200211726`*^-17"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.766132597376317*^9, 3.766136359459385*^9, 
  3.7661880555889997`*^9, 3.766335540731304*^9, 3.766357294613802*^9, 
  3.766392396478066*^9, 3.7665696371804113`*^9},
 CellLabel->
  "Out[320]=",ExpressionUUID->"503acaa4-ed8e-4df6-9b84-c8288894ac32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"uu", ",", "ww", ",", "vv"}], "}"}], "=", 
    RowBox[{"SingularValueDecomposition", "[", 
     RowBox[{"newData", ",", "2"}], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.766132612358012*^9, 3.766132629056492*^9}, {
  3.7661326831626368`*^9, 3.7661326954674053`*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"507c9390-78e2-4a03-ab53-0fbd62913b74"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "0.24035133607740056`"}], "0.07620135907251935`"},
       {
        RowBox[{"-", "0.21610013244429527`"}], "0.1546413884275735`"},
       {
        RowBox[{"-", "0.16867729352689098`"}], "0.23648197677605784`"},
       {
        RowBox[{"-", "0.08483537182490217`"}], "0.3186079357861078`"},
       {"0.05780490897427942`", "0.3830992817255768`"},
       {"0.27690669599211637`", "0.37016685335908783`"},
       {"0.4991582222680674`", "0.1704584782006325`"},
       {"0.4991582222680675`", 
        RowBox[{"-", "0.17045847820063217`"}]},
       {"0.27690669599211654`", 
        RowBox[{"-", "0.37016685335908767`"}]},
       {"0.05780490897427972`", 
        RowBox[{"-", "0.38309928172557683`"}]},
       {
        RowBox[{"-", "0.0848353718249019`"}], 
        RowBox[{"-", "0.3186079357861082`"}]},
       {
        RowBox[{"-", "0.16867729352689098`"}], 
        RowBox[{"-", "0.23648197677605787`"}]},
       {
        RowBox[{"-", "0.21610013244429527`"}], 
        RowBox[{"-", "0.1546413884275734`"}]},
       {
        RowBox[{"-", "0.2403513360774003`"}], 
        RowBox[{"-", "0.07620135907251945`"}]},
       {
        RowBox[{"-", "0.2478113867219494`"}], 
        RowBox[{"-", "4.1520987523917993`*^-17"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.2724743227547979`", "0.`"},
       {"0.`", "0.9670245818821032`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "1.`"}], 
        RowBox[{"-", "1.916389953748555`*^-16"}]},
       {
        RowBox[{"-", "1.916389953748555`*^-16"}], "1.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.766132629997363*^9, 3.766132696105191*^9, 
  3.7661363620254498`*^9, 3.766188055611043*^9, 3.766335540759028*^9, 
  3.766357296530191*^9, 3.766392396505466*^9, 3.766569637200285*^9},
 CellLabel->
  "Out[321]=",ExpressionUUID->"bf7c5c26-cac7-4de1-a121-1047bd134fa2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"uu", ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7661327646301947`*^9, 3.766132781215715*^9}, 
   3.766132862230626*^9},
 CellLabel->
  "In[322]:=",ExpressionUUID->"67ce692d-d4d0-40e3-a42a-60ef9ff9d993"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{-0.24035133607740056`, 
      0.07620135907251935}, {-0.21610013244429527`, 
      0.1546413884275735}, {-0.16867729352689098`, 
      0.23648197677605784`}, {-0.08483537182490217, 0.3186079357861078}, {
      0.05780490897427942, 0.3830992817255768}, {0.27690669599211637`, 
      0.37016685335908783`}, {0.4991582222680674, 0.1704584782006325}, {
      0.4991582222680675, -0.17045847820063217`}, {
      0.27690669599211654`, -0.37016685335908767`}, {
      0.05780490897427972, -0.38309928172557683`}, {-0.0848353718249019, \
-0.3186079357861082}, {-0.16867729352689098`, -0.23648197677605787`}, \
{-0.21610013244429527`, -0.1546413884275734}, {-0.2403513360774003, \
-0.07620135907251945}, {-0.2478113867219494, -4.1520987523917993`*^-17}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.2478113867219494, 
   0.4991582222680675}, {-0.38309928172557683`, 0.3830992817255768}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7661327822089043`*^9, 3.766132875548264*^9, 
  3.7661363634774446`*^9, 3.7661880556480627`*^9, 3.7663355407949667`*^9, 
  3.7663572985833273`*^9, 3.766392396543347*^9, 3.766569637234725*^9},
 CellLabel->
  "Out[322]=",ExpressionUUID->"1ee6ce81-c8fb-41ac-810d-f961ed86c3fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rsqr", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", ".", "#"}], "&"}], "/@", "uu"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.766132794611208*^9, 3.7661327968347063`*^9}, {
  3.766132890866905*^9, 3.766132902870009*^9}},
 CellLabel->
  "In[323]:=",ExpressionUUID->"1d088fd9-eebf-403e-aea1-7d6e33a1eecd"],

Cell[BoxData["0.13333333333333336`"], "Output",
 CellChangeTimes->{3.766132903569394*^9, 3.7661363647110443`*^9, 
  3.766188055665914*^9, 3.7663355408157873`*^9, 3.766357300270053*^9, 
  3.76639239656137*^9, 3.7665696372504807`*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"e39b31cb-943f-4722-b873-07055237f555"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"nx", ",", "ny"}], "}"}], "=", 
  RowBox[{
   RowBox[{"Inverse", "[", 
    RowBox[{"vv", ".", "ww"}], "]"}], ".", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "-", 
     RowBox[{"Mean", "[", "data", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.766132915594285*^9, 3.766132944646288*^9}},
 CellLabel->
  "In[324]:=",ExpressionUUID->"e9935be6-f492-4402-a035-b8b551ec0087"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.7858704746474456`"}], " ", 
     RowBox[{"(", 
      RowBox[{"0.14033362648993988`", "\[VeryThinSpace]", "+", "x"}], ")"}]}],
     "-", 
    RowBox[{"1.506034282561973`*^-16", " ", 
     RowBox[{"(", 
      RowBox[{"2.4054832200211726`*^-17", "+", "y"}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1.9817386131164506`*^-16"}], " ", 
     RowBox[{"(", 
      RowBox[{"0.14033362648993988`", "\[VeryThinSpace]", "+", "x"}], ")"}]}],
     "+", 
    RowBox[{"1.034099875779494`", " ", 
     RowBox[{"(", 
      RowBox[{"2.4054832200211726`*^-17", "+", "y"}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.766132947039123*^9, 3.7661363656688557`*^9, 
  3.7661880556851788`*^9, 3.7663355408404083`*^9, 3.7663573019147863`*^9, 
  3.766392396584819*^9, 3.7665696372691927`*^9},
 CellLabel->
  "Out[324]=",ExpressionUUID->"c4f52aaf-040c-4648-b26b-56f004e1cee2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "=", 
  RowBox[{"Expand", "[", 
   RowBox[{
    SuperscriptBox["nx", "2"], "+", 
    SuperscriptBox["ny", "2"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.766132961906767*^9, 3.766132977608303*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"eed54bb7-76f6-4bc2-b51a-53fe5b685fee"],

Cell[BoxData[
 RowBox[{"0.0121625724913832`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.17333796318952963`", " ", "x"}], "+", 
  RowBox[{"0.6175924029226015`", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"2.7147407177475198`*^-17", " ", "y"}], "-", 
  RowBox[{"1.73153555435769`*^-16", " ", "x", " ", "y"}], "+", 
  RowBox[{"1.0693625530871647`", " ", 
   SuperscriptBox["y", "2"]}]}]], "Output",
 CellChangeTimes->{3.766132978407795*^9, 3.7661363665634947`*^9, 
  3.7661880557052298`*^9, 3.7663355408651943`*^9, 3.766357303424797*^9, 
  3.766392396611054*^9, 3.766569637287731*^9},
 CellLabel->
  "Out[325]=",ExpressionUUID->"4b235da0-9289-4b9f-844f-7200f12f4aae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", "expr"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
      RowBox[{"Point", "[", "data", "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766132988299415*^9, 3.766133156754271*^9}},
 CellLabel->
  "In[326]:=",ExpressionUUID->"7f31ecf4-0d96-400c-a90b-a4f4f1800627"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
ih7FQzgsn0vfQqnyn3TXfXTW7Mv40IxSH+78FE0N1v3+vObPQZTt4/UrnVu9
1cvHWw8Nnbs4mK/4OEwKqBJNFV5UnZPU2pe7Lzh4/dqraBqyaG6ZpRvcOc/4
Gd8KH4ymlY/Pls4y7iY1uBbukDMgijYVmhvUd5eVXpZ173PqVhQ5H2k887fj
b8lzUeG7XR8lUDP/1cdy7U2h6dMLRnpXSKArEwZ/Lzgq9T35T90eUtdMhVp0
6bbdJ5Xez73r7Y+20uCpY+oufBTMb02bTlW/bqU8O1vMmJ/Xj8+1z1XFK8VK
74vO/mPT5438vN3hcJdIK/26vNLlHgtuUq9ts2ILHrbSqPcnWvYvkUAfn3R1
XbLCSluKRtnnMhvreDG/DPe2n2+h84ljSl9t6c/bXdqdcM9spdmFe+y+c/cy
57h2b2uRvFYKXrT1YujQsxSttb+t2ut2vsY1zxonLwttSt8/LVjbI2+R87bn
d0NKP/APLWvgYIXZv02TWWX3WUkreYfLT3MG37e953h9a7+6ddreTqVX1ct7
jhdUPW1euG50z0ORPPW23UDPPFbOEjhhld2fERza0XHzhdpWnn8ua/TCPA/p
qF+XUP+JVm6euVWjVoUD6Vr/HF8Sm1r5QZkSJycGv6DmjXnaSk8Ll3afMLDd
RRNNGj+tYNftFuYLS2qGLkyNy5F7Nz8pn8xVQmat7L3/Cddo7/kyt08yX326
eEeHX/x5ar071D0kmbOtCtmd8vc1HuhX9fHUpGQet75Y/0Ydz/Ckr0v/HhmW
zEWCnb55jztHNxq0GjpzbjKb5rrOyvbmEk1busNjxuhk/vBp4Zx2Q/1p3esn
571XmHjLn7MO7Z2XOn9LGWrvPzCFyz86uK/iT/EUWamc65xlyTz3SqcmYxpG
kHfWTZbunvFc0/z0SouFkWT6vcv8bd9S8/tdJcuE2lm5Vj2fxBPrItnhsuVT
1Y+R3N5z6rjmEyK458U8u08+fs3ms3abag2P4ocOK8eP7OFP8ebcmXaHRPIY
x8L1k/M/oWv37Q4dWRDJKwO2h469Gs8/WrbaPdP9NVs83/7y7UEyn9/7qk2z
C0/4xOVd3cbGxtIqyzLnAfWv88TZnYdfqRBHe1+Y3QI9vHV9O6X0jUucHttt
bgkrHfw7svLtret5gtb+lmpPx7X+/lL9EfR3t9JfStHef0W9n1yyzFy6eV0E
Ze/9z8I5VV9QBY3fNopfOr0rR+0viRF8VpXUPj3/lKjxH6P4p6UvAvtkZxPf
XtRro2erOFqkydtTyZsiwu6t/9rGQk3td25ruzGWLpz+bcTBQxY+liVvtpSH
JloWMHn4zuoR7LBgTEq7iiZ6oOmTs9Inuvujq0PA4JfcJEeZASmVkqmspl/V
lX5R5Mp0+kSNNf1hpT8Ur+nLeqUvtGNRd/PmTYFU9nCzCSVLmWivpj+llf5Q
503el4olxXJy+Z7lh7ul2rNmP1OU/ZCwFxL2Qbmejc/ffdkrulwkqOHF1RYS
9kIYz9Yf0saTfri0+KN0TuP7I8DyewJ36hzIdLa5kRdMn3713iG28NDWn26M
GmJ8T2RPVj+vPKl5zjTvQjtuhhrf1xjf9MOL5JAEPT+oFtqjZr4NJj3eLzs9
z3nFDxM7fPVfv7SCj8297LcrJgwNq2fiP0/uefdlp1XeU+fGeYb0qhAeyUMW
fhj1+Xs8bak2++CBRVEcqY3/L2r8uXiF1n27NrDafJ9ioEP3zpFF3nLgm7u9
KjeP0Ovz3btVJKplCk1y3+1xZftrPW+a2iT+vt+AF3xg+ZMaRxISbL4Xkcnf
K39jn6fcXtP3TErfeXTOfpdWDjXmyaMP18z0bKnxfYfydr8fPdTe+L7DKK29
/M7qKJXf0Mdd52fOrBVj8/2GgC/O3P1ySKp+K3+QuVWaP9Dzmq4qf6LPC5JO
/xobbvO9hr7Z5kc+SQyjdn/N2n82k/G9hu9/nSvS+6vJ5hybV5e2Nyf8EkZO
mj+rrfyZHp9+9E/LF6moJn+5Tj5/4qbVEZHG9xd+Lv3tc+OlqfYeVW5r/KJA
m+8v7L1Tb8Bsx0ga4Vt3R/vJxvcYOv9xr+uJBnE230WoWed90Ml1xvcZ6i67
OsS5p7EfvMxtz6OfZsXofNqdvHX75qlE+uga6pCSI8rm3s6H5pubFs8fT/Mb
1Tlf/pRxjm5/8z0LvBNNNvu9gV29sux2Mr43W2N1Xb/uK43vJdw/kK3yRpPx
vYQs3+svOsDJFFTw4bLgoJs230PY1ufu/Vyp752r2QPq+6e3R12+0z8tapUy
3Krni4czFxi60s6q09m3d82+lxtYdT7uzR26bPsrKy2Pq7dwcFsLz/y+zm3a
MSt9yPX1W91UHFO2f4rzMeO89W/9uk4r53qNRmn6LL8Dt3p6+Z9KuFpp5MqH
zxtuNe6niXoelb6etxZetW9bNiu9bjon6FLmdzx1UuXTwQ2tNO5L0OFhUVbe
pNWHqXqaptWPV/X6ukLHyjeL9jxr5WpVqhUo1Nr2+wGdVD3VSF+v6/nHHX2S
a9Q3vhegyV+fN/spebHQH+OcT58Vt2uXNnGTXluyDE4w2ZzrfKL0Q59XnFTz
Af6q6Z9+b17Tb7neUEPpNy/Q9FHuly5R+q3Pr1er+QlniVb2Jc9d9VH2z2M0
+0J95v8p+5ffAfFU9s8/NH8ivx+g+SNur/kT1H/W/Jf8fsD3R2n+k3Zq/lV+
P6C/8te6/jRS/t84z1u8TFSttfF6+3Eq/hjfx87c6dbqCil6HLmt4ptxjn1p
hbmL8lp50P5OQ4etM9MAVXKzgbmbOhSxkGuOXWPLTn7KOao26O9RxkIVPMbP
KVTyKXvM6fPqq6+F7o3zbzmsn6+OoxSmJtrzs9XzlF17vqp6Xn9/CfV+KrGs
nov/A2N/AnrZ/vn3hQNmWXnnuTaVl5cy7lnk0eLVDBWvaJAWD7ereEh06429
Y9tEevazz5dzvSNpSqmm2ZKtyVRz3qBNJ48k0G4tfs9U8Zs25w194pkcT9GT
9zjv32ilYecKDNjXyMooT3Zp+sgnn5WfTC3lZdfWuC8+s+jITI5vLSza0ymt
fYBqr/tjnwYTsm9wSvVP6fnV7bCD4peeth+72b6XmS/OqDbTqfA7dsgcss7n
eopeTi7VxuPUt2SePmbUmAp5zLzjQwGXhNoJevn1QJMO6y/F87M9EcvOjEjg
SW98KLuTmX8qNmRdr19v84ezS7sX/xxD2zyd87gUvk/Tllf1bToqhpqMzhu2
M99jurChQMm5qfZ1bNXgFvUfPyfTbdcRjptDqNnVOh+tvuHU1bXpyBv2obSz
zhqPRQfCacGyBje3PEii98FNHGMDw6nD4Rbrf7RKIr/fhsxLGBhB0/ZGf4mK
jNHLZl19zly4HkwpdZ5XHdY9iUL+uXTxr2MvaNgWv/ENAhJpu+/z2GluSXrZ
6OmxLltWhFNr05qATj/M9LHD7zV/nRdBkz4ndM8aYCYxnyNHrX0r1Z7fa+0n
q/Z8TZsPl1fzYR6pzV//UfNX3qbpQ5TSB77mdbBxXj8LnbpjV61ilXfcSqM/
WdHPDzT6Ryj6uYM2Hz+t5uO8U+NjqyrZSZufT1Xzcx6p6WcDpZ88XZOTmyo5
n6bPmaqk6TNv1ub/IWr+z++08WmixoebauOzX40P59bWHTKpkhdp42VV48W1
j6jxCm+dNl58RFu/qKnWL/iipg/7lT6wec7GHG/vGd9Z/6jp03KlTzxT0ycH
pU88UdO/4kr/qIW2fhKj1k8oResPfru1tt6ySK23ULy2HtNOrcfQgx2WtxHe
xvchtmp6v1OVlO2g0v/HSv8pIP36DtlrdlRUlTRPsyc3ZU9ULv16EQVq9nhB
2aPuX8+o9U36lH59Uz9Pkv3pr4WnrrOS0B+an369gvN9XdA5xMW4n/5s+7B3
Y45b+XW+c5/ffrLwiEr2y9bdsvJG192TPydaeN6HPQ/ihtjeV3csU29Q4TeB
er38PktDVU/HD4zbPKLkO768Ku+hztctNG395/x2ud/RvOztHWb0s/KfvRbn
TP5kJTd+EVdlhHG/aK1af2HRnuZp7aeo9jSgYdha99T+x5VZuGf8dQsf9nWo
1+WGhXd3vVvtZep87sTdQXte3zbz5D9+9F37wDgPU1LFK16U7ery6QVs77fX
VvksP9LGX953n77i6IRuXYx99Hub9jw9f8C4Zzbp8JQu86Yb587s5/wx48A6
kx6/L43w7nixcrwu17luhfaa7xvnEMjLNGFplHHOwKHuOM98k43vfY66mzh2
w6VkyrLA5eb9VD9jKtf75Ni3xn33xx1H9Gpc3Fhv/7q5nn2bVDvG+4IOV/B3
ijTmqb3n/eJRKdmYp7qXmuL84bpVH9d+7oF25zunyn93xdFNU/Vlif3USWc+
GffUZ6j4pMefyML95hxzsrLzsZatc+Yz7q9/fhi+b55TArf4etV0ME9qHnyk
X+bwj/FccPP9HmeLG/tlGv1c7cn24Nqu4VxnkWs27w7G/fVvih+uU813W6/a
bzjk1+r12iy2cviSPRf+rPqGJ/040mxhKhbrjXxr/7OQhUNDObnWamvlM8b9
dk0ebMpcvGvucUGcUPJb5jdPrLy4bXDr0DtP+PCBfhe/v7GyWK/kPb36jnPY
4M8NS+3v0DDOuP+uyZO/rjpyfF/0LbaEHB9xzWLlFuu313he6irnPxNyc47Z
ymK9k2fOX7h2tYc3N2n0sIRvknE/XhsP9m6/88SGD1som+/yuD7BVnYtdbLB
tLOeVHH65MQz96ws1kv5j/M/ypVp8D9623FRKwcv4/68Np5MpU5HRf24T9Gb
Tn4xTbNy9nqjixT+HER3q37IbC6Y6he+lr2T5ZCVl1XcdKnIqiS2+3vmH27z
rDzQ9VKZoTeM+/Ka/nKlP5yL/1byGZ8bsrCZeUsyH9+9x2d+mB8Pr987/kSs
8d1jJ6Xf3HDF3OUlYny4QbEV4eeSk7lrltNu8yI28ot2N49/uG98h7Go0n9e
UOHogEHP15F/yYLem88a3zt1VfbAQW2mVJzVKpZm3jv94Otc4z78RWVv7O7V
OGnIhXCq0sBtU1RKPPuH9SnAmcxcemNg0f0b73GPuRdrLEr112PvlHz4qsFD
vj8xemmH3+No14Olbrvye/DVPW6zPp2KpZKe34oVj71JC7T+qqr+9Py5gLJ3
itXkN0PJjzKnlx/V1uR1VsmLfksvD8qj8ftY8UtPNP5mKf70fHya8keU6ZGy
LydlXzRNs68Cyr7Iu4T7+lPVY3gq/bR4+iUL1dLsJ1jZD0Vr9jNR2Q8JeyBh
DyT0m4R+k9BXEvpKQv9I+FOq9+Kry9msb6lyQEgN337GeS3Nv9Ka4ZGN6ptT
aMCAj0v+tphp9dbtU665pdCl8BonpxQz7nF+Ufs13FVbD0xR64HsqcljmpIH
4/mL6nl9n7Wo2t/hS9p651G13smmomWLrqxl/D2za5p+5Fb6oevPq4dp+kMP
NX1rqfSNumn6NkPpm37u4sSzwOF7jvqS2C+k4cdfRX6YbnwvoYa2/m1W69/G
PqXanyR/bb1+ilqvp+3p7ZFWpl+vpzt26eyPnmrr9dPVej2J/U1q1MGlbtLP
xvcUymrr9dFqvZ6yafsTIWp/gqpq/ry28uc0+VnmiiuaGd9PEP6ZxP4tCX9L
Yj+XhP8ksb9Lwh+S2O+liEFtOlyf4afPl8T+CQn/qO+/z2syp1bPK1Zq09GU
9Xio2eZ+/eZtK1uFXLZy7TyNUzrvMu7TYz/vjF/afh59ino1ZuReM9uf+Nuv
/+F9+j73wvsNKybGWzlz96/nPb+n2vXBLNV/ZDPuz7uresqRfr2a66e3H3bx
tn9e7aZxf/64lh+5qfyI5mj5EMazaLUm70r3NPIaPFft4Z/jnP9Iprzp80ma
eKpE9alvTVxt3LjsAZ3M/KJHdMTjhiabc1rNRvjVGLzSuE+vrafx4vT6wGI8
eFLD8u7vlz2nrfbldvt8Mr6Pzb85Hx6bJTVvvd+ary2IpB/d5m15sNPM/1S5
e/3ur8Z9eOTx//x+5vTZoWbueKZc/feOqfZ5J/Fx7AfjfnyjYfMj61R7x2t8
qkblTk6kEgfrOf9e2LgP/67tnEpLU+fhz5YMmhtW3/ie2LDqfomntz/nES4O
1XIvML5zrK1PslifZLE+yc9Mxe6v8ntJPbvdCiy/M5H73Crrse/sK92P4XzG
640TwnzKJbKTZn/IXz80utSs8o9ELpT7U99PLeL19fUfav2G8zrO+lDczfge
3DjNnwDPaurWZc8aMzm/O/7xcoTxXZT3an2W48pOvND7svG9s59rjPy5598W
ej3b4a1/gxguGuH8uWER4767vi75wRrU8WsUd748+frUiYl0oGHjwpaGxr29
z6Z37bc6RnJQo+uzTg836XKDvvySv+2jJaODuXCmdu8D3M3sktii+6fXF3W9
6qvWS7n6X2FdKw0z7rcf/DrpxdpLJo7bMKfTlZzP6LHWv7yX0VD1TwUL9Ri6
v2Yid5rYJHZl4gtd7h33Fqv+89gX5Nhj3tolLY3vny3rfTLTx5pmuvCP865Z
HV9QhXflV6wcZ9xnh3zClHyosCYf+FHI5zclH3qsjX8vNf7USht/eT7nlRp/
Gpve3uiRZm/pv4eVxE2VvdH69PZByZp9oL2wD7ru5rDd504C7dvzbE6yu7EO
X1Gtv1KPwXGmTYnGffb7UZ7Ot1PnEeY2FaOzHjTRQ3YLSXkSzXseFT444rZx
P71rgSCPn25Y5Howtdb8k7yv3nrWp22bA43vTVyJ79x7U0Xj715Y7Rbs9h5k
0tc7//47q3ehr7H6fGLqrNwbIv0iuI7mf3FOEf72f8fT/K3e/9K8Jwe89IzS
50u3Zh0bOcjTuC8+olP1KdufGffDx62sO39VJeM+eEjdaysb7zTu922d+LLI
PxeMe9oVG18YFJtkfN+l17Od7V7GGd9zqddubWjg8dR58fSA2Mw7jfvcdVrE
/+m50EJj9t621szsz5O1epxrq63VL1H11O/o1PmrKkfzpgkJk1f8msSrXpef
YHaJYsehA4pOdU/i6zUcH9knv+WOlq5BUadNnPXuriXbnvjS7ZwthwW9M/Ht
/UOHZy9u5prViyUPOR7DsRW6jX00PoVpr8Ottg1iecPRMrsifKP4zJwhVy7m
jNDlt0zJj+2ivhRY+OoN/+lS/cunX6P4pnYe5bo6j8L5hl25n31KKHs13Jo3
x3vjvrcmb3bf8qpbbEgQP/rs2rDiiGgOSRhdcHzOJ9zJNL3RqaPRnD/9eRYO
fvnLotWfH/Nw+zb+f16IZjFenBAd+djp4B1+kGlC1uDX0ex3s8Pxvj4X+Zp1
yS0KjuYhC9Odh2EfnyrRFX+6wKtqhHhtDYpmMd7s8XZlUSq/grbV2Vr8xapo
3jtx3bKKXmeoQsvKhxzaRvMO7TxNfXWehkdnGt/X/9lflJSwsNaT98b5dE1f
uErx8pcCvt6js+Xn78zvGMXRxXyf1Rlg3AefQQc/X6yWYvO9rrX9fO+fCXnE
5261H1umoPEdg7MaBt1TtOfl97iWqed1e3NT9kJrtfH1VuNLhbTxnK3Gk2Zr
4/NQjQ9FaOPTUY0PhaaXNyWklzcFhin5bVXyowWa/Coq+VExTR7nlTz0/YX3
yr7pkaafpZV+UpSmny2Ufhp/d0H5Dxqq2cN6ZQ+0QrOHxsoeyC/fmF4eLcPZ
5aXj5cGDTfr6yWXlb+iCZi+dlL2Q8D9UOL390PVVP0XHr35KGz5drlz1cxI9
0vzhXuUP9XPi5ubT/96QYuGmM1b6ZQ0w7n8jjviVHB07+LmFvdy2Zr4YZdwH
h9890GaBz/oXqfmQlq/J873VVb6mnzc4kGv9Pz3fJbKHdl6jqDqvwTc1/tsp
/jkg/XkNXjF/QKG2/e9Q8ImlzQdmT9bPxxY3d1q+ximZH2j+36T8vx7/81ep
uqVrN2P9rU6Zs/lKV4nhFdp5k1vqvIlO35R9jlW7DQ9n56BZu6fWMO6ReWvn
WVAW1uJ1OxWv9bzm2sgEjwkfXvELu3vj8141cYe9Naadz2vc9zqu5lf6/E3e
7361ukT+xfdfUcyEHqOafQhj/x327Uedj6QQu0cDarWN0NcVQNeAh/U9w4ZF
Urb0/kyfv/wzq+37fJ2j6W56/2ScA3Os+eNUqn3s1vzNSuVv9PnLSsdCJb/t
iKbtmv9IUP6Dhof2Lj/XybjP/Yd2fukvdX6JOmr51mGVb1GJGTVv1Rxt3ANG
vuei8j2K1vI7eU/Ke7Fv0RuBsbRw84b3lwok057RQQVXdTPi/nY7l6R3jZKo
X/r8lxb/9HWxVx7j74YgHh60zzW52YBk6nhjbVw2r3ibe9yFl1er9U+q/UB/
Cij9oXxOOX1fDLFQ6arHg25nNtPh0aUPVr9qtrkfkLPRoxyuNY371u02kdPB
QSk0fMjW3CUu2t6/TlH2R2J+QcIeSdgjrU0/P6Cz6e2ThH1Sp/TzDVqS/nyx
Pi6Oav5Bm6fWsy/qYebjHtU/u+07z/nCPlvybzfziemnnKe4neBhb1sn5x9u
4T3lrhc070ydL2vnLSer85ZcpdO063cCzFwwxf2I61sr59fkV0rJT9/PdlHy
YVdNPogLyLdHqnybqmn5Newe9L1W9FFejT6Loo/WDrOrdXSdWS/7VxmWs/EN
C3c/WzCzz0TjvnUOtX8h57e0TjvfVU6d72IfzZ+uV/5Uz+N7xv4+bP3eJK48
vbNn77tBet77Py1/3a3yV+6r5auo76LpH/wl9M9e6R+7a/q+S+m7vv/hpeyB
S2r2hPsQy7X5wGk1H2Bx3pkrafMDeV86VPkbDtfivbxndEn5M3qnze8Kq/kd
ZdHmc7rdfHtWPlduk74uCj5nOxRpPSwwjo5q9gI/DH5yKHvh++WTb1lLGt/n
rzuxW/d7sWY6EXjMqen3IL6n1YM+1Hurev38f4+N/WrUCrfSmOLHpqxqG8cd
27j2upwjkVnzB3ocT+8PONFr+Z0OLhYeubhf6f+FRnEpjR+scwp+uH+XJQfM
NeN4+PbN70Oj3nKC5q8fKX/NHW+0fHY+6yvKlmdwx6U3wjhTwVvWaT+HU937
ucptCnjF5zzO7TnzOpLy5LMm9XUO5jMJvmEHi8XQnDLlYtbdCuCzWr29qqc+
2vtGqveRi9Z/DtU/JWj0j1L007UZQ/62jw+ipZxQIa9XBLmmlwc5WsZ1KdM0
moqXrtGg3adYmq/F11AVXyloXYOyjR5aaPeXpExlzt5h4FMK0/s+t6eOdzDm
EV4a/e6KfvpWQPHbSPFLzR3umPLZJ9PjpvkWNOgfRgPHXOpw/JyVPfY3dS3b
MII6Fd7g8GB2HI2Ne9pw7/Vo6vf1xM9Hx1jp+U27g+N8rCwwNdboL6ro5y7a
86PV8+ykve+Beh8f9W2WvcUzK9XIHL1i9jyrrv+Hc5bbVrSghcZ+HRxurmym
P5blfzHnmVn304dUPR+/0HXfh7vG90SX1HcplqW5cR/LR5P3EiVv/b7P+ezT
XBtfNFGK/9WtLfNaeMCJydlK37bS/wGEA+Nl
    "], {{
      {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmFtwVlcVx8/J951zPi7j2OpAaW0t0FLAhAR4qFLtFKIdLUgIYH0p2kJD
1UJSbtpCIAnF0bFAoCoGtIqOdUZebPHBUWnrpRdbpfYCg1rFqVUKCSGBQOUi
4P/H+mfKw8pe2Wftvddel/9a+xu9sGVuc1WSJP9Lk6SkcZv+fFv0DfH7NHdE
/H0aj2ncIrpf/PQsSe4SzZBMp+dni19YSZJX9f2cvu0TPST+J0V832qZe9NY
O118Jr5V4yOitiJk1mk8qPG1NGS79e3zombRS0Xo86LGkRpTfV+s+XdETaKV
ordF15eTpEHjSc4TrUBG8idF3xU/uhwy6FORztXih2is0n4TRKs0P2D5Hd6z
0/pzf/gF4g9Ij1PoqvusFH1Shlykff6bxnmcxR6nvM8J0SLRclE/9hItEx0V
3S1qER0T3SN6QHRY9DnRUtGMLOw+x37BJx8Xf8bfsePr2ENUn4QfsB92Pmv7
rYXX3BrR98Xv1/gF0SfEL0njTkt81oLsXT8vsL/OWcd1rNXcWq3ZVYSvmtKI
hzRPkhtkz7Ls0KVxTyl8cQ5fi34g/i3Nz0/i3Oez0GGv9jmjcbXoMc0fSkOX
NaJ5kjmg/z+TxJ1ZO4+YtZ3aRKfTiLfv2Vf4jPu8qn1H6P+c2LE90Qef4yN8
1eMYw7bcYa6oUfRRfT8uGiXaJt8Okx7/lvws8T8XHUTvLOQ6dN+K7t6Lnhpf
1Pwtmm+vRE6t0XnL0lhDrN4pejyPuFiXxXr2+VARa1g7UfybacQcd5kr+dk6
d7G+Z+K7Nb+8Erohhw9J5iW23exKnDtPsk+Ww1/Yv03/94sfpvEN7K6z/q7x
r6LT4v9WxBmc9RXpNp97a/3tSfgKHt+tzkJ/7vEPrTmrtQc11mSRY19yfHDu
ldqvJYu4BCd+qfk3JH9R48tFxOIK5xC+5ix0bXWsTtC3j+FX/d8hmR7ubn/j
d3Lt10Xszzl875Lco5r/YDnmieHcdmvNIz9ec9zi22223TbxU7Xmikro8zPr
9HQp5JBhHO54eKYUPN8/rDW/kPyP8tAV/pDzdb9zbabmdldFDJCv+5zLNUXc
cb/Ghjzk7tV+teInir9Z/IYk7v1wEnmy2jbARmucOx+phDzruP9KzW/VuL4q
/M7/XXnY+FMaq7PIVfKCcbvotiRyt8v8IttiZh65/rpx5stZ5ENTJfz5VCnk
G7yenFqhb32SH5rH2TuT0KfTPkb3C8bFDtEm3417bfSIf58oh/wW0UXLsgYb
T7SdN3s/1l8oQpfNGcCk+ydRC8jnKuP8b8gx/f+MxtV5xMB68T8tRw3YYfwh
B7AX+1BnsD+xw1rsUeQRc/fprsN8FnckV1gL5hFD87wPOXfGWDzc/nzU90JH
1nc7xvE5eXna+EienTWenjFGLjHOUweoB/iBuB/E7bWuAaeSqIlgaSUN7MRm
Py4ijh8vwhftSdSmIg2832S7brbffmgsApOIhf+UIpbPex3r95ajl1hmrCH2
vlgJP2KbnfZ/p33KWvQB01lHf0AfMks6fVb/T9Pa54o469kiaiiy1MsTPpea
etj2ADP7HO/Ylhwd5jw96dihHr9jm2OXo7YT9aClKs69P4m6TO27O4m+gxgA
x7ttb+pKv2SvKkVvQm1a5zV5Gj1O62UxjT2JCeIBX3SXAh/ACe6+zXb7uu65
Q/zXNB5Povah8/ZSzGOfO/LAZWrpliz0fdD4hE/BqH+Vwk/EKj3JgPuT9iK+
V2mPQ6XAIvyYWQ9iqy+JeottOyzPugHHEXajx+t0f1ifRfxNd7zdaVtRM2e7
blLf+m2rfUXc9ZUsbINu2AvcnWnsJYfmOY+o1432BTV9jv3Vm0TtJh6o/w32
C7rsMS6BX+DY9jzw4lK9TGIkLsB2aniXdSCXiU2wZojxhRgdPoipSfhloW20
3LH2sPNrk+NgaBp7bHFObXROUr/Jc+oS+7c7H6qMCcQZPcjV7kMec+xs9p6d
zjX8/LRjFfuxP/4dcLzMN1FnqEHfcYwRP63liKde+73L84zbzVMTulzT8S89
Ijad7ncA/qi3DeY6Zu4x32tfNfp7vfXg2wz/D972Ok/mOzeIrWrXRGrjhiL0
/qrGG9LISfL/avOccU0aZw/6o8/nMN9vnZDvNf+BNLAD+XHmwYXxaeAC9r82
DbzAjtelEdODPdwp58B1lh/E1gHfg7UDnues45f547h1vNG6gV/0SfRL71c8
vEf8ZDA0i3pRV46agR+o2fiCXptc4h1Ez0Xvdb2/11iGWsE+1Jr35dGL/7MI
rBuVht16bRf4m3xfMPGY57HVeyvRF9EfsQd8q+vRlHKcg69uKkfvM+j7Rp9z
1Hna6dglF7Y6l8iZqa6F650nw5xjU9LgOxz3Qxz3k9PYp905UXF+1qUhQ572
+GzOBauvMk+ukPPkyxHPgxVX5vEm+IvsU5vGnuQvtbemHL3muHL06vQPo12D
wZCRadQe6k6VbDVGchfcC49x7vCOHlsOvARzwdJayc7PIw8bxI+1ragd1BPO
W+X9wTX0HJPGfZqt+5Hk3TcMfIN1Q5+llun2WuzRc1lO9ngdccP+vHMP+zzk
/5AFrr/i98GkctjjlOOe2D7puCF3Lpq/9O52LsFfsM/aPc/aJvuzzvMLjC3T
vee13n+Szr5VZ5fzyBtyiZztd24vdM4hT36dsMwi3wVbLLFuUxxLxM5k88TX
FMce/qxOo/aBh/DUbvqrGvPUdHgwnP5qknmwfZJjhj6B3xPAELByht/v9Aa1
lqGfHG8ZvoGnjdYBnZc6P6a6Hpx3fLc53mvNJ5ZZbz2Jj2bLgy/LbJNx5qf5
TTf49mZ8LgtcpgehRvyqiDfSs1m8n3lHZxqH5NFX0deD3fQLrOO3AuTBdIhe
g++cM81973DeM/r/W1nUM+oa/S24xjz9baWI+ZezwO9rjD+DuEZs06dPK8W7
lz6T9yGYQ90c5T2xM3WCGnHMfItj5kbPd9tWSx2f4xzD5N9Y2/Cc+RbH513+
bQQdb/VZ4B460McUReTtS/5tYJSxAl1HuEe6xb0PuD3SfeMqx8xI88RLvXMB
Hc86l4dWAou+mUWtp3ZSN992zoI/2GaE7UOO0XNxFu803mtz8hiZp45R57vc
A4BP/BYHRp3PAg86Ne4qx1m8iXjn8N55KIt3dp8xnN8Zdvu3BmrCZNcFalet
6xf9OG+BnUm8BZ70u26v6wZ5t9vzyLRlMa7LXW/SeIvw/QnLcB41iX2oc5xD
r7TVZ1BP6M16rCc1incj59Hncjbn/j6Ldyy/TzxfRE/8QhG+3evfcPb4N8qn
NP62iN76d0XE+Vv+bQS7XvqtJom3aYvfp7z7Z/ntf7Pf6ZN0r4tZ1IY/a5/Z
fu/M8jt0l3sjdD1k+7Bfs/ek3zhgP9ZVohfkPfeg3wKfLuL7TJ/L3i1+M/P7
AvOrJPvHIt4hfypi7xbXR95s+GuNf/t40zGWG/M2GtfJnw5jG7nXZlwkf8C6
s+5HXsgiz5AHi+hTqt23FP79lDpMjoJfDzh32ZMcBCOoP7ylqEU1rkd1lm9P
4s1/m8bmLHCa3EFXMDIxljKfG8/He5461eW3JzlFHaNmgAlTzA++zfkdarnx
vrAtJhiDwPPFzucmz8OT15yNzAbjCvYBZx6xTbEnfQZ2oIen/mT2Ozy1AZ15
19S7Dyf/+H1npdejDz3R/wEwX/1O
          "]], PolygonBox[CompressedData["
1:eJwtlUtsVVUUhvftuefsA/iMhhAmhEckVCyIE6loGBkUaI1IHGO0EJugoED6
oE1LecQJIFraJibVRkUmJDggAQsqhQIi0hciIASDJpaokCBgGx7fn9/Byl3/
evx77b3WOnfyG++8urIkhFCFFJHSGMJzSQjTAIUshGPg5YUQ/sR2Ar0/DeFf
9BvIGfDxaN8gMavxvUTOi/CUozfnIbzH7xC+YWJ+IPZJZB76E/AnxA6Bnwev
ImYQvYH4juAzfgZvRjrQ25FN8iPb0acqP3cNquUmMkDuVqQiOKYR3wByPfGZ
P+Lr4swPgjm34LuA/Idex/m7ojnENRP+HP5ZyBV8h7DNRh+T23cLW0TvJ+da
4jc7Tu67SD++i+Bv8JUT8zp6KY88F30FsrvoO9YSe5qYauLHE9OHnkbr5cgM
9FPETEx8B92lSP0vJLbl4MNIFfm/g4+gnyB+QuKaVJt6ot78AT4K7omOHcC2
Cl87fAtK3LO2zGfq7FZsteBK6q2n3r+Iz8GH8F9OfEfd9R74PHg++XfRe6PP
Uk2qrY6cluCay8AHkbcK5vgW/RxyG70W25fRNam237B9B64nf7hgDnFdwjYK
Xo8MEfsg9c0uuofnoznENQvbA7l7qt4+DX4IvDJ1re3gZeDPo3tbjW0bvo9S
54pT3KdTz2YduAK8NPNbqIfq5cepuecgD+eeSc3m33Dew1cN3gvuhL8RvCQz
Vyv+DZy9EdmZeCY1m73EvA3/FGJKyN0Bfgq9DBkHTpHpRe/MzOgd0i6p5xHc
hXQn7slhcr8A1xTMMZbcxzO/nWpSbZ2Zd7+Cfn+KXsA2uegdukP+yejd1TdA
3wLVoFrUs1/AP0XfVTN8jPhP4PgarkXIWnAA70VfiFRmvrPurju3aJ5zf2tU
g2rRN0PfjhXwvQxeHN0b7VCFeonvGr5m+D5E/0ozAn4GjkfI3Y6tqcQzk5Lf
kPntldOYOUe5/4DH6LzoWdeON6GXZd7VfcizuXuq3o5w/q/4z0bvvt50EK7u
6F1/E7xfenSsalJtn2XmUs/UO82cZk89HiH/yP931TfyFPHfR8++dkS7MjZz
rW1w9BG7JvVb7kE68D2a++7aiccy2+TTTr+f+pupb6d2+LXMHOK6qu8XeF3q
3qtn6l1Nap/eUG95N/UsaiY0G6PgPvyT9GeRW6Rr5jR7PanfQjEHwK9kngXN
gGbhPmeN3C0=
          "]]}]}, 
      {RGBColor[0.5602746946284173, 0.5006077201569518, 0.48971072264655346`],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmnv0llWVx5/f+z6X1yahQKgVzixLRM1Z6UyS2kpxplFAMSVLNFLQWWu8
pVamoimoXIQuIwooXhK5CJi3mgC5OqIoclEQTbQk0LwlU1YqZV6Y74fv19Uf
53fOe57z7LPPPvvy3fv5ffqMC756fqsoijf0p61+YVkUd6n9XOOddVF8o6so
llVF8Zjm+qm/WPO9Ne5V+tl+mttX7QKN99GzU9T3U/+Unm9Su7jL7+2bd7dp
bqvaSM0fpN8j1P9L4efQelm/5+n5XLVZmv+dfk9XP0ntQo3Hq5+q1l9r+4jh
bpobq7XDxf831EaonaY2QWvubMS31vymMS/Q5N2nS9OD7mKtPaHlfeaX3vsi
jduNeXxQ++yj1lftvC6fk/PAR988+63mPqv39lcbpfFHOkXxkPadKxrPNJ7b
lPf3jhya2vs8qd/dasvpTPXd9O6jene+3vuoxqs0nqfxDtF+W+2WtuV1RuQH
D3uH9h/0/Ea10zU+tbSMkM87onuy+vs5R+Exd/Ve7ftaovkbtP5L6o/T/F/V
jtb8Oeovk2wOaPk38obmZdyL+oGa+y/RWFd6fInmd1Te/6HKZ+Asz9NrzSNq
Z+Wu+0VnTlL/E80/g9w03k1tqd55QXO3qh2m9Ru6fF7OXet5pbZIa0r1bbUF
Gj+sPV5Sv1r9A2rbNH5I/XWiMbm0nh1e+YycdamePa81K9T/Ws/OVhsg+lvb
ls3BhfmCh4GF+VmnNYM0vlVnHiyZDFH/M/0eq/n71HdEu1FbLBr/UVt/VqIf
bdtEf+Sq30epvcq9isYa1qhNFf0pubuPday3u/RX7TWN16v/IzahtkVreojG
x9Ue0bM91PdUW61xb/W91NZo/DH13dUe1niZ9tqBjqjdKxpvxq7WlLZt7u50
7LL0fb+o5ydr7ky1suUzcta/id5GjU8Xj9003l1tpej/Qu+1tO5OrXlfz8eo
zda4l569UlivXtaamWqDC+s0uv0r9Zvjc7D39zR3k/r5aldqbqd+nyi652q/
90RzD8n1Hs3frTZav4/V/sdUMOk7GB0+0ce9Kp/rRe3xvuhsU399+Pmm2lDR
ukzvHSfaP8fetc/I2joyKLbwfJfH6Ae/eXeI2mGiM7j6+/PBWT+xsM3hX9CX
AZV15s/a50+l90fnj1A7tLA8WINM0Al04wuF1+6l94dzNPUHxB7xu0dHfxZn
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
9saYMzHPt0nO9v9rk4tG
          "]], PolygonBox[CompressedData["
1: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
tF5GmnpYfOXsX+VJ5g8A/w9jvceX
          "]]}]}, 
      {RGBColor[0.855693035430637, 0.6044288622919172, 0.3160462667117022], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
          "]], 
         PolygonBox[CompressedData["
1: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

          "]]}]}, 
      {RGBColor[0.9401136383758557, 0.7202840959396392, 0.4143522789651525], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
          "]], 
         PolygonBox[CompressedData["
1:eJwtlldslmUYhr9+/f/3/VQSRBkCQi2zLCN1RKQQQEapB0ZaQIKLsgoaEJXh
PjEpMg6EOgARNUQgQEUZJyYYGWoUAXFQBDEsgSAbxaAkXrc3B/f/P/f7PO98
1ldcPXXYlDRJkuUgB9rHJLmrMEnOMXggJMlN8E7wj8HsfJLMg7+PvAzMRW4C
6gpsczPyEFCJfIL5e5n/KXMK4Am4BD8HMuhV9OeRyyDj2Hg8KIU/z/w5Whu8
gDyB+dclXuNxeAfsK7BdyJ7tkWcwVovuOcaGML8Gvh7dctafhHwFtETXGvzJ
Wg/Dx+gu2IxEnsGcJqy/Ej4TuTdjQ9EfYf4e+ChQXeg5w9HdB8qRD6Hfja4L
OJD4zuXoDsLPo7sIPsn7jfRWvdi/FbpTgKHkCvo/kLtzhyp0I0A3+Fbws94O
bENeDbYnPsMIJv7Nmjs463TshzL3L/Qpuqk6o3zF2IM5n0ln05vr7WWznrm/
BZ+tBv4o9r/DZXKZseMIbzK2Ct1KUIdcxlgvdB+CKviL0b4pY87b6MaC8ejm
g1HRb6K36YDNYd0ftME24f9VznYWmynoHuIOZ5CrwTT4M2CsYgu7OcxvD7qy
VjvGeqL7lzu9zPzXwGhsDqOvQDcuem5rtpiL/UYwEt08sAl5JvrZhY4RxcoE
8CxyI+wn5u1j+bqEsaN531l3H8x+HdFNB2+g/xGMQf9B3mvvAV+gKwEVhY6Z
Mub2hU/KeY/x8G/g+7HNwTfqbuCl1DmmXNsMvxG5MSiIzjHl2hZs1jK3H+iP
vBIM5O6Hwv9PmVyCHw7OMeVaD+Ycy3sP7dWYM5xjvcXwXYl9+hb8sWjfaw2t
dQO8CN4flCK/h+IXdDvhaxW78P3wXfB6+OfwJshPs/4gzrMUvg/9d4ytQT85
b1/oTtPg6+AXUueEcuP66NzTno2Q30XfgP0O+GrlfnCs1bB+H+Qi1Qv4MtCS
/RYqZxL7dFa0D+SL3WAzcjPG9ib2SR/kOxj7Et0PYAvy/HCtNuTsqxVgM3yD
4llvD98G3wrqkXuy51fInUF35WJwbqpmqHbUgQGpz6SzaY7mbgfrkIdGz1XM
KnaXXItd7aG9PoKfRN4JPgs+o86qPXsGj0l3CqzAtmnmWlLLGzbA26LvA+8N
mmXOMTlXMdeJvf+Jrn2bsD/L+BrsR6SuKaoti6Lfthl4R/5XDiK3A0uRN2Az
N3VOjUZeGB2bWmMBcivVkNQx0BL5ZHAtUY07oVoTXOtVwy8g34rieOoYa616
pnjGV5Wc71vkM8G1Udc4jXwLNsdSx0gL5ObgaGofy9f7gt9GNagBuanum7on
HeG+RdF3WQI/nneOKdcUw4rlV9joKu/zPeu9Dh8cnUuK+UHIvwb3wgrmf61a
GF3blFP36izBuagaeoSfjplric7QObhmqHaMUn9Dtwi+JXFMTw6uoaqlDfI5
cnnmXqYar1r/ZHCvK2esCF0bMCTnHqRepBqlWiWf1Wq9aF/Kpi22w1Uvc67B
VZlzWrktnw2IzmnltnwyULGa+a3UQ0qQizO/jXpuO+Q7M9+lBPsHomuyarPe
sBh+gjOXFrpm3wYfHd1bVfMeia4RqhXyab/onqXepZ7whHpBcC9Rzip3a1hv
VqFj5HJwjCvWy3Qn3T1zLVKNvD9zDiuX9Y0yX/0w+O3q4YvhZ9CvKnBNOg1f
EFxblcP9g3NKuaWcasF61fCfUvcA9YLz0bVV3xgTkS+hb5XzN4a+NbSH9trK
GWrRNc98Vvlcvr8QHevq8ReRu6KvzPnN9HY94AcTfxPcjtwlcy+UTbfMNVK1
UjnQV7Ea7IsJqpfyT7Csbyp9Ww2L7rXq4ZXRNVW1VT1XvffuzLVBMXJP5m8w
fYsp56cgd4iOfb1Zx+hvFH2rqEc/pbcN/hbRN5u+3f4DYIpM9A==
          "]]}]}, 
      {RGBColor[0.9873050666190217, 0.8382626665475543, 0.5606457065189674], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1lU1sVGUUhu9M79x7N5hICOzQIpIA7diZgWkLM22MK8VEaKxhgoFSkdJK
MC1UV2piTNRA614TIws1SgIuqBv/TUhqXRB/FhYqmKhJMeJPohvd+D6el2RO
zpnzne/9zs/7fbd7/MmRE+UkSS5JuiQLpSS5KLlN9qwcT0nWyN6bJ8lvCny3
kiSfZUnyo3xnZS9IRhS/lEXs046fzMM+lsc6WGC+o/ibwhkqkuQBrT0s/wuy
5+X7SnJS8mkW9ifSH/sszvxQcln+j6TvE+YvsndLd4RzRDiPyV8XFvUcroRg
z8r/XRbxy9Jvy3+79n0ge1G+XyVHJb/LPyT9r/A+11qP7D7ppnO+R/JmOfpQ
k1x1PuS1R3tGlUND57cct+AzOOstYRyQvST/ResvJfvB8lmc+X4W/gXpg9rT
K3ut9r+n/9+qlvPSW+XrSH7S/7ulq5IfZD+jsxvKYVMeeYM5LX2pFHVtTKKG
Re85b8wL0i9JWoo7Kb2qc1+XvU14f3h+zPnvSmD9I9+A9LQwvnZ/6fN4JfLq
7woOIc2u2H9Oa7ukBxT7XBH+0/K9KFmvPa8KczxVH9OomRrbzvkL95O+MkNm
zdz7hbUDDkhvkH7Z+WwqAqe7CG7BsfuFvz8N+5jiXpE95/+cRzwYE8rnlHxH
FX9HEZhPCH9LHjmT+5EsaqEmZv6IZF0puDtTjt5MsU/ycxK4057jvDlODHlM
lj0n7yWmXQRmbxY+4pkN/ZgyJtjHbS+n4YcPVXMZPoDNGf3a+5Dyb8jekUXd
Z9JYa+qsR2XvlO50xQzoR517nQYPyKWvHDVWFTdKDL2pxJ5nZW8X7mZqkd0u
Ba+5t0vm+GAp8PZJrieRb9s5n8gCvy49JsyVNHgKZ8kNLuzMIn/quCrflTT+
7zJv4e9Nc5u93ANy434Ma73uPhyqxHrV97PmHLjTDd9r5lH32wIm9x+eXfB9
ea0S65PGZHYbzL1B50m+1EsfqXnRc6ka7/s0MNueITyn7hnPuteY8AEOrjd+
23eDnHkDyfGbJPIZ9v+m78W+PHrPPOg/c4f3E75PNffgXq/r9z8n4AZ10WO4
RdxEHu/7n36z58wf7i25bdGZQ5LdsueyyGPYuXHmvM+9bN7C39U09JS5T/1r
/W6M+BvEvtPeS8+uuW+1SswWng+6hnX+JtAX3lz6Thwx6LrftUnPt8e8bLv2
bVlw8w1j1xxfNz9b4nZPFu9IrYj+kgvv0Bm/J+RJ3+Aob0TH7wt4z6fxPjK/
7UXwY2sR73zVMfR41m8mXGWNnsz4jRiwf8w8Zj6rvv/oG+5pn2ujJ9RdMw9X
PVNyo59N47TMBXr+YBqcg3/MAj98a7i2mrkDDv6O47DvKmL/Zt7dImoele7O
407yjaKP5NfwN+6Q6+e7wvflL/2/M4/e8y3ie9L0N+XxPDgG1+jrQc9q2W8C
dd1wndjH/S7xPs2b//B3zOfSWzhFL1ruyYrtIc/q1t0cc3zD7wr5rXgvPfwP
bGkFSg==
          "]], PolygonBox[CompressedData["
1:eJwlkrtPlFEQxa8X9n5fY2GjpSwSDLgacXEVFukVC7NhCatUCIoBQYWIhbGg
IyD/gInRwvjoBLUz0pgoFobEQiXRwkrjs7Cy8XdyipOcMzN3XneKozO16RhC
6APN4GgKoXdbCFuI+TyEKrqbgE/oa+hL6Cr+saYQGlkIZ5P5N2Lew5fBdvLM
Y7uA/x/ox/eSN38LIUxk9l0F5+F1ci6Qu4OYbng773fCF8FudBnUiVWPh3L3
pN7KGHqIbUOfRO9Ct8DHsU3Cv2K7ju4HP6JnqOC7DErRM2gW1VTtEeIr8Bug
Qb0yKGaeWbP3Ed9L/HPwNrqGaj0Fb+Ab4Az8I5iKjtmCt2bOdZv3LfARbI3o
mQfJfRoswVfAJr4ZMByd8xn8Djv7zOxt6Cn1mzz7T3CKfBvoGrkr1GhHLxXM
j4C9mXMq9yD6BPou/i/BNVRLMYpVT+pNO9QuB3jTCl/F9ip6hw8L3ql2qxsZ
w/ckefYe9EX1Bg6ih8h5jNjZ5N3NYpuDF3PnHgXV3BDXzhfJX8o9ax3bAXgX
GIZPYHvM+5u6v+gb06114K81e0ed6OOZZ9WbEvpw7r/VDf4i/wq2e/DXYA2+
P7lX3dhA5hk0i2aYhn9Ivu0d2O7z/k/m29XOf8MfYPsevSPt6hy2uSb3OA5/
VPBfqaZqvwCb4uAKvDP3bWiGffDJ5NvXTe/JvTPtTm/Wk3egXeiGu+C3yP8u
+IZ0S/8B0axu7w==
          "]]}]}, 
      {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNUDsOQVEQPc/j0inEAsQWePFJROQtQJR+hRAVEiQU1sDbgUgUKKmFdVBZ
gS04k5lCMXfOnPncM5MbzFrTGIA8zaf1+PRpoQc8HRAxuaSf0B/JNWh7T/m6
pznBC6vZWV3AeBwHaimgSK7LmTVPcxILPieADP2VtUPr37D+TfwlftGXndav
yFeIA+I18Y04y96tU73ChxYLf0moTtH4geYPMeUC86HpES1pqA7Rc2JvMwl0
OLdAbmTa7k73P1q9zIv+Zu3tr7avvaJD9m7b7iu7RcnpnjJzZHeSu8vfcr+i
3XDuVP/D6c6iu0r8A93XL1k=
          "]], 
         PolygonBox[{{1451, 655, 621, 1636}, {1672, 673, 566, 1594}, {1873, 
          861, 1127, 1590}, {1595, 566, 862, 1591}, {1651, 656, 673, 1672}, {
          1725, 621, 322, 1724}, {1724, 322, 751, 1755}, {1592, 565, 655, 
          1451}, {1589, 860, 565, 1593}, {1588, 859, 858, 1871}, {1450, 277, 
          859, 1872}, {1591, 862, 861, 1873}, {1871, 858, 860, 1589}, {1727, 
          320, 656, 1728}, {2110, 1127, 275, 1449}}]}]}}, {{}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
         LineBox[{1448, 1714, 1449, 2110, 1590, 1873, 1591, 1595, 2168, 1594, 
          1672, 1651, 1652, 1728, 1727, 1650}], 
         LineBox[{1715, 1678, 1450, 1872, 1588, 1871, 1589, 1593, 2167, 1592, 
          1451, 1636, 2172, 1637, 1725, 1724, 1755, 1754}]},
        "2.5`"],
       Annotation[#, 2.5, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
         LineBox[{1378, 1653, 1377, 2098, 2099, 1867, 1581, 2109, 1587, 2108, 
          1586, 1646, 1645, 1716, 1627, 1717, 1718, 1647, 1441, 1729, 1726}], 
         LineBox[{1383, 1894, 1893, 1598, 1677, 1676, 1897, 1896, 1895, 2033, 
          2032, 1461, 1738, 1830, 2175, 1419, 1831, 1628, 2132, 2133, 2100, 
          2102, 2101, 1519, 2043, 1525, 2042, 1524}], 
         LineBox[{1415, 1946, 1574, 2079, 1643, 2083, 2084, 2080, 2082, 2081, 
          2107, 1417, 2174, 1825, 2173, 1826, 1824, 1512, 2090, 2091, 2089, 
          1578, 1440, 1644, 1579, 2092, 2094, 2093}], 
         LineBox[{1446, 1723, 1447, 1753, 1752, 1635, 1881, 1648, 1649, 1584, 
          1730, 1585, 1713, 2097, 1580, 1865, 2180, 1866, 1745, 2138, 1435, 
          1711, 1710, 1712}]},
        "2"],
       Annotation[#, 2, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwVzskug1EYBuBTieE2BImLIDG3tmVl1paIhcamNVwBdkjchmnNwhy3YJ6n
trSGLj1dPHm/4Zz/P/WJdHwmEkJIM1Udwl9NCGXOaa4NoUiJA/0hR2TI8uH8
gN0gQyzrG+SF3SWnNOqbyNl9yLzMyU15Zb8lr+Ww2Qi36jtueOCepDNP8plH
XnkhZf5eeQdv5MkxYf4pvyhQosik+ah//Ki31d9yR/7KcfMxCpU3smt+Zh5X
99Gi7pdLcplWEvokKVb00+7MqqvYU0fkvuyuC6GHTtqc65Krsp2oukOus8ac
O1kyRPUx+7Jv9MqYft58gUU29Ccc8w+RLEhJ
          "]], LineBox[CompressedData["
1:eJwV0DkzQ2EUBuBPYRkUlhAJCQpCq7LvW23GWioVNP6CZQaFNWKJUpHwW4xd
a/0bnls8857zne8k99721Y259ZIQwiaJshBuyZaGcFAewj57JJ3FKkJ4dx6X
aX2DTMlGmXO+pm6jSd8qE3JL5uyfkyUd7dCvfjD7tFej7qOXC/2ZPOWEDnd2
2Cavv6aVP/fS8ldm/F4XnXS7N+t8hjf1j3lKPc0UN/p7OcmreYtsZoK82Z0c
58UsKROMRf9rVpSjPEfvKOOMcGVWkMM8Rd9DNjBEl35QDvCo/na3w3Nm1JfR
LjG+nNfKeurYjZ7FnWP1EYes6IsUWNAvy3m5xCIfdiplNVX08A+HJTIu
          "]]},
        "1.5`"],
       Annotation[#, 1.5, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0VtMz2Ecx/GfIWwqZg6Tm3CPOV3mfEGZslWGpAt0DmUO2aLYGMoFszGR
GIacOjlsuBXdsTnmrNwQyiGH13Px3vvz/T7f5/k/v+efmFOcVtQviqJuFA6M
op+4hx5kDY6ifN6PvkFR1IwW1OEPVlnPxgZ5I0qxOSaKtuCzPcut5fI+fLN2
DddRi+/owRdrjdzEJ7gXK+xbiTw5H7+c1xzuxi38mwvCHbg13I1v8F8u1I9w
U/1PfSvsU3/lH9zNTXybT3KS35mFOZiNantqkIQi68UowcHwm/aUyQNwR+7P
d3le+GZ75/IhzMdW9QLutX6Yt5stR7J8DEeRgm3mFnOfuRQ5VV7IyViE4+pa
ZIQ34XTOCu8Q3gR19l12bkP4P9QX1MVmLvIpdOE+1uu18RoznVyPT2hHA0qs
X+Js61ecdRWn1a3hbZGDTDOreRnXh29CuZm9ZvdgqDrG2lqOQ6kcyxXYgVEY
oTeSc7EOY7BJbzTvDDivUD1OnuLMNn6sN0SejEk4oq7hahxAgpkqVGJ3+C69
V9zJHVzpvC55l1wkTzQ3U93OL/Xi5QnyDJ6Oh/IL/Th5vDyNp+KB/Fw/Vk6U
x4Z7IgHP9D/oP+WPXMXv+Qm/4Xd4i0r1+fAeXGBfpnwOZ5GqzuAlvBRpeGSu
w77X4ZtQoT4T3p7zrKfL8RiOMvUw/g/KtonP
          "]]},
        "1"],
       Annotation[#, 1, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwl09dOVFEYhuE1wMweQVHRG/DQhpxZ7sACGNQLEAsaE1AQC5ABUdQju0ZN
TFDsd4AFCyiOCtLsIPchEXxWOHjz/t+3/jV7TwZW1DbU1KdCCHn0p0PoSQzZ
EGbMtdzAz3UD/Ixf4gUOy6/4NfrwFm9wRD/A79CPQbxHoz7PH/EBn/EJTfrh
uM9DcZe3ZELo9OzNfBO3sBV7dEed3zY381652hywHfvkY/o75uO8X64x30U3
iuQUr/KcDnPezlh8J0640NlqPuVsSDduHuYsFzkr51ZuQwaN9tJ82c5J1MmJ
PGou5iZ5AV+RW3FQLpHbkYvWHdItN5fxU5//VTfNy3RLdTfkJfxE9wdTWCxf
15fyY3kSv7FIvqZfyI/kX/iJEvlqfCd+KE+Yf3CZZyTxHZHFuP6bfoy/c44f
2GnhA853mbOoNu/ks3bO4Tx65C4+g9PYIVfZG3F3In4vrMUapPX3nG/gcl7P
63gjb8I2O1WoxAn3L8X3MN9HRdxFgf2O+FuhEy3yyvjZyGAUI/Fvzd0vPMeF
7uXM7bgo/0NKN8sFPMh/sdtczxcwG++iN5n///gPys1pAA==
          "]]},
        "0.5`"],
       Annotation[#, 0.5, "Tooltip"]& ], {}, {}}}], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    PointSize[Medium], 
    PointBox[{{0.16550727710836116`, 0.07368858739595108}, {
     0.13464824318933685`, 0.14954202398584215`}, {0.074303898354803, 
     0.22868388471452056`}, {-0.032382794181396043`, 
     0.3081017058878809}, {-0.21388888888888882`, 
     0.3704664227300099}, {-0.4926902869387768, 
     0.35796044659618564`}, {-0.7754996473179878, 
     0.1648375386102261}, {-0.7754996473179879, -0.1648375386102261}, \
{-0.49269028693877703`, -0.35796044659618564`}, {-0.2138888888888892, \
-0.37046642273000996`}, {-0.03238279418139636, -0.30810170588788127`}, {
     0.07430389835480296, -0.22868388471452059`}, {
     0.13464824318933685`, -0.14954202398584204`}, {
     0.1655072771083609, -0.07368858739595108}, {0.175, 0.}}]},
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-1.2, 1.2}, {-1.2, 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7661330526632853`*^9, 3.76613313231266*^9}, 
   3.766133170530341*^9, 3.766136367499857*^9, 3.766188055762846*^9, 
   3.7663355412046824`*^9, 3.7663573053765793`*^9, 3.766392396885756*^9, 
   3.7665696373627033`*^9},
 CellLabel->
  "Out[326]=",ExpressionUUID->"7df7b7a9-09cb-485a-b01a-94622cd71a4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<power_x\>\"", "\[Rule]", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"#", "^", "2"}], "&"}], "]"}]}], ",", 
      RowBox[{"\"\<power_y\>\"", "\[Rule]", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"#", "^", "2"}], "&"}], "]"}]}], ",", 
      RowBox[{"\"\<times_x_y\>\"", "\[Rule]", 
       RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
      RowBox[{"\"\<times_x_y_B\>\"", "\[Rule]", 
       RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
      RowBox[{"\"\<times_A_x2\>\"", "\[Rule]", 
       RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
      RowBox[{"\"\<times_C_y2\>\"", "\[Rule]", 
       RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
      RowBox[{"\"\<times_D_x\>\"", "\[Rule]", 
       RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
      RowBox[{"\"\<times_E_y\>\"", "\[Rule]", 
       RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
      RowBox[{"\"\<A\>\"", "\[Rule]", 
       RowBox[{"ConstantArrayLayer", "[", 
        RowBox[{"\"\<Array\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
      RowBox[{"\"\<B\>\"", "\[Rule]", 
       RowBox[{"ConstantArrayLayer", "[", 
        RowBox[{"\"\<Array\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
      RowBox[{"\"\<C\>\"", "\[Rule]", 
       RowBox[{"ConstantArrayLayer", "[", 
        RowBox[{"\"\<Array\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
      RowBox[{"\"\<D\>\"", "\[Rule]", 
       RowBox[{"ConstantArrayLayer", "[", 
        RowBox[{"\"\<Array\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
      RowBox[{"\"\<E\>\"", "\[Rule]", 
       RowBox[{"ConstantArrayLayer", "[", 
        RowBox[{"\"\<Array\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
      RowBox[{"\"\<F\>\"", "\[Rule]", 
       RowBox[{"ConstantArrayLayer", "[", 
        RowBox[{"\"\<Array\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
      RowBox[{"\"\<total\>\"", "\[Rule]", 
       RowBox[{"TotalLayer", "[", "]"}]}]}], "|>"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<x\>\"", "]"}], "\[Rule]", 
       "\"\<power_x\>\""}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<power_x\>\"", ",", "\"\<A\>\""}], "}"}], "\[Rule]", 
       RowBox[{"\"\<times_A_x2\>\"", "\[Rule]", "\"\<total\>\""}]}], ",", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<y\>\"", "]"}], "\[Rule]", 
       "\"\<power_y\>\""}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<power_y\>\"", ",", "\"\<C\>\""}], "}"}], "\[Rule]", 
       RowBox[{"\"\<times_C_y2\>\"", "\[Rule]", "\"\<total\>\""}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<x\>\"", "]"}], ",", 
         RowBox[{"NetPort", "[", "\"\<y\>\"", "]"}]}], "}"}], "\[Rule]", 
       "\"\<times_x_y\>\""}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<times_x_y\>\"", ",", "\"\<B\>\""}], "}"}], "\[Rule]", 
       RowBox[{"\"\<times_x_y_B\>\"", "\[Rule]", "\"\<total\>\""}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<D\>\"", ",", 
         RowBox[{"NetPort", "[", "\"\<x\>\"", "]"}]}], "}"}], "\[Rule]", 
       RowBox[{"\"\<times_D_x\>\"", "\[Rule]", "\"\<total\>\""}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<E\>\"", ",", 
         RowBox[{"NetPort", "[", "\"\<y\>\"", "]"}]}], "}"}], "\[Rule]", 
       RowBox[{"\"\<times_E_y\>\"", "\[Rule]", "\"\<total\>\""}]}], ",", 
      RowBox[{"\"\<F\>\"", "\[Rule]", "\"\<total\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.766133230579777*^9, 3.766133230580653*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"fb205405-03dd-4e49-9695-814aa4cb21cf"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["15", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    PaneBox[
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-4., 
                    2.4492935982947064`*^-16}, {-3., -1.9999999999999998`}}], 
                    
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQECB9hjRIzVlm20CT5/4+jr+fwHimomzNAo3Giz
0UOyYpcp/4FXMbs5pptttJHIOSiWc5DvQO7fKc2F3zbYtFpeXMjgzHfgd6ws
544NG2z+bABp4D0wpS5kZlbqBpu6S+q1l9R5D1jGW5l0imywYZuXd5a/m+fA
pf9zN6vXrLeZISzLZfCE+4DXQRUR0SPrbIzBgPvADSbOrlsM62xiLmupyjVw
HSjZsnIV8+wc+zmnavd8vcR5QGgziN9j/0lC5+dObc4D00r+8xuJL7CP2Gd6
O6uL48DuTSD5NfbXds1K4njPfmD25JC7UpHb7DP5ovsnRbIfaASrP2AvsLMs
kfMU24FTb1aeW/fsqP2ZXW9v5DiwHVgG1n/Gfp7wga979rAe4E3+Hyghdcme
7bzvwpSbLAdOtk/8esvkpn2N+XlWMTaWAyoubRf9z9+3/+vjonzRifmAwJl3
Rbu/PLLv4l/7c2o/04E7B70lVxx8aq9Uz9mZ8obxQAXzrdu5fi/sT8yOvGgT
yXjgyYSZu3hmv7KvTJ17Se4awwG5rK6tLcvf2JvfudLDlcxwQLN/zZmrxe/s
oRF2gBFMfbAHAH6IzjA=
                    "]], 
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 3.}}], 
                    
                    LineBox[{{-3., -1.9999999999999998`}, {-2., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-3., -0.9999999999999998}, {-2., \
-0.9999999999999999}}], 
                    LineBox[{{-2., -0.9999999999999999}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-3.9999999999999996`, 
                    5.}, {-2.9999999999999996`, 7.}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQ/R8M+A8wgIGIQ/D5G0dfz0fw13tIVuwyRfDFcw6K
5RzkO8AI5bdYXlzI4MwHl/+zAaSBF86vuaRee0kdwWebl3eWv5sHzp8hLMtl
8IQbzjcyBgEEP/qylqpcA9eBk6u65uf8EXaYfap2z9dLnAfUVmvVbfoo7PBe
QufnTm3OAxKMD2ZfvC/sEL7P9HZWF8eB2WtW/Th5TNjh6q5ZSRzv2Q9sWts1
ZfYyYYcMvuj+SZHsB2JYGvLd6oUdBHaWJXKeYjswa0NX56kAYYczu97eyHFg
O5C9adUjdWlhh3nCB77u2cN64Dzng6q4e0IObOd9F6bcZDnQ8nxZwKYcIYdq
8/OsYmwsB/bNfs7EzSzk8NfHRfmiE/OBOrVFEzMWCjp08q/9ObWf6cCR9mt/
TrkLOijVc3amvGE8MGl/i4vRNwGH47MjL9pEMh54cnZNxrw1Ag4VqXMvyV1j
OLB3k18mf7aAg9mdKz1cyQwHZPKy3FoNBRwg8fV/PyR8BBwA8Yyvkg==
                    
                    "]], 
                    LineBox[{{-3.9999999999999996`, 5.}, {-3., 3.}}], 
                    
                    LineBox[{{-2.9999999999999996`, 
                    7.}, {-1.9999999999999996`, 6.}}], 
                    
                    LineBox[{{-2.9999999999999996`, 
                    6.}, {-1.9999999999999996`, 6.}}], 
                    
                    LineBox[{{-1.9999999999999996`, 6.}, {-0.9999999999999999,
                     2.}}], 
                    LineBox[{{-3., 3.}, {-1.9999999999999998`, 2.}}], 
                    LineBox[{{-3., 2.}, {-1.9999999999999998`, 2.}}], 
                    
                    LineBox[{{-1.9999999999999998`, 2.}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-2.9999999999999996`, 
                    4.}, {-1.9999999999999998`, 4.}}], 
                    
                    LineBox[{{-1.9999999999999998`, 4.}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-2., -1.9999999999999998`}, \
{-0.9999999999999999, 2.}}], 
                    
                    LineBox[{{-0.9999999999999999, 2.}, {
                    1.2246467991473532`*^-16, 2.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, -1.164589803375031}, {-0.25,
                     0}, 
                    Offset[8], {1., -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.8836936385164034`, 
                    0.14840512691569535`}, {-0.25, 0}, 
                    Offset[8], {0.07008586743419842, 0.04539450940950676}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.4871708245126287`, 
                    1.5384875264621147`}, {-0.25, 0}, 
                    Offset[8], {1., 2.9999999999999996`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, -1.4}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, -0.9999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4871708245126283`, 
                    0.5384875264621145}, {-0.25, 0}, 
                    Offset[8], {1., 3.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, 
                    6.164589803375031}, {-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.8836936385164034`, 
                    4.851594873084305}, {-0.25, 0}, 
                    Offset[8], {0.07008586743419798, -0.04539450940950651}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, 
                    3.8354101966249683`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.3999999999999995`, 6.4}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.3999999999999995`, 6.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.5592329219213243`, 
                    4.236931687685298}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -4.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-2.4, 
                    2.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1.0000000000000002`, -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-2.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {1.0000000000000002`, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999999, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.6}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999998}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.3999999999999995`, 4.}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4177050983124841`, 
                    2.8354101966249687`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999999, -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.5592329219213243`, -0.23693168768529815`}, \
{-0.25, 0}, 
                    Offset[8], {1., 4.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 2.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 2.4492935982947064`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"x\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["x", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-3., -1.9999999999999998`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzNlj1oFEEUx/cSCX4VEa2i4LcGUQSLaBWwCMEiCgkHih7c7e7M7CZwwiWi
dlfamE4Lm2DIurOraGFhqYVCrCy0VLsDjaBVBFNkfW/3TS7E5JLbm73zwbvb
nXnv/347X7uHzZujvMswjMnt8DNaun2xUindHeuFm3x50hVlZl8qTzHBKhfM
bmjsA+8H32b8/8aZXGRMXtUoOaJDRNjBNWQDj8DndWiSaeFjzH9PbL/w37HC
AR26hgY+zv3zio2x4F58zaXUAWdo4BPMD5AJ2Rwn3A/XS3hvWeGxTvMhA43d
kmn6fQmvnME24H7UaT5kSFjkjGrj/Ek/Mf/B8ewUn23PHVBziUyr+6DtGXE/
6BQft+VDWndP1/Y5ljwNfcvI7zj+oXbzYU0au2VkWS8G+L2EXz5uNx/UnaX5
m9swhsuj9fmX59rFh7XUnnVN70jDWBZM0xi+NYwolz1flMNaCV8wvVl0sfii
F2IX4rG2gxtZ88F7rEBjt4C1t5hTpJwfExPP92bFB2fIPqyRzJdf3HqJKMeZ
/4YY/ez4pKS19LrZtSSEd1x930D+dd18qEnPv4i1mmFTBs8nSON3Exqb8gHb
CdRM1rjkadgSw3mWITF+dl1vT6t8qIFa9L4PUp4RKzY+Hu4GrU/E+I7zlzvT
8hUKs7tijeR8/YjarbApo3dPLWGEfdOYcV2+hG1lz9Usyzuog02ZEOEpOD+/
k/6HBvr/8GEs5lDuN9TSyabMNcOToP9V7Tv4zjCr1WrXRnzYhzFqL2AuamTB
pgzPa24Hr6gerqMv4Hewbj4fdoNdiZ8D2uI+FQc5Kc76lBbl4Fwo1ddk3YeH
b0Vr2moY28I+HUnrPT07xs6euXx/cFDMDw1VfiIbOl5jG/ZhTAs1jL+4f8JR

                    "], {{0, 26}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 26}, 
                    PlotRange -> {{0, 40}, {0, 26}}, ImageSize -> 20], 
                    TraditionalForm]], {-3., -1.9999999999999998`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"power_x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "2"], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "1"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["power_x", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[#^2& , {4, 3}], "Input" -> 1]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-2., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"times_D_x\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_D_x", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 3.}], 
                    Offset[{10, 10}, {-3., 3.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 3.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"times_x_y\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_x_y", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., -0.9999999999999999}], 
                    Offset[{10, 10}, {-2., -0.9999999999999999}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-2., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"times_A_x2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_A_x2", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., -0.9999999999999998}], 
                    Offset[{10, 10}, {-3., -0.9999999999999998}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-3., -0.9999999999999998}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"A\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["A", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 2.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 2.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999999999999, 2.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"total\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    
                    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
                    "1"}], "}"}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["total", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {1, 1, 1, 1, 1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999999999996`, 5.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"y\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["y", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2.9999999999999996`, 7.}], 
                    Offset[{10, 10}, {-2.9999999999999996`, 7.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzNlj1oFEEUx/cSCX4VEa2i4LcGUQSLaBWwCMEiCgkHih7c7e7M7CZwwiWi
dlfamE4Lm2DIurOraGFhqYVCrCy0VLsDjaBVBFNkfW/3TS7E5JLbm73zwbvb
nXnv/347X7uHzZujvMswjMnt8DNaun2xUindHeuFm3x50hVlZl8qTzHBKhfM
bmjsA+8H32b8/8aZXGRMXtUoOaJDRNjBNWQDj8DndWiSaeFjzH9PbL/w37HC
AR26hgY+zv3zio2x4F58zaXUAWdo4BPMD5AJ2Rwn3A/XS3hvWeGxTvMhA43d
kmn6fQmvnME24H7UaT5kSFjkjGrj/Ek/Mf/B8ewUn23PHVBziUyr+6DtGXE/
6BQft+VDWndP1/Y5ljwNfcvI7zj+oXbzYU0au2VkWS8G+L2EXz5uNx/UnaX5
m9swhsuj9fmX59rFh7XUnnVN70jDWBZM0xi+NYwolz1flMNaCV8wvVl0sfii
F2IX4rG2gxtZ88F7rEBjt4C1t5hTpJwfExPP92bFB2fIPqyRzJdf3HqJKMeZ
/4YY/ez4pKS19LrZtSSEd1x930D+dd18qEnPv4i1mmFTBs8nSON3Exqb8gHb
CdRM1rjkadgSw3mWITF+dl1vT6t8qIFa9L4PUp4RKzY+Hu4GrU/E+I7zlzvT
8hUKs7tijeR8/YjarbApo3dPLWGEfdOYcV2+hG1lz9Usyzuog02ZEOEpOD+/
k/6HBvr/8GEs5lDuN9TSyabMNcOToP9V7Tv4zjCr1WrXRnzYhzFqL2AuamTB
pgzPa24Hr6gerqMv4Hewbj4fdoNdiZ8D2uI+FQc5Kc76lBbl4Fwo1ddk3YeH
b0Vr2moY28I+HUnrPT07xs6euXx/cFDMDw1VfiIbOl5jG/ZhTAs1jL+4f8JR

                    "], {{0, 26}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 26}, 
                    PlotRange -> {{0, 40}, {0, 26}}, ImageSize -> 20], 
                    TraditionalForm]], {-2.9999999999999996`, 7.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"power_y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "2"], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "1"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["power_y", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[#^2& , {4, 3}], "Input" -> 1]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1.9999999999999998`, 4.}], 
                    Offset[{10, 10}, {-1.9999999999999998`, 4.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999999999998`, 4.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"times_E_y\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_E_y", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1.9999999999999996`, 6.}], 
                    Offset[{10, 10}, {-1.9999999999999996`, 6.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999999999996`, 6.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"times_C_y2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_C_y2", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2.9999999999999996`, 6.}], 
                    Offset[{10, 10}, {-2.9999999999999996`, 6.}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-2.9999999999999996`, 6.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"C\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["C", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1.9999999999999998`, 2.}], 
                    Offset[{10, 10}, {-1.9999999999999998`, 2.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999999999998`, 2.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"times_x_y_B\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_x_y_B", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 2.}], 
                    Offset[{10, 10}, {-3., 2.}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-3., 2.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"B\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["B", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-3., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"D\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["D", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2.9999999999999996`, 4.}], 
                    Offset[{10, 10}, {-2.9999999999999996`, 4.}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-2.9999999999999996`, 4.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"E\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["E", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-2., -1.9999999999999998`}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., -1.9999999999999998`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"F\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["F", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{1.2246467991473532`*^-16, 2.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"x\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., 2.4492935982947064`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"power_x\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"times_D_x\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"times_x_y\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 3.}], {0, 1.}, Automatic, {1, 0}], 
                    
                    InsetBox[
                    FormBox["\"times_A_x2\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"A\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"total\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 2.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"y\"", TraditionalForm], 
                    Offset[{0, -7}, {-3.9999999999999996`, 5.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"power_y\"", TraditionalForm], 
                    Offset[{0, -13}, {-2.9999999999999996`, 7.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"times_E_y\"", TraditionalForm], 
                    Offset[{0, -13}, {-1.9999999999999998`, 4.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"times_C_y2\"", TraditionalForm], 
                    Offset[{0, -13}, {-1.9999999999999996`, 6.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"C\"", TraditionalForm], 
                    Offset[{0, -13}, {-2.9999999999999996`, 6.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"times_x_y..\"", "\"times_x_y_B\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "times_x_y_B", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-1.9999999999999998`, 2.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"B\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 2.}], {0, 1.}, Automatic, {1, 0}], 
                    
                    InsetBox[
                    FormBox["\"D\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"E\"", TraditionalForm], 
                    Offset[{0, -13}, {-2.9999999999999996`, 4.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"F\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {1.2246467991473532`*^-16, 2.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499537, 
                    2.4596747752497685`}, {-3.417705098312484, \
-1.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, -0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-2.9899630992180724`, 
                    4.61628862456782}, {-2.8836936385164034`, 
                    0.14840512691569535`}], {0., -0.17}, Automatic, {
                    0.8393252044668763, 0.5436296544032859}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-5.217758139277825, 
                    1.7392527130926088`}, {-3.4871708245126287`, 
                    1.5384875264621147`}], {0., -0.17}, Automatic, {
                    0.31622776601683794`, 0.9486832980505137}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 
                    3.8890872965260117`}, {-2.4000000000000004`, -1.4}], {
                    0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-2.4000000000000004`, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-5.217758139277826, 
                    1.7392527130926088`}, {-1.4871708245126283`, 
                    0.5384875264621145}], {0., -0.17}, Automatic, {
                    0.31622776601683794`, 0.9486832980505138}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-3.417705098312484, 
                    6.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, 0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{2.989963099218075, 
                    4.616288624567819}, {-2.8836936385164034`, 
                    4.851594873084305}], {0., -0.17}, Automatic, {
                    0.8393252044668762, -0.5436296544032864}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499538, 
                    2.4596747752497676`}, {-3.417705098312484, 
                    3.8354101966249683`}], {0., -0.17}, Automatic, {
                    0.44721359549995776`, -0.894427190999916}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-2.3999999999999995`, 6.4}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-2.3999999999999995`, 6.}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{5.335783750799325, 
                    1.3339459376998308`}, {-1.5592329219213243`, 
                    4.236931687685298}], {0., -0.17}, Automatic, {
                    0.24253562503633289`, -0.9701425001453319}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 3.8890872965260117`}, {-2.4, 
                    2.4000000000000004`}], {0., -0.17}, Automatic, {
                    0.7071067811865476, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-2.4, 2.}], {0., -0.17}, Automatic, {
                    1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, 2.}], {0., -0.17}, Automatic, {
                    1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-1.4, 
                    1.6}], {0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-2.3999999999999995`, 4.}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499537, 
                    2.459674775249768}, {-1.4177050983124841`, 
                    2.8354101966249687`}], {0., -0.17}, Automatic, {
                    0.44721359549995787`, -0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-5.335783750799325, 
                    1.3339459376998313`}, {-1.5592329219213243`, \
-0.23693168768529815`}], {0., -0.17}, Automatic, {0.24253562503633297`, 
                    0.9701425001453319}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 2.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-4., 
                    2.4492935982947064`*^-16}, {-3., -1.9999999999999998`}, \
{-2., 1.0000000000000002`}, {-3., 
                    3.}, {-2., -0.9999999999999999}, {-3., \
-0.9999999999999998}, {-0.9999999999999999, 2.}, {-3.9999999999999996`, 
                    5.}, {-2.9999999999999996`, 7.}, {-1.9999999999999998`, 
                    4.}, {-1.9999999999999996`, 6.}, {-2.9999999999999996`, 
                    6.}, {-1.9999999999999998`, 2.}, {-3., 2.}, {-3., 
                    1.0000000000000002`}, {-2.9999999999999996`, 
                    4.}, {-2., -1.9999999999999998`}, {
                    1.2246467991473532`*^-16, 2.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 20, 20, 20, 20, 8, 20, 20, 20, 20, 20, 
                    20, 20, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {270.5, 536.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{24., 26.5}, {27., 14.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Scrollbars -> {False, True}, ImageSizeAction -> 
                    "Scrollable", ImageSize -> {Automatic, 500}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "x"], 
                    NeuralNetworks`NetPath["Nodes", "power_x"], 
                    NeuralNetworks`NetPath["Nodes", "times_D_x"], 
                    NeuralNetworks`NetPath["Nodes", "times_x_y"], 
                    NeuralNetworks`NetPath["Nodes", "times_A_x2"], 
                    NeuralNetworks`NetPath["Nodes", "A"], 
                    NeuralNetworks`NetPath["Nodes", "total"], 
                    NeuralNetworks`NetPath["Inputs", "y"], 
                    NeuralNetworks`NetPath["Nodes", "power_y"], 
                    NeuralNetworks`NetPath["Nodes", "times_E_y"], 
                    NeuralNetworks`NetPath["Nodes", "times_C_y2"], 
                    NeuralNetworks`NetPath["Nodes", "C"], 
                    NeuralNetworks`NetPath["Nodes", "times_x_y_B"], 
                    NeuralNetworks`NetPath["Nodes", "B"], 
                    NeuralNetworks`NetPath["Nodes", "D"], 
                    NeuralNetworks`NetPath["Nodes", "E"], 
                    NeuralNetworks`NetPath["Nodes", "F"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "x" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "y" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    Association[
                    "power_x" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "A" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_A_x2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "power_y" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "C" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_C_y2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_x_y" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "B" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_x_y_B" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "D" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_D_x" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "E" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_E_y" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "F" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "total" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "4" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "5" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "6" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]]], 
                    Association[]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"x\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"y\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.766133238931757*^9, {3.766134235537127*^9, 3.7661342602440042`*^9}, 
   3.7661363715475197`*^9, 3.766188055854629*^9, 3.76633548655545*^9, 
   3.766335541289525*^9, 3.766357315540537*^9, 3.766392397886807*^9, 
   3.766569638649734*^9},
 CellLabel->
  "Out[327]=",ExpressionUUID->"fceedb46-1e99-405b-9e98-d35156f53217"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nuData", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<x\>\"", "\[Rule]", 
       RowBox[{"List", "/@", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<y\>\"", "\[Rule]", 
       RowBox[{"List", "/@", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Output\>\"", "\[Rule]", 
       RowBox[{"List", "/@", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "@", "#"}]}], "]"}]}]}]}], "|>"}], "&"}], "@", 
   "data"}]}]], "Input",
 CellChangeTimes->{{3.76613329632086*^9, 3.76613333534783*^9}, {
  3.766136318464889*^9, 3.766136320004696*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"eb7f811a-0455-45c9-96fc-ca81d065c9e3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"x\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0.16550727710836116`", "}"}], ",", 
      RowBox[{"{", "0.13464824318933685`", "}"}], ",", 
      RowBox[{"{", "0.074303898354803`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.032382794181396043`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.21388888888888882`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.4926902869387768`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.7754996473179878`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.7754996473179879`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.49269028693877703`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.2138888888888892`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.03238279418139636`"}], "}"}], ",", 
      RowBox[{"{", "0.07430389835480296`", "}"}], ",", 
      RowBox[{"{", "0.13464824318933685`", "}"}], ",", 
      RowBox[{"{", "0.1655072771083609`", "}"}], ",", 
      RowBox[{"{", "0.175`", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"y\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0.07368858739595108`", "}"}], ",", 
      RowBox[{"{", "0.14954202398584215`", "}"}], ",", 
      RowBox[{"{", "0.22868388471452056`", "}"}], ",", 
      RowBox[{"{", "0.3081017058878809`", "}"}], ",", 
      RowBox[{"{", "0.3704664227300099`", "}"}], ",", 
      RowBox[{"{", "0.35796044659618564`", "}"}], ",", 
      RowBox[{"{", "0.1648375386102261`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.1648375386102261`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.35796044659618564`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.37046642273000996`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.30810170588788127`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.22868388471452059`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.14954202398584204`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.07368858739595108`"}], "}"}], ",", 
      RowBox[{"{", "0.`", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"Output\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]], "Output",\

 CellChangeTimes->{
  3.766133336395409*^9, 3.766136374436063*^9, 3.7661880558869553`*^9, {
   3.766335534369938*^9, 3.766335541323079*^9}, 3.766357318977194*^9, 
   3.7663923980503893`*^9, 3.7665696387978973`*^9},
 CellLabel->
  "Out[328]=",ExpressionUUID->"5564761e-6492-4a26-b3fc-fd63fe68c1df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"tnet", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "nuData", ",", "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "15000"}]}], "]"}]}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.766133879312707*^9, 3.766134007306332*^9}, 
   3.766134263146502*^9, {3.766136390946837*^9, 3.766136392542315*^9}, {
   3.766357337333547*^9, 3.766357384583061*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"6a595dbb-b77f-42f1-b7dc-2a909c21e807"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["15", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    PaneBox[
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-4., 
                    2.4492935982947064`*^-16}, {-3., -1.9999999999999998`}}], 
                    
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQECB9hjRIzVlm20CT5/4+jr+fwHimomzNAo3Giz
0UOyYpcp/4FXMbs5pptttJHIOSiWc5DvQO7fKc2F3zbYtFpeXMjgzHfgd6ws
544NG2z+bABp4D0wpS5kZlbqBpu6S+q1l9R5D1jGW5l0imywYZuXd5a/m+fA
pf9zN6vXrLeZISzLZfCE+4DXQRUR0SPrbIzBgPvADSbOrlsM62xiLmupyjVw
HSjZsnIV8+wc+zmnavd8vcR5QGgziN9j/0lC5+dObc4D00r+8xuJL7CP2Gd6
O6uL48DuTSD5NfbXds1K4njPfmD25JC7UpHb7DP5ovsnRbIfaASrP2AvsLMs
kfMU24FTb1aeW/fsqP2ZXW9v5DiwHVgG1n/Gfp7wga979rAe4E3+Hyghdcme
7bzvwpSbLAdOtk/8esvkpn2N+XlWMTaWAyoubRf9z9+3/+vjonzRifmAwJl3
Rbu/PLLv4l/7c2o/04E7B70lVxx8aq9Uz9mZ8obxQAXzrdu5fi/sT8yOvGgT
yXjgyYSZu3hmv7KvTJ17Se4awwG5rK6tLcvf2JvfudLDlcxwQLN/zZmrxe/s
oRF2gBFMfbAHAH6IzjA=
                    "]], 
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 3.}}], 
                    
                    LineBox[{{-3., -1.9999999999999998`}, {-2., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-3., -0.9999999999999998}, {-2., \
-0.9999999999999999}}], 
                    LineBox[{{-2., -0.9999999999999999}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-3.9999999999999996`, 
                    5.}, {-2.9999999999999996`, 7.}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQ/R8M+A8wgIGIQ/D5G0dfz0fw13tIVuwyRfDFcw6K
5RzkO8AI5bdYXlzI4MwHl/+zAaSBF86vuaRee0kdwWebl3eWv5sHzp8hLMtl
8IQbzjcyBgEEP/qylqpcA9eBk6u65uf8EXaYfap2z9dLnAfUVmvVbfoo7PBe
QufnTm3OAxKMD2ZfvC/sEL7P9HZWF8eB2WtW/Th5TNjh6q5ZSRzv2Q9sWts1
ZfYyYYcMvuj+SZHsB2JYGvLd6oUdBHaWJXKeYjswa0NX56kAYYczu97eyHFg
O5C9adUjdWlhh3nCB77u2cN64Dzng6q4e0IObOd9F6bcZDnQ8nxZwKYcIYdq
8/OsYmwsB/bNfs7EzSzk8NfHRfmiE/OBOrVFEzMWCjp08q/9ObWf6cCR9mt/
TrkLOijVc3amvGE8MGl/i4vRNwGH47MjL9pEMh54cnZNxrw1Ag4VqXMvyV1j
OLB3k18mf7aAg9mdKz1cyQwHZPKy3FoNBRwg8fV/PyR8BBwA8Yyvkg==
                    
                    "]], 
                    LineBox[{{-3.9999999999999996`, 5.}, {-3., 3.}}], 
                    
                    LineBox[{{-2.9999999999999996`, 
                    7.}, {-1.9999999999999996`, 6.}}], 
                    
                    LineBox[{{-2.9999999999999996`, 
                    6.}, {-1.9999999999999996`, 6.}}], 
                    
                    LineBox[{{-1.9999999999999996`, 6.}, {-0.9999999999999999,
                     2.}}], 
                    LineBox[{{-3., 3.}, {-1.9999999999999998`, 2.}}], 
                    LineBox[{{-3., 2.}, {-1.9999999999999998`, 2.}}], 
                    
                    LineBox[{{-1.9999999999999998`, 2.}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-2.9999999999999996`, 
                    4.}, {-1.9999999999999998`, 4.}}], 
                    
                    LineBox[{{-1.9999999999999998`, 4.}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-2., -1.9999999999999998`}, \
{-0.9999999999999999, 2.}}], 
                    
                    LineBox[{{-0.9999999999999999, 2.}, {
                    1.2246467991473532`*^-16, 2.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, -1.164589803375031}, {-0.25,
                     0}, 
                    Offset[8], {1., -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.8836936385164034`, 
                    0.14840512691569535`}, {-0.25, 0}, 
                    Offset[8], {0.07008586743419842, 0.04539450940950676}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.4871708245126287`, 
                    1.5384875264621147`}, {-0.25, 0}, 
                    Offset[8], {1., 2.9999999999999996`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, -1.4}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, -0.9999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4871708245126283`, 
                    0.5384875264621145}, {-0.25, 0}, 
                    Offset[8], {1., 3.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, 
                    6.164589803375031}, {-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.8836936385164034`, 
                    4.851594873084305}, {-0.25, 0}, 
                    Offset[8], {0.07008586743419798, -0.04539450940950651}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, 
                    3.8354101966249683`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.3999999999999995`, 6.4}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.3999999999999995`, 6.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.5592329219213243`, 
                    4.236931687685298}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -4.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-2.4, 
                    2.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1.0000000000000002`, -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-2.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {1.0000000000000002`, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999999, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.6}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999998}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.3999999999999995`, 4.}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4177050983124841`, 
                    2.8354101966249687`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999999, -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.5592329219213243`, -0.23693168768529815`}, \
{-0.25, 0}, 
                    Offset[8], {1., 4.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 2.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 2.4492935982947064`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"x\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["x", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-3., -1.9999999999999998`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzNlj1oFEEUx/cSCX4VEa2i4LcGUQSLaBWwCMEiCgkHih7c7e7M7CZwwiWi
dlfamE4Lm2DIurOraGFhqYVCrCy0VLsDjaBVBFNkfW/3TS7E5JLbm73zwbvb
nXnv/347X7uHzZujvMswjMnt8DNaun2xUindHeuFm3x50hVlZl8qTzHBKhfM
bmjsA+8H32b8/8aZXGRMXtUoOaJDRNjBNWQDj8DndWiSaeFjzH9PbL/w37HC
AR26hgY+zv3zio2x4F58zaXUAWdo4BPMD5AJ2Rwn3A/XS3hvWeGxTvMhA43d
kmn6fQmvnME24H7UaT5kSFjkjGrj/Ek/Mf/B8ewUn23PHVBziUyr+6DtGXE/
6BQft+VDWndP1/Y5ljwNfcvI7zj+oXbzYU0au2VkWS8G+L2EXz5uNx/UnaX5
m9swhsuj9fmX59rFh7XUnnVN70jDWBZM0xi+NYwolz1flMNaCV8wvVl0sfii
F2IX4rG2gxtZ88F7rEBjt4C1t5hTpJwfExPP92bFB2fIPqyRzJdf3HqJKMeZ
/4YY/ez4pKS19LrZtSSEd1x930D+dd18qEnPv4i1mmFTBs8nSON3Exqb8gHb
CdRM1rjkadgSw3mWITF+dl1vT6t8qIFa9L4PUp4RKzY+Hu4GrU/E+I7zlzvT
8hUKs7tijeR8/YjarbApo3dPLWGEfdOYcV2+hG1lz9Usyzuog02ZEOEpOD+/
k/6HBvr/8GEs5lDuN9TSyabMNcOToP9V7Tv4zjCr1WrXRnzYhzFqL2AuamTB
pgzPa24Hr6gerqMv4Hewbj4fdoNdiZ8D2uI+FQc5Kc76lBbl4Fwo1ddk3YeH
b0Vr2moY28I+HUnrPT07xs6euXx/cFDMDw1VfiIbOl5jG/ZhTAs1jL+4f8JR

                    "], {{0, 26}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 26}, 
                    PlotRange -> {{0, 40}, {0, 26}}, ImageSize -> 20], 
                    TraditionalForm]], {-3., -1.9999999999999998`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"power_x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "2"], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "1"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["power_x", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[#^2& , {4, 3}], "Input" -> 1]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-2., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"times_D_x\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_D_x", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 3.}], 
                    Offset[{10, 10}, {-3., 3.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 3.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"times_x_y\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_x_y", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., -0.9999999999999999}], 
                    Offset[{10, 10}, {-2., -0.9999999999999999}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-2., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"times_A_x2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_A_x2", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., -0.9999999999999998}], 
                    Offset[{10, 10}, {-3., -0.9999999999999998}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-3., -0.9999999999999998}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"A\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["A", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 2.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 2.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999999999999, 2.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"total\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    
                    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
                    "1"}], "}"}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["total", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {1, 1, 1, 1, 1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999999999996`, 5.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"y\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["y", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2.9999999999999996`, 7.}], 
                    Offset[{10, 10}, {-2.9999999999999996`, 7.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzNlj1oFEEUx/cSCX4VEa2i4LcGUQSLaBWwCMEiCgkHih7c7e7M7CZwwiWi
dlfamE4Lm2DIurOraGFhqYVCrCy0VLsDjaBVBFNkfW/3TS7E5JLbm73zwbvb
nXnv/347X7uHzZujvMswjMnt8DNaun2xUindHeuFm3x50hVlZl8qTzHBKhfM
bmjsA+8H32b8/8aZXGRMXtUoOaJDRNjBNWQDj8DndWiSaeFjzH9PbL/w37HC
AR26hgY+zv3zio2x4F58zaXUAWdo4BPMD5AJ2Rwn3A/XS3hvWeGxTvMhA43d
kmn6fQmvnME24H7UaT5kSFjkjGrj/Ek/Mf/B8ewUn23PHVBziUyr+6DtGXE/
6BQft+VDWndP1/Y5ljwNfcvI7zj+oXbzYU0au2VkWS8G+L2EXz5uNx/UnaX5
m9swhsuj9fmX59rFh7XUnnVN70jDWBZM0xi+NYwolz1flMNaCV8wvVl0sfii
F2IX4rG2gxtZ88F7rEBjt4C1t5hTpJwfExPP92bFB2fIPqyRzJdf3HqJKMeZ
/4YY/ez4pKS19LrZtSSEd1x930D+dd18qEnPv4i1mmFTBs8nSON3Exqb8gHb
CdRM1rjkadgSw3mWITF+dl1vT6t8qIFa9L4PUp4RKzY+Hu4GrU/E+I7zlzvT
8hUKs7tijeR8/YjarbApo3dPLWGEfdOYcV2+hG1lz9Usyzuog02ZEOEpOD+/
k/6HBvr/8GEs5lDuN9TSyabMNcOToP9V7Tv4zjCr1WrXRnzYhzFqL2AuamTB
pgzPa24Hr6gerqMv4Hewbj4fdoNdiZ8D2uI+FQc5Kc76lBbl4Fwo1ddk3YeH
b0Vr2moY28I+HUnrPT07xs6euXx/cFDMDw1VfiIbOl5jG/ZhTAs1jL+4f8JR

                    "], {{0, 26}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 26}, 
                    PlotRange -> {{0, 40}, {0, 26}}, ImageSize -> 20], 
                    TraditionalForm]], {-2.9999999999999996`, 7.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"power_y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "2"], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "1"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["power_y", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[#^2& , {4, 3}], "Input" -> 1]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1.9999999999999998`, 4.}], 
                    Offset[{10, 10}, {-1.9999999999999998`, 4.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999999999998`, 4.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"times_E_y\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_E_y", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1.9999999999999996`, 6.}], 
                    Offset[{10, 10}, {-1.9999999999999996`, 6.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999999999996`, 6.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"times_C_y2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_C_y2", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2.9999999999999996`, 6.}], 
                    Offset[{10, 10}, {-2.9999999999999996`, 6.}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-2.9999999999999996`, 6.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"C\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["C", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1.9999999999999998`, 2.}], 
                    Offset[{10, 10}, {-1.9999999999999998`, 2.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999999999998`, 2.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"times_x_y_B\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_x_y_B", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 2.}], 
                    Offset[{10, 10}, {-3., 2.}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-3., 2.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"B\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["B", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-3., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"D\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["D", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2.9999999999999996`, 4.}], 
                    Offset[{10, 10}, {-2.9999999999999996`, 4.}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-2.9999999999999996`, 4.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"E\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["E", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-2., -1.9999999999999998`}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., -1.9999999999999998`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"F\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["F", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{1.2246467991473532`*^-16, 2.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"x\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., 2.4492935982947064`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"power_x\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"times_D_x\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"times_x_y\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 3.}], {0, 1.}, Automatic, {1, 0}], 
                    
                    InsetBox[
                    FormBox["\"times_A_x2\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"A\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"total\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 2.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"y\"", TraditionalForm], 
                    Offset[{0, -7}, {-3.9999999999999996`, 5.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"power_y\"", TraditionalForm], 
                    Offset[{0, -13}, {-2.9999999999999996`, 7.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"times_E_y\"", TraditionalForm], 
                    Offset[{0, -13}, {-1.9999999999999998`, 4.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"times_C_y2\"", TraditionalForm], 
                    Offset[{0, -13}, {-1.9999999999999996`, 6.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"C\"", TraditionalForm], 
                    Offset[{0, -13}, {-2.9999999999999996`, 6.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"times_x_y..\"", "\"times_x_y_B\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "times_x_y_B", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-1.9999999999999998`, 2.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"B\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 2.}], {0, 1.}, Automatic, {1, 0}], 
                    
                    InsetBox[
                    FormBox["\"D\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"E\"", TraditionalForm], 
                    Offset[{0, -13}, {-2.9999999999999996`, 4.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"F\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {1.2246467991473532`*^-16, 2.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499537, 
                    2.4596747752497685`}, {-3.417705098312484, \
-1.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, -0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-2.9899630992180724`, 
                    4.61628862456782}, {-2.8836936385164034`, 
                    0.14840512691569535`}], {0., -0.17}, Automatic, {
                    0.8393252044668763, 0.5436296544032859}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-5.217758139277825, 
                    1.7392527130926088`}, {-3.4871708245126287`, 
                    1.5384875264621147`}], {0., -0.17}, Automatic, {
                    0.31622776601683794`, 0.9486832980505137}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 
                    3.8890872965260117`}, {-2.4000000000000004`, -1.4}], {
                    0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-2.4000000000000004`, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-5.217758139277826, 
                    1.7392527130926088`}, {-1.4871708245126283`, 
                    0.5384875264621145}], {0., -0.17}, Automatic, {
                    0.31622776601683794`, 0.9486832980505138}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-3.417705098312484, 
                    6.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, 0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{2.989963099218075, 
                    4.616288624567819}, {-2.8836936385164034`, 
                    4.851594873084305}], {0., -0.17}, Automatic, {
                    0.8393252044668762, -0.5436296544032864}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499538, 
                    2.4596747752497676`}, {-3.417705098312484, 
                    3.8354101966249683`}], {0., -0.17}, Automatic, {
                    0.44721359549995776`, -0.894427190999916}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-2.3999999999999995`, 6.4}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-2.3999999999999995`, 6.}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{5.335783750799325, 
                    1.3339459376998308`}, {-1.5592329219213243`, 
                    4.236931687685298}], {0., -0.17}, Automatic, {
                    0.24253562503633289`, -0.9701425001453319}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 3.8890872965260117`}, {-2.4, 
                    2.4000000000000004`}], {0., -0.17}, Automatic, {
                    0.7071067811865476, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-2.4, 2.}], {0., -0.17}, Automatic, {
                    1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, 2.}], {0., -0.17}, Automatic, {
                    1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-1.4, 
                    1.6}], {0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-2.3999999999999995`, 4.}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499537, 
                    2.459674775249768}, {-1.4177050983124841`, 
                    2.8354101966249687`}], {0., -0.17}, Automatic, {
                    0.44721359549995787`, -0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-5.335783750799325, 
                    1.3339459376998313`}, {-1.5592329219213243`, \
-0.23693168768529815`}], {0., -0.17}, Automatic, {0.24253562503633297`, 
                    0.9701425001453319}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 2.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-4., 
                    2.4492935982947064`*^-16}, {-3., -1.9999999999999998`}, \
{-2., 1.0000000000000002`}, {-3., 
                    3.}, {-2., -0.9999999999999999}, {-3., \
-0.9999999999999998}, {-0.9999999999999999, 2.}, {-3.9999999999999996`, 
                    5.}, {-2.9999999999999996`, 7.}, {-1.9999999999999998`, 
                    4.}, {-1.9999999999999996`, 6.}, {-2.9999999999999996`, 
                    6.}, {-1.9999999999999998`, 2.}, {-3., 2.}, {-3., 
                    1.0000000000000002`}, {-2.9999999999999996`, 
                    4.}, {-2., -1.9999999999999998`}, {
                    1.2246467991473532`*^-16, 2.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 20, 20, 20, 20, 8, 20, 20, 20, 20, 20, 
                    20, 20, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {270.5, 536.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{24., 26.5}, {27., 14.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Scrollbars -> {False, True}, ImageSizeAction -> 
                    "Scrollable", ImageSize -> {Automatic, 500}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "x"], 
                    NeuralNetworks`NetPath["Nodes", "power_x"], 
                    NeuralNetworks`NetPath["Nodes", "times_D_x"], 
                    NeuralNetworks`NetPath["Nodes", "times_x_y"], 
                    NeuralNetworks`NetPath["Nodes", "times_A_x2"], 
                    NeuralNetworks`NetPath["Nodes", "A"], 
                    NeuralNetworks`NetPath["Nodes", "total"], 
                    NeuralNetworks`NetPath["Inputs", "y"], 
                    NeuralNetworks`NetPath["Nodes", "power_y"], 
                    NeuralNetworks`NetPath["Nodes", "times_E_y"], 
                    NeuralNetworks`NetPath["Nodes", "times_C_y2"], 
                    NeuralNetworks`NetPath["Nodes", "C"], 
                    NeuralNetworks`NetPath["Nodes", "times_x_y_B"], 
                    NeuralNetworks`NetPath["Nodes", "B"], 
                    NeuralNetworks`NetPath["Nodes", "D"], 
                    NeuralNetworks`NetPath["Nodes", "E"], 
                    NeuralNetworks`NetPath["Nodes", "F"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "x" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "y" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    Association[
                    "power_x" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "A" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_A_x2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "power_y" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "C" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_C_y2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_x_y" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "B" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_x_y_B" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "D" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_D_x" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "E" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_E_y" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "F" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "total" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "4" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "5" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "6" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]]], 
                    Association[]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"x\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"y\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.766133893258135*^9, 3.7661339575119343`*^9}, {
   3.766133988307372*^9, 3.766134019940927*^9}, {3.766134230083336*^9, 
   3.7661342779282827`*^9}, {3.766136376971054*^9, 3.766136405687531*^9}, 
   3.766188068986903*^9, 3.766335553326136*^9, {3.766357333096208*^9, 
   3.766357391671616*^9}, 3.766392404510562*^9, 3.766569645619749*^9},
 CellLabel->
  "Out[329]=",ExpressionUUID->"6c05c3d3-fcfb-4488-8b34-55beea892c60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["data"], "Input",
 CellChangeTimes->{{3.766136299977756*^9, 3.7661363004594183`*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"6c0cecbb-9d21-46c1-8959-d27ce049c770"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.16550727710836116`", ",", "0.07368858739595108`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.13464824318933685`", ",", "0.14954202398584215`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.074303898354803`", ",", "0.22868388471452056`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.032382794181396043`"}], ",", "0.3081017058878809`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.21388888888888882`"}], ",", "0.3704664227300099`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4926902869387768`"}], ",", "0.35796044659618564`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7754996473179878`"}], ",", "0.1648375386102261`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7754996473179879`"}], ",", 
     RowBox[{"-", "0.1648375386102261`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.49269028693877703`"}], ",", 
     RowBox[{"-", "0.35796044659618564`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2138888888888892`"}], ",", 
     RowBox[{"-", "0.37046642273000996`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.03238279418139636`"}], ",", 
     RowBox[{"-", "0.30810170588788127`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07430389835480296`", ",", 
     RowBox[{"-", "0.22868388471452059`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.13464824318933685`", ",", 
     RowBox[{"-", "0.14954202398584204`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1655072771083609`", ",", 
     RowBox[{"-", "0.07368858739595108`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.175`", ",", "0.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.766136306723535*^9, 3.7661363840410213`*^9, 
  3.766136414103516*^9, 3.7661880690399*^9, 3.7663355534622707`*^9, 
  3.766357395507861*^9, 3.766392404605266*^9, 3.766569645666136*^9},
 CellLabel->
  "Out[330]=",ExpressionUUID->"0869ca8a-13f0-4031-8d59-caf21ebbe5de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plotSolution", "[", "weightsAss_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", "=", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Values", "@", 
          RowBox[{"KeySort", "[", "weightsAss", "]"}]}]}]}], "}"}], ",", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"t", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "*", 
              SuperscriptBox["x", "2"]}], "+", 
             RowBox[{
              RowBox[{"t", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], " ", "x", 
              " ", "y"}], "+", 
             RowBox[{
              RowBox[{"t", "\[LeftDoubleBracket]", 
               RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], "*", 
              SuperscriptBox["y", "2"]}], "+", 
             RowBox[{
              RowBox[{"t", "\[LeftDoubleBracket]", 
               RowBox[{"4", ",", "1"}], "\[RightDoubleBracket]"}], " ", "x"}],
              "+", 
             RowBox[{
              RowBox[{"t", "\[LeftDoubleBracket]", 
               RowBox[{"5", ",", "1"}], "\[RightDoubleBracket]"}], " ", "y"}],
              "+", 
             RowBox[{"t", "\[LeftDoubleBracket]", 
              RowBox[{"6", ",", "1"}], "\[RightDoubleBracket]"}]}], 
            "\[Equal]", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "[", 
         RowBox[{"data", ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"printSolution", "[", "weightsAss_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", "=", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Values", "@", 
          RowBox[{"KeySort", "[", "weightsAss", "]"}]}]}]}], "}"}], ",", 
      RowBox[{"Print", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"t", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "*", 
          SuperscriptBox["x", "2"]}], "+", 
         RowBox[{
          RowBox[{"t", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
           " ", "x", " ", "y"}], "+", 
         RowBox[{
          RowBox[{"t", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
           "*", 
          SuperscriptBox["y", "2"]}], "+", 
         RowBox[{
          RowBox[{"t", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}],
           " ", "x"}], "+", 
         RowBox[{
          RowBox[{"t", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}],
           " ", "y"}], "+", 
         RowBox[{
         "t", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
        "\[Equal]", "0"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"tnet", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "nuData", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "15000"}], ",", 
    RowBox[{"TrainingProgressReporting", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"plotSolution", "[", "#Weights", "]"}], "&"}], ",", 
       RowBox[{"\"\<Interval\>\"", "\[Rule]", "0.1"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.766134147302835*^9, 3.76613421418539*^9}, 
   3.7661342852993097`*^9, {3.7661343744319077`*^9, 3.766134397945166*^9}, 
   3.766134439097597*^9, {3.76613454342828*^9, 3.7661345459703407`*^9}, {
   3.7661346377187853`*^9, 3.7661348075107117`*^9}, 3.7661348654179296`*^9, {
   3.76613491592619*^9, 3.766134975240864*^9}, {3.76613625828726*^9, 
   3.766136292133116*^9}, {3.766136430542129*^9, 3.766136451684556*^9}, {
   3.7663574144121637`*^9, 3.766357414542816*^9}},
 CellLabel->
  "In[331]:=",ExpressionUUID->"8555c40d-761a-4158-a414-7a59b5018744"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["15", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    PaneBox[
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-4., 
                    2.4492935982947064`*^-16}, {-3., -1.9999999999999998`}}], 
                    
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQECB9hjRIzVlm20CT5/4+jr+fwHimomzNAo3Giz
0UOyYpcp/4FXMbs5pptttJHIOSiWc5DvQO7fKc2F3zbYtFpeXMjgzHfgd6ws
544NG2z+bABp4D0wpS5kZlbqBpu6S+q1l9R5D1jGW5l0imywYZuXd5a/m+fA
pf9zN6vXrLeZISzLZfCE+4DXQRUR0SPrbIzBgPvADSbOrlsM62xiLmupyjVw
HSjZsnIV8+wc+zmnavd8vcR5QGgziN9j/0lC5+dObc4D00r+8xuJL7CP2Gd6
O6uL48DuTSD5NfbXds1K4njPfmD25JC7UpHb7DP5ovsnRbIfaASrP2AvsLMs
kfMU24FTb1aeW/fsqP2ZXW9v5DiwHVgG1n/Gfp7wga979rAe4E3+Hyghdcme
7bzvwpSbLAdOtk/8esvkpn2N+XlWMTaWAyoubRf9z9+3/+vjonzRifmAwJl3
Rbu/PLLv4l/7c2o/04E7B70lVxx8aq9Uz9mZ8obxQAXzrdu5fi/sT8yOvGgT
yXjgyYSZu3hmv7KvTJ17Se4awwG5rK6tLcvf2JvfudLDlcxwQLN/zZmrxe/s
oRF2gBFMfbAHAH6IzjA=
                    "]], 
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 3.}}], 
                    
                    LineBox[{{-3., -1.9999999999999998`}, {-2., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-3., -0.9999999999999998}, {-2., \
-0.9999999999999999}}], 
                    LineBox[{{-2., -0.9999999999999999}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-3.9999999999999996`, 
                    5.}, {-2.9999999999999996`, 7.}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQ/R8M+A8wgIGIQ/D5G0dfz0fw13tIVuwyRfDFcw6K
5RzkO8AI5bdYXlzI4MwHl/+zAaSBF86vuaRee0kdwWebl3eWv5sHzp8hLMtl
8IQbzjcyBgEEP/qylqpcA9eBk6u65uf8EXaYfap2z9dLnAfUVmvVbfoo7PBe
QufnTm3OAxKMD2ZfvC/sEL7P9HZWF8eB2WtW/Th5TNjh6q5ZSRzv2Q9sWts1
ZfYyYYcMvuj+SZHsB2JYGvLd6oUdBHaWJXKeYjswa0NX56kAYYczu97eyHFg
O5C9adUjdWlhh3nCB77u2cN64Dzng6q4e0IObOd9F6bcZDnQ8nxZwKYcIYdq
8/OsYmwsB/bNfs7EzSzk8NfHRfmiE/OBOrVFEzMWCjp08q/9ObWf6cCR9mt/
TrkLOijVc3amvGE8MGl/i4vRNwGH47MjL9pEMh54cnZNxrw1Ag4VqXMvyV1j
OLB3k18mf7aAg9mdKz1cyQwHZPKy3FoNBRwg8fV/PyR8BBwA8Yyvkg==
                    
                    "]], 
                    LineBox[{{-3.9999999999999996`, 5.}, {-3., 3.}}], 
                    
                    LineBox[{{-2.9999999999999996`, 
                    7.}, {-1.9999999999999996`, 6.}}], 
                    
                    LineBox[{{-2.9999999999999996`, 
                    6.}, {-1.9999999999999996`, 6.}}], 
                    
                    LineBox[{{-1.9999999999999996`, 6.}, {-0.9999999999999999,
                     2.}}], 
                    LineBox[{{-3., 3.}, {-1.9999999999999998`, 2.}}], 
                    LineBox[{{-3., 2.}, {-1.9999999999999998`, 2.}}], 
                    
                    LineBox[{{-1.9999999999999998`, 2.}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-2.9999999999999996`, 
                    4.}, {-1.9999999999999998`, 4.}}], 
                    
                    LineBox[{{-1.9999999999999998`, 4.}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-2., -1.9999999999999998`}, \
{-0.9999999999999999, 2.}}], 
                    
                    LineBox[{{-0.9999999999999999, 2.}, {
                    1.2246467991473532`*^-16, 2.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, -1.164589803375031}, {-0.25,
                     0}, 
                    Offset[8], {1., -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.8836936385164034`, 
                    0.14840512691569535`}, {-0.25, 0}, 
                    Offset[8], {0.07008586743419842, 0.04539450940950676}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.4871708245126287`, 
                    1.5384875264621147`}, {-0.25, 0}, 
                    Offset[8], {1., 2.9999999999999996`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, -1.4}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, -0.9999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4871708245126283`, 
                    0.5384875264621145}, {-0.25, 0}, 
                    Offset[8], {1., 3.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, 
                    6.164589803375031}, {-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.8836936385164034`, 
                    4.851594873084305}, {-0.25, 0}, 
                    Offset[8], {0.07008586743419798, -0.04539450940950651}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, 
                    3.8354101966249683`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.3999999999999995`, 6.4}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.3999999999999995`, 6.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.5592329219213243`, 
                    4.236931687685298}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -4.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-2.4, 
                    2.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1.0000000000000002`, -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-2.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {1.0000000000000002`, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999999, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.6}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999998}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.3999999999999995`, 4.}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4177050983124841`, 
                    2.8354101966249687`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999999, -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.5592329219213243`, -0.23693168768529815`}, \
{-0.25, 0}, 
                    Offset[8], {1., 4.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 2.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 2.4492935982947064`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"x\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["x", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-3., -1.9999999999999998`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzNlj1oFEEUx/cSCX4VEa2i4LcGUQSLaBWwCMEiCgkHih7c7e7M7CZwwiWi
dlfamE4Lm2DIurOraGFhqYVCrCy0VLsDjaBVBFNkfW/3TS7E5JLbm73zwbvb
nXnv/347X7uHzZujvMswjMnt8DNaun2xUindHeuFm3x50hVlZl8qTzHBKhfM
bmjsA+8H32b8/8aZXGRMXtUoOaJDRNjBNWQDj8DndWiSaeFjzH9PbL/w37HC
AR26hgY+zv3zio2x4F58zaXUAWdo4BPMD5AJ2Rwn3A/XS3hvWeGxTvMhA43d
kmn6fQmvnME24H7UaT5kSFjkjGrj/Ek/Mf/B8ewUn23PHVBziUyr+6DtGXE/
6BQft+VDWndP1/Y5ljwNfcvI7zj+oXbzYU0au2VkWS8G+L2EXz5uNx/UnaX5
m9swhsuj9fmX59rFh7XUnnVN70jDWBZM0xi+NYwolz1flMNaCV8wvVl0sfii
F2IX4rG2gxtZ88F7rEBjt4C1t5hTpJwfExPP92bFB2fIPqyRzJdf3HqJKMeZ
/4YY/ez4pKS19LrZtSSEd1x930D+dd18qEnPv4i1mmFTBs8nSON3Exqb8gHb
CdRM1rjkadgSw3mWITF+dl1vT6t8qIFa9L4PUp4RKzY+Hu4GrU/E+I7zlzvT
8hUKs7tijeR8/YjarbApo3dPLWGEfdOYcV2+hG1lz9Usyzuog02ZEOEpOD+/
k/6HBvr/8GEs5lDuN9TSyabMNcOToP9V7Tv4zjCr1WrXRnzYhzFqL2AuamTB
pgzPa24Hr6gerqMv4Hewbj4fdoNdiZ8D2uI+FQc5Kc76lBbl4Fwo1ddk3YeH
b0Vr2moY28I+HUnrPT07xs6euXx/cFDMDw1VfiIbOl5jG/ZhTAs1jL+4f8JR

                    "], {{0, 26}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 26}, 
                    PlotRange -> {{0, 40}, {0, 26}}, ImageSize -> 20], 
                    TraditionalForm]], {-3., -1.9999999999999998`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"power_x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "2"], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "1"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["power_x", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[#^2& , {4, 3}], "Input" -> 1]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-2., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"times_D_x\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_D_x", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 3.}], 
                    Offset[{10, 10}, {-3., 3.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 3.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"times_x_y\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_x_y", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., -0.9999999999999999}], 
                    Offset[{10, 10}, {-2., -0.9999999999999999}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-2., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"times_A_x2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_A_x2", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., -0.9999999999999998}], 
                    Offset[{10, 10}, {-3., -0.9999999999999998}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-3., -0.9999999999999998}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"A\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["A", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 2.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 2.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999999999999, 2.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"total\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    
                    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
                    "1"}], "}"}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["total", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {1, 1, 1, 1, 1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999999999996`, 5.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"y\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["y", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2.9999999999999996`, 7.}], 
                    Offset[{10, 10}, {-2.9999999999999996`, 7.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzNlj1oFEEUx/cSCX4VEa2i4LcGUQSLaBWwCMEiCgkHih7c7e7M7CZwwiWi
dlfamE4Lm2DIurOraGFhqYVCrCy0VLsDjaBVBFNkfW/3TS7E5JLbm73zwbvb
nXnv/347X7uHzZujvMswjMnt8DNaun2xUindHeuFm3x50hVlZl8qTzHBKhfM
bmjsA+8H32b8/8aZXGRMXtUoOaJDRNjBNWQDj8DndWiSaeFjzH9PbL/w37HC
AR26hgY+zv3zio2x4F58zaXUAWdo4BPMD5AJ2Rwn3A/XS3hvWeGxTvMhA43d
kmn6fQmvnME24H7UaT5kSFjkjGrj/Ek/Mf/B8ewUn23PHVBziUyr+6DtGXE/
6BQft+VDWndP1/Y5ljwNfcvI7zj+oXbzYU0au2VkWS8G+L2EXz5uNx/UnaX5
m9swhsuj9fmX59rFh7XUnnVN70jDWBZM0xi+NYwolz1flMNaCV8wvVl0sfii
F2IX4rG2gxtZ88F7rEBjt4C1t5hTpJwfExPP92bFB2fIPqyRzJdf3HqJKMeZ
/4YY/ez4pKS19LrZtSSEd1x930D+dd18qEnPv4i1mmFTBs8nSON3Exqb8gHb
CdRM1rjkadgSw3mWITF+dl1vT6t8qIFa9L4PUp4RKzY+Hu4GrU/E+I7zlzvT
8hUKs7tijeR8/YjarbApo3dPLWGEfdOYcV2+hG1lz9Usyzuog02ZEOEpOD+/
k/6HBvr/8GEs5lDuN9TSyabMNcOToP9V7Tv4zjCr1WrXRnzYhzFqL2AuamTB
pgzPa24Hr6gerqMv4Hewbj4fdoNdiZ8D2uI+FQc5Kc76lBbl4Fwo1ddk3YeH
b0Vr2moY28I+HUnrPT07xs6euXx/cFDMDw1VfiIbOl5jG/ZhTAs1jL+4f8JR

                    "], {{0, 26}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 26}, 
                    PlotRange -> {{0, 40}, {0, 26}}, ImageSize -> 20], 
                    TraditionalForm]], {-2.9999999999999996`, 7.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"power_y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "2"], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "1"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["power_y", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[#^2& , {4, 3}], "Input" -> 1]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1.9999999999999998`, 4.}], 
                    Offset[{10, 10}, {-1.9999999999999998`, 4.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999999999998`, 4.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"times_E_y\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_E_y", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1.9999999999999996`, 6.}], 
                    Offset[{10, 10}, {-1.9999999999999996`, 6.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999999999996`, 6.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"times_C_y2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_C_y2", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2.9999999999999996`, 6.}], 
                    Offset[{10, 10}, {-2.9999999999999996`, 6.}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-2.9999999999999996`, 6.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"C\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["C", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1.9999999999999998`, 2.}], 
                    Offset[{10, 10}, {-1.9999999999999998`, 2.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999999999998`, 2.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"times_x_y_B\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["times_x_y_B", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {1, 1}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 2.}], 
                    Offset[{10, 10}, {-3., 2.}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-3., 2.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"B\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["B", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-3., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"D\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["D", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2.9999999999999996`, 4.}], 
                    Offset[{10, 10}, {-2.9999999999999996`, 4.}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-2.9999999999999996`, 4.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"E\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["E", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-2., -1.9999999999999998`}]]}, 
                    InsetBox[
                    FormBox["\"CA\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., -1.9999999999999998`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"F\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConstantArrayLayer", "[", 
                    RowBox[{"{", "1", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["F", Bold], 
                    Style[
                    HoldForm[
                    ConstantArrayLayer[{1}]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{1.2246467991473532`*^-16, 2.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"x\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., 2.4492935982947064`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"power_x\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"times_D_x\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"times_x_y\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 3.}], {0, 1.}, Automatic, {1, 0}], 
                    
                    InsetBox[
                    FormBox["\"times_A_x2\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"A\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"total\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 2.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"y\"", TraditionalForm], 
                    Offset[{0, -7}, {-3.9999999999999996`, 5.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"power_y\"", TraditionalForm], 
                    Offset[{0, -13}, {-2.9999999999999996`, 7.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"times_E_y\"", TraditionalForm], 
                    Offset[{0, -13}, {-1.9999999999999998`, 4.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"times_C_y2\"", TraditionalForm], 
                    Offset[{0, -13}, {-1.9999999999999996`, 6.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"C\"", TraditionalForm], 
                    Offset[{0, -13}, {-2.9999999999999996`, 6.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"times_x_y..\"", "\"times_x_y_B\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "times_x_y_B", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-1.9999999999999998`, 2.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"B\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 2.}], {0, 1.}, Automatic, {1, 0}], 
                    
                    InsetBox[
                    FormBox["\"D\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"E\"", TraditionalForm], 
                    Offset[{0, -13}, {-2.9999999999999996`, 4.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"F\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {1.2246467991473532`*^-16, 2.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499537, 
                    2.4596747752497685`}, {-3.417705098312484, \
-1.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, -0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-2.9899630992180724`, 
                    4.61628862456782}, {-2.8836936385164034`, 
                    0.14840512691569535`}], {0., -0.17}, Automatic, {
                    0.8393252044668763, 0.5436296544032859}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-5.217758139277825, 
                    1.7392527130926088`}, {-3.4871708245126287`, 
                    1.5384875264621147`}], {0., -0.17}, Automatic, {
                    0.31622776601683794`, 0.9486832980505137}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 
                    3.8890872965260117`}, {-2.4000000000000004`, -1.4}], {
                    0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-2.4000000000000004`, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-5.217758139277826, 
                    1.7392527130926088`}, {-1.4871708245126283`, 
                    0.5384875264621145}], {0., -0.17}, Automatic, {
                    0.31622776601683794`, 0.9486832980505138}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-3.417705098312484, 
                    6.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, 0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{2.989963099218075, 
                    4.616288624567819}, {-2.8836936385164034`, 
                    4.851594873084305}], {0., -0.17}, Automatic, {
                    0.8393252044668762, -0.5436296544032864}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499538, 
                    2.4596747752497676`}, {-3.417705098312484, 
                    3.8354101966249683`}], {0., -0.17}, Automatic, {
                    0.44721359549995776`, -0.894427190999916}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-2.3999999999999995`, 6.4}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-2.3999999999999995`, 6.}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{5.335783750799325, 
                    1.3339459376998308`}, {-1.5592329219213243`, 
                    4.236931687685298}], {0., -0.17}, Automatic, {
                    0.24253562503633289`, -0.9701425001453319}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 3.8890872965260117`}, {-2.4, 
                    2.4000000000000004`}], {0., -0.17}, Automatic, {
                    0.7071067811865476, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-2.4, 2.}], {0., -0.17}, Automatic, {
                    1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, 2.}], {0., -0.17}, Automatic, {
                    1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-1.4, 
                    1.6}], {0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-2.3999999999999995`, 4.}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499537, 
                    2.459674775249768}, {-1.4177050983124841`, 
                    2.8354101966249687`}], {0., -0.17}, Automatic, {
                    0.44721359549995787`, -0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-5.335783750799325, 
                    1.3339459376998313`}, {-1.5592329219213243`, \
-0.23693168768529815`}], {0., -0.17}, Automatic, {0.24253562503633297`, 
                    0.9701425001453319}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 2.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-4., 
                    2.4492935982947064`*^-16}, {-3., -1.9999999999999998`}, \
{-2., 1.0000000000000002`}, {-3., 
                    3.}, {-2., -0.9999999999999999}, {-3., \
-0.9999999999999998}, {-0.9999999999999999, 2.}, {-3.9999999999999996`, 
                    5.}, {-2.9999999999999996`, 7.}, {-1.9999999999999998`, 
                    4.}, {-1.9999999999999996`, 6.}, {-2.9999999999999996`, 
                    6.}, {-1.9999999999999998`, 2.}, {-3., 2.}, {-3., 
                    1.0000000000000002`}, {-2.9999999999999996`, 
                    4.}, {-2., -1.9999999999999998`}, {
                    1.2246467991473532`*^-16, 2.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 20, 20, 20, 20, 8, 20, 20, 20, 20, 20, 
                    20, 20, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {270.5, 536.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{24., 26.5}, {27., 14.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Scrollbars -> {False, True}, ImageSizeAction -> 
                    "Scrollable", ImageSize -> {Automatic, 500}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "x"], 
                    NeuralNetworks`NetPath["Nodes", "power_x"], 
                    NeuralNetworks`NetPath["Nodes", "times_D_x"], 
                    NeuralNetworks`NetPath["Nodes", "times_x_y"], 
                    NeuralNetworks`NetPath["Nodes", "times_A_x2"], 
                    NeuralNetworks`NetPath["Nodes", "A"], 
                    NeuralNetworks`NetPath["Nodes", "total"], 
                    NeuralNetworks`NetPath["Inputs", "y"], 
                    NeuralNetworks`NetPath["Nodes", "power_y"], 
                    NeuralNetworks`NetPath["Nodes", "times_E_y"], 
                    NeuralNetworks`NetPath["Nodes", "times_C_y2"], 
                    NeuralNetworks`NetPath["Nodes", "C"], 
                    NeuralNetworks`NetPath["Nodes", "times_x_y_B"], 
                    NeuralNetworks`NetPath["Nodes", "B"], 
                    NeuralNetworks`NetPath["Nodes", "D"], 
                    NeuralNetworks`NetPath["Nodes", "E"], 
                    NeuralNetworks`NetPath["Nodes", "F"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "x" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "y" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    Association[
                    "power_x" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "A" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_A_x2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "power_y" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "C" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_C_y2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_x_y" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "B" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_x_y_B" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "D" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_D_x" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "E" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "times_E_y" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "F" -> 
                    Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {1}, "$ArrayDimensions" -> {1}], "Inputs" -> 
                    Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "total" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "4" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "5" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "6" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]]], 
                    Association[]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"x\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"y\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.766134204147191*^9, 3.766134215478611*^9}, 
   3.766134305416514*^9, 3.766134339921914*^9, 3.766134389827099*^9, 
   3.7661344291529093`*^9, 3.766134498666334*^9, 3.766134561453583*^9, 
   3.7661347703952827`*^9, 3.766134822143743*^9, {3.76613497989028*^9, 
   3.766134995574027*^9}, {3.766136288245172*^9, 3.766136306618554*^9}, {
   3.7661364169675407`*^9, 3.766136468031433*^9}, 3.7661880854523973`*^9, 
   3.766335568464583*^9, {3.766357405351963*^9, 3.766357422955077*^9}, 
   3.7663924139355507`*^9, 3.7665696535815907`*^9},
 CellLabel->
  "Out[333]=",ExpressionUUID->"6fdc363d-87c9-4fda-aba0-98a91a38804b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "convexHull", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"convexHull", "[", "points_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Needs", "[", "\"\<ComputationalGeometry`\>\"", "]"}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"MeshCoordinates", "[", 
    RowBox[{"ConvexHullMesh", "[", "points", "]"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.68754864387191*^9, 3.687548753897099*^9}, {
  3.687549611738805*^9, 3.6875496207838984`*^9}, {3.76635743015471*^9, 
  3.766357442601809*^9}, {3.766392377795891*^9, 3.766392419264409*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"10aa60df-9413-4b6f-9bd9-389758199ece"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "bounding2Ellipse", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bounding2Ellipse", "[", "PT_", "]"}], ":=", "\[IndentingNewLine]", 
  
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "=", "2"}], ",", "N", ",", "PTPrime", ",", "P", ",", "Q", 
      ",", 
      RowBox[{"count", "=", "1"}], ",", 
      RowBox[{"err", "=", "1"}], ",", "u", ",", "U", ",", 
      RowBox[{"tolerance", "=", "0.001"}], ",", "V", ",", "M", ",", "j", ",", 
      "maximum", ",", "\[Alpha]", ",", "du", ",", "newU", ",", "A", ",", "c", 
      ",", "radii"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PTPrime", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"convexHull", "[", "PT", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"N", "=", 
      RowBox[{"Length", "[", "PTPrime", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P", "=", 
      RowBox[{"PTPrime", "\[Transpose]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Q", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"P", ",", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"1.", ",", "N"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"1.", "/", "N"}], ",", "N"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"err", ">", "tolerance"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"V", "=", 
         RowBox[{"Q", ".", 
          RowBox[{"DiagonalMatrix", "[", "u", "]"}], ".", 
          RowBox[{"Q", "\[Transpose]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"M", "=", 
         RowBox[{"Diagonal", "[", 
          RowBox[{
           RowBox[{"Q", "\[Transpose]"}], ".", 
           RowBox[{"Inverse", "[", "V", "]"}], ".", "Q"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maximum", "=", 
         RowBox[{"Max", "[", "M", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"j", "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"M", ",", "maximum", ",", "2"}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{"(*", " ", 
         RowBox[{"discrete", " ", "argmax"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"\[Alpha]", "=", 
         FractionBox[
          RowBox[{"maximum", "-", "d", "-", "1"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"d", "+", "1"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"maximum", "-", "1"}], ")"}]}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"newU", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "u"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newU", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "+=", "\[Alpha]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"err", "=", 
         RowBox[{"Norm", "[", 
          RowBox[{"newU", "-", "u"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"count", "++"}], ";", "\[IndentingNewLine]", 
        RowBox[{"u", "=", "newU"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"U", "=", 
      RowBox[{"DiagonalMatrix", "[", "u", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"P", ".", "u"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{"d", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"P", ".", "U", ".", 
          RowBox[{"P", "\[Transpose]"}]}], "-", 
         RowBox[{"c", ".", 
          RowBox[{"c", "\[Transpose]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Flatten", "@", "c"}], ",", "A"}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6871734739405737`*^9, 3.687173551017117*^9}, {
   3.687173605807712*^9, 3.687173650437333*^9}, {3.6871737160187597`*^9, 
   3.687173846820878*^9}, {3.687173944791944*^9, 3.6871739849748173`*^9}, {
   3.687174056941351*^9, 3.687174205021307*^9}, {3.687174261851076*^9, 
   3.687174275474512*^9}, {3.687174323425336*^9, 3.687174325248046*^9}, {
   3.687174367093232*^9, 3.687174402101966*^9}, {3.687174522345189*^9, 
   3.687174522399528*^9}, {3.687174570174315*^9, 3.687174576452173*^9}, {
   3.687174662897797*^9, 3.687174679259933*^9}, {3.6871759461765633`*^9, 
   3.687176005028431*^9}, {3.6871762103643913`*^9, 3.687176211513454*^9}, {
   3.687176242930943*^9, 3.687176340653645*^9}, 3.6871764052074013`*^9, {
   3.6871764897820587`*^9, 3.687176509006352*^9}, {3.687176561434104*^9, 
   3.687176576338737*^9}, {3.687176611995637*^9, 3.687176628320066*^9}, {
   3.687176733556562*^9, 3.6871767549796333`*^9}, {3.6871772293443413`*^9, 
   3.687177229485488*^9}, {3.687177413197239*^9, 3.6871774364761353`*^9}, {
   3.687177966277115*^9, 3.687177976124058*^9}, {3.687178154722665*^9, 
   3.687178174340241*^9}, {3.68719248575071*^9, 3.687192510335684*^9}, {
   3.687192638801128*^9, 3.6871926430317717`*^9}, {3.6871932378793488`*^9, 
   3.6871932921680803`*^9}, {3.687545931522923*^9, 3.6875459407907133`*^9}, {
   3.6875460408099546`*^9, 3.6875460583140163`*^9}, {3.687546089682576*^9, 
   3.687546102065764*^9}, {3.687547524005521*^9, 3.687547530842609*^9}, {
   3.687547563211145*^9, 3.687547615736636*^9}, {3.687547659600087*^9, 
   3.687547665352*^9}, {3.68754892527225*^9, 3.687549009059875*^9}, {
   3.687549041445002*^9, 3.6875490648920097`*^9}, {3.687552914186452*^9, 
   3.68755291881186*^9}, {3.687553025967354*^9, 3.68755303743839*^9}, {
   3.687553127249775*^9, 3.6875531344247427`*^9}, 3.6875533036475353`*^9, 
   3.6875533372065907`*^9, {3.687553510425873*^9, 3.687553514049897*^9}, {
   3.687553555451304*^9, 3.687553559641773*^9}, {3.6875538145287447`*^9, 
   3.6875538343849297`*^9}, {3.6875538989310923`*^9, 3.687553899809492*^9}, 
   3.687553954150279*^9, {3.687557273337921*^9, 3.6875572768617687`*^9}, {
   3.6875573340244923`*^9, 3.687557342319549*^9}, {3.687719697409629*^9, 
   3.687719716752078*^9}, {3.6877197633700037`*^9, 3.687719883092472*^9}, {
   3.687719970925495*^9, 3.6877199928222647`*^9}, {3.687720024128212*^9, 
   3.687720047839085*^9}, 3.6877200901068172`*^9, {3.687726846901085*^9, 
   3.687726871516046*^9}, {3.687727123543889*^9, 3.687727124142825*^9}, {
   3.687727156704617*^9, 3.6877271569349527`*^9}, {3.766136739952632*^9, 
   3.7661367777999773`*^9}, {3.766137017351324*^9, 3.766137078124711*^9}, {
   3.7661371133992043`*^9, 3.766137115773384*^9}, {3.766187903077017*^9, 
   3.766187971795989*^9}, 3.766188011471085*^9},
 CellLabel->
  "In[336]:=",ExpressionUUID->"c4a8ab73-dfa4-4dbb-8a29-1f5c2df58698"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "errorEllipsoid", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"errorEllipsoid", "[", 
    RowBox[{"pos_", ",", "cov_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u", ",", "w", ",", "v", " ", ",", "\[Theta]", ",", "evs"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "w", ",", "v"}], "}"}], "=", 
       RowBox[{"SingularValueDecomposition", "[", "cov", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]", "=", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"v", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"v", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"evs", "=", 
       RowBox[{"Sqrt", "/@", 
        RowBox[{"Diagonal", "[", "w", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Rotate", "[", 
       RowBox[{
        RowBox[{"Circle", "[", 
         RowBox[{"pos", ",", "evs"}], "]"}], ",", "\[Theta]"}], "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6871918599563637`*^9, 3.687191892174271*^9}, {
   3.687192040914091*^9, 3.687192056809198*^9}, {3.6871922584208307`*^9, 
   3.6871922754513063`*^9}, {3.6871924273419523`*^9, 
   3.6871924292290287`*^9}, {3.687192808033189*^9, 3.687192818753294*^9}, {
   3.6871929029073772`*^9, 3.687192996265233*^9}, {3.687193248101913*^9, 
   3.68719324929045*^9}, {3.687193454073681*^9, 3.687193595425725*^9}, {
   3.6871936969951897`*^9, 3.687193716529676*^9}, 3.687196598228005*^9, {
   3.687199000565976*^9, 3.687199001652626*^9}},
 CellLabel->
  "In[338]:=",ExpressionUUID->"191cd211-e644-452c-8a35-12b571146799"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"errorEllipsoid", "@@", 
   RowBox[{"bounding2Ellipse", "[", "data", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766186740179886*^9, 3.766186745265192*^9}, {
  3.7661868184404917`*^9, 3.766186834282872*^9}},
 CellLabel->
  "In[340]:=",ExpressionUUID->"7df1f37b-7b9a-43a1-b8ee-4e784cdad4e3"],

Cell[BoxData[
 GraphicsBox[
  GeometricTransformationBox[
   CircleBox[{-0.32484902046175534, -0.00024078740533053488}, \
{0.5000169648567208, 0.3799540232869871}], {{{-0.9999999940420631, \
-0.00010915985394626569`}, {0.00010915985394626569`, -0.9999999940420631}}, 
    Center}]]], "Output",
 CellChangeTimes->{
  3.766186746136952*^9, {3.7661868239205217`*^9, 3.7661868347851763`*^9}, 
   3.766188085533514*^9, 3.766335568617031*^9, 3.766357454100963*^9, {
   3.7663924140157957`*^9, 3.766392428598247*^9}, 3.766569653660227*^9},
 CellLabel->
  "Out[340]=",ExpressionUUID->"6e885125-125c-4ec4-9818-851169946f4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "points", ",", "pairwise", ",", "closeList", ",", 
    "perpProjectedPointAndParameter", ",", "perpRenderable", ",", 
    "yForXFromLine", ",", "lineLineIntersection", ",", "print"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"points", "=", 
   RowBox[{"n", "\[Function]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2.", "\[Pi]", " ", "i"}], "n"], "]"}], ",", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"2.", "\[Pi]", " ", "i"}], "n"], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pairwise", "[", 
    RowBox[{"fxy_", ",", "l_List"}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{"fxy", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{"l", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"Drop", "[", 
        RowBox[{"l", ",", "1"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"closeList", "[", "l_List", "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{"l", ",", 
     RowBox[{"{", 
      RowBox[{"First", "[", "l", "]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"print", "=", 
   RowBox[{"Null", "&"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"perpProjectedPointAndParameter", "[", 
   RowBox[{"p_", ",", 
    RowBox[{"{", 
     RowBox[{"u_", ",", "v_"}], "}"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", "q", ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"l", "=", 
      RowBox[{"v", "-", "u"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"t", "=", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"p", "-", "u"}], ")"}], ".", "l"}], 
       RowBox[{"l", ".", "l"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"q", "=", 
      RowBox[{"u", "+", 
       RowBox[{"t", " ", "l"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"q", ",", "t"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"perpRenderable", "[", 
    RowBox[{"p0_", ",", 
     RowBox[{"dir", ":", 
      RowBox[{"{", 
       RowBox[{"p1_", ",", "p2_"}], "}"}]}], ",", 
     RowBox[{"scale_:", "4"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dx", ",", "dy", ",", "dq"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dx", ",", "dy"}], "}"}], "=", 
       RowBox[{"p2", "-", "p1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "dy"}], ",", "dx"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p0", "-", 
         RowBox[{"scale", "*", "dq"}]}], ",", 
        RowBox[{"p0", "+", 
         RowBox[{"scale", "*", "dq"}]}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yForXFromLine", "[", 
    RowBox[{"x_Symbol", ",", 
     RowBox[{"{", 
      RowBox[{"p1_", ",", "p2_"}], "}"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dx", ",", "dy", ",", "m", ",", "b", ",", "b1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"print", "[", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<p1\>\"", "\[Rule]", "p1"}], ",", 
         RowBox[{"\"\<p2\>\"", "\[Rule]", "p2"}]}], "|>"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dx", ",", "dy"}], "}"}], "=", 
       RowBox[{"p2", "-", "p1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"m", "=", 
       FractionBox["dy", "dx"]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"dx", "\[NotEqual]", "0"}], ",", 
          FractionBox["dy", "dx"], ",", "Infinity"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"p1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "-", 
        RowBox[{"m", "*", 
         RowBox[{
         "p1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"b1", "=", 
       RowBox[{
        RowBox[{"p2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "-", 
        RowBox[{"m", "*", 
         RowBox[{
         "p2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Assert", "[", 
       RowBox[{"approxEqual", "[", 
        RowBox[{"b", ",", " ", "b1"}], "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"print", "[", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<b\>\"", "\[Rule]", "b"}], ",", 
         RowBox[{"\"\<m\>\"", "\[Rule]", "m"}], ",", 
         RowBox[{"\"\<b1\>\"", "\[Rule]", "b1"}]}], "|>"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"m", " ", "x"}], "+", "b"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lineLineIntersection", "[", 
    RowBox[{
     RowBox[{"l1", ":", 
      RowBox[{"{", 
       RowBox[{"p11_", ",", "p21_"}], "}"}]}], ",", 
     RowBox[{"l2", ":", 
      RowBox[{"{", 
       RowBox[{"p12_", ",", "p22_"}], "}"}]}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"print", "[", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<l1\>\"", "\[Rule]", "l1"}], ",", 
        RowBox[{"\"\<l2\>\"", "\[Rule]", "l2"}]}], "|>"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "x", ",", "y4x1", ",", "y4x2", ",", "theX", ",", "yf1", ",", "yf2"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"y4x1", "=", 
         RowBox[{"yForXFromLine", "[", 
          RowBox[{"x", ",", "l1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"y4x2", "=", 
         RowBox[{"yForXFromLine", "[", 
          RowBox[{"x", ",", "l2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"theX", "=", 
         RowBox[{
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{"y4x1", "\[Equal]", "y4x2"}], ",", "x"}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"yf1", "=", 
         RowBox[{"y4x1", "/.", 
          RowBox[{"x", "\[Rule]", "theX"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"yf2", "=", 
         RowBox[{"y4x2", "/.", 
          RowBox[{"x", "\[Rule]", "theX"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Assert", "[", 
         RowBox[{"approxEqual", "[", 
          RowBox[{"yf1", ",", "yf2"}], "]"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"theX", ",", "yf1"}], "}"}]}]}], "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"o", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"votoggle", "=", "True"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"pts", "=", 
            RowBox[{"points", "[", "n", "]"}]}], ",", "vees", ",", "vperps", 
           ",", "operps", ",", "orbrds", ",", "sects", ",", "oscts", ",", 
           "hues", ",", "arrows"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"hues", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Hue", "[", 
              RowBox[{"#", "/", "n"}], "]"}], "&"}], "/@", 
            RowBox[{"Range", "[", "n", "]"}]}]}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"arrows", "=", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p", ",", "is"}], "}"}], "\[Function]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Hue", "[", 
                 RowBox[{
                  RowBox[{
                  "is", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "/", "n"}], "]"}], ",", 
                RowBox[{"Arrow", "[", 
                 RowBox[{"{", 
                  RowBox[{"star", ",", "p"}], "}"}], "]"}]}], "}"}]}], ",", 
             "pts"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Show", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Point", "/@", "pts"}], ",", "\[IndentingNewLine]", 
                "LightRed", ",", 
                RowBox[{"pairwise", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
                  RowBox[{"closeList", "@", "pts"}]}], "]"}], ",", 
                "\[IndentingNewLine]", "LightBlue", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Arrow", "[", 
                   RowBox[{"{", 
                    RowBox[{"o", ",", "#"}], "}"}], "]"}], "&"}], "/@", 
                 "pts"}], ",", "\[IndentingNewLine]", "arrows", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"LightGray", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{"star", ",", "#"}], "}"}], "]"}], "&"}], "/@", 
                   "pts"}], ","}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"votoggle", ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vperps", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"perpRenderable", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"#", "+", "star"}], 
                    RowBox[{"2", "/", "s"}]], ",", 
                    RowBox[{"{", 
                    RowBox[{"star", ",", "#"}], "}"}]}], "]"}], "&"}], "/@", 
                    "pts"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"operps", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"o", ",", "#"}], "}"}], "&"}], "/@", "pts"}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"sects", "=", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"lineLineIntersection", ",", 
                    RowBox[{"{", 
                    RowBox[{"vperps", ",", "operps"}], "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"l", ",", "is"}], "}"}], "\[Function]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Hue", "[", 
                    RowBox[{
                    RowBox[{
                    "is", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", "n"}], "]"}], ",", 
                    RowBox[{"Line", "@", "l"}]}], "}"}]}], ",", "vperps"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"LightGray", ",", 
                    RowBox[{"Line", "/@", "vperps"}], ","}], "*)"}], 
                    "\[IndentingNewLine]", "Red", ",", 
                    RowBox[{"Point", "/@", "sects"}], ",", 
                    "\[IndentingNewLine]", "Red", ",", 
                    RowBox[{"pairwise", "[", 
                    RowBox[{
                    RowBox[{"Line", "@*", "List"}], ",", 
                    RowBox[{"closeList", "@", "sects"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", "Green", ",", 
                    RowBox[{"errorEllipsoid", "@@", 
                    RowBox[{"bounding2Ellipse", "[", "sects", "]"}]}]}], 
                   "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vees", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"star", ",", "#"}], "}"}], "&"}], "/@", "pts"}]}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"orbrds", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"perpRenderable", "[", 
                    RowBox[{
                    FractionBox["#", 
                    RowBox[{"2", "/", "s"}]], ",", 
                    RowBox[{"{", 
                    RowBox[{"o", ",", "#"}], "}"}]}], "]"}], "&"}], "/@", 
                    "pts"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"oscts", "=", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"lineLineIntersection", ",", 
                    RowBox[{"{", 
                    RowBox[{"vees", ",", "orbrds"}], "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "LightBlue"}], ",", 
                    RowBox[{"Line", "/@", "orbrds"}], ",", 
                    "\[IndentingNewLine]", "Purple", ",", 
                    RowBox[{"Point", "/@", "oscts"}], ",", 
                    "\[IndentingNewLine]", "Magenta", ",", 
                    RowBox[{"errorEllipsoid", "@@", 
                    RowBox[{"bounding2Ellipse", "[", "oscts", "]"}]}]}], 
                   "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"1.15", " ", "s"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "  ", "}"}],
            "]"}]}]}], "  ", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"star", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.65"}], ",", "0.001"}], "}"}]}], "}"}], ",", 
         "Locator"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Control", "[", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Click Here\>\"", ",", 
          RowBox[{"votoggle", "=", 
           RowBox[{"Not", "[", "votoggle", "]"}]}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"s", ",", "1"}], "}"}], ",", "0.5", ",", "4", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "6"}], "}"}], ",", "4", ",", "32", ",", "1", ",", 
         
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
      "]"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.766064670480206*^9, 3.766064711632913*^9}, {
   3.7660648737391367`*^9, 3.7660649611981783`*^9}, {3.7660656091223288`*^9, 
   3.766065643653947*^9}, {3.766066056121423*^9, 3.766066057163574*^9}, {
   3.7660662371409283`*^9, 3.7660665888741693`*^9}, {3.766066666134994*^9, 
   3.7660669398077707`*^9}, {3.766066988780394*^9, 3.766066996653054*^9}, {
   3.7660670285459538`*^9, 3.766067038348166*^9}, {3.7660677050393677`*^9, 
   3.7660678020698137`*^9}, {3.7660678572980328`*^9, 3.766068076252627*^9}, {
   3.766068353672558*^9, 3.766068413551338*^9}, {3.766068477428846*^9, 
   3.76606861325817*^9}, {3.766069086719146*^9, 3.766069132000482*^9}, {
   3.766069344635482*^9, 3.766069473797184*^9}, {3.766069504045389*^9, 
   3.766069600993979*^9}, {3.766069671923707*^9, 3.766069750031292*^9}, {
   3.766069802975174*^9, 3.7660698364285727`*^9}, 3.766069890582033*^9, {
   3.766070013016224*^9, 3.766070035898692*^9}, {3.766070170605927*^9, 
   3.766070273761272*^9}, {3.7660703212718077`*^9, 3.7660704307724733`*^9}, {
   3.766070484231498*^9, 3.766070521529812*^9}, {3.7660705575380173`*^9, 
   3.766070573878313*^9}, {3.766071130235977*^9, 3.7660712803967867`*^9}, {
   3.76607131254985*^9, 3.7660714032293653`*^9}, {3.766071604841756*^9, 
   3.7660718697112503`*^9}, {3.766071932909358*^9, 3.766072033988058*^9}, {
   3.766072070911962*^9, 3.76607207718117*^9}, {3.766072108840231*^9, 
   3.766072109227604*^9}, {3.7660721508670263`*^9, 3.766072151671728*^9}, {
   3.766072263976633*^9, 3.7660723926898203`*^9}, {3.766072434587599*^9, 
   3.766072458442108*^9}, {3.7660724989314423`*^9, 3.7660725413623743`*^9}, {
   3.766072577846695*^9, 3.766072624333774*^9}, 3.766072765198563*^9, {
   3.766072816583191*^9, 3.766072905453909*^9}, {3.766072950899693*^9, 
   3.766073089540794*^9}, {3.766073176792737*^9, 3.766073229852*^9}, {
   3.7660739688024063`*^9, 3.7660740692391853`*^9}, {3.7660741053157253`*^9, 
   3.7660741501907587`*^9}, {3.766086642046794*^9, 3.766086701312336*^9}, {
   3.766086840097041*^9, 3.7660868566408653`*^9}, {3.766086964330611*^9, 
   3.76608700447683*^9}, {3.7660870429669113`*^9, 3.766087067792301*^9}, {
   3.766087101895165*^9, 3.766087103307433*^9}, {3.766087411917856*^9, 
   3.766087465454582*^9}, {3.76608751259278*^9, 3.7660875827380857`*^9}, 
   3.766087631449691*^9, {3.766087676763835*^9, 3.766087754207995*^9}, {
   3.766087902251156*^9, 3.7660880705595217`*^9}, {3.766088152228129*^9, 
   3.766088218169615*^9}, {3.766088321811647*^9, 3.7660883226799593`*^9}, {
   3.766088493324163*^9, 3.76608854234657*^9}, {3.7660886220582113`*^9, 
   3.7660886997304287`*^9}, {3.766088736228506*^9, 3.7660887834263163`*^9}, {
   3.766088862199298*^9, 3.766088926327903*^9}, {3.766088972969001*^9, 
   3.766088996125841*^9}, {3.766089028824171*^9, 3.766089054957199*^9}, {
   3.766089213589984*^9, 3.766089234653194*^9}, {3.766089270728058*^9, 
   3.7660892843406887`*^9}, {3.7660893145998783`*^9, 
   3.7660893874816732`*^9}, {3.766090825668173*^9, 3.766090855703944*^9}, {
   3.766091330883436*^9, 3.766091338652157*^9}, {3.766091495196899*^9, 
   3.7660915339925957`*^9}, {3.766091592396222*^9, 3.766091643863493*^9}, {
   3.76609170427363*^9, 3.766091745127351*^9}, {3.7660918915862923`*^9, 
   3.766091896049806*^9}, {3.766092041189567*^9, 3.766092042862274*^9}, {
   3.7660924231622963`*^9, 3.7660925019925947`*^9}, {3.766093267730781*^9, 
   3.7660934776412783`*^9}, {3.766093508713489*^9, 3.7660937332951937`*^9}, {
   3.766093816362412*^9, 3.766093835862527*^9}, {3.766093877320241*^9, 
   3.766093877325623*^9}, {3.766093914077524*^9, 3.766093949684363*^9}, {
   3.7660939834065437`*^9, 3.7660940037351227`*^9}, 3.7660940628837233`*^9, {
   3.766094199669092*^9, 3.766094240124752*^9}, {3.766094279187634*^9, 
   3.766094417032991*^9}, {3.766094536282612*^9, 3.76609458961747*^9}, {
   3.76609462063413*^9, 3.766094643422072*^9}, 3.766099534189474*^9, {
   3.76610273014743*^9, 3.766102730613064*^9}, {3.7661027631006603`*^9, 
   3.7661027873949614`*^9}, {3.766102847248157*^9, 3.766102894519149*^9}, {
   3.766103007760346*^9, 3.766103035223954*^9}, {3.76610308630415*^9, 
   3.76610313135096*^9}, {3.766103856987702*^9, 3.76610386722742*^9}, {
   3.766104104082323*^9, 3.766104160995626*^9}, {3.766104210685976*^9, 
   3.766104235153116*^9}, 3.766104304050068*^9, {3.766104661283185*^9, 
   3.7661046621059628`*^9}, {3.766104709793405*^9, 3.766104716045191*^9}, 
   3.766104800085106*^9, {3.766104851682384*^9, 3.766104920105256*^9}, {
   3.766104954001289*^9, 3.766104962137288*^9}, {3.766105018856286*^9, 
   3.76610502517731*^9}, {3.766105091259698*^9, 3.7661052823727283`*^9}, {
   3.766105415087666*^9, 3.766105430705686*^9}, {3.766105476405352*^9, 
   3.766105584922155*^9}, {3.766186851991928*^9, 3.766186925923064*^9}, {
   3.766186960483971*^9, 3.766186995369547*^9}, {3.766392488153693*^9, 
   3.766392580052288*^9}, {3.766392628379012*^9, 3.766392644220076*^9}, {
   3.7663927578452253`*^9, 3.766392830939866*^9}, {3.766392869321588*^9, 
   3.766393020695148*^9}, {3.766393052683248*^9, 3.7663930541525917`*^9}, {
   3.766393110149386*^9, 3.7663933299873877`*^9}, {3.7663933703391933`*^9, 
   3.766393408564456*^9}, {3.766393507667642*^9, 3.7663935505359163`*^9}, {
   3.7663937131157637`*^9, 3.7663937245386353`*^9}, {3.766393864262504*^9, 
   3.7663938868722878`*^9}, 3.766393947467907*^9, {3.766396596234148*^9, 
   3.766396705664537*^9}, {3.7663967504729*^9, 3.766396786264595*^9}, {
   3.766396929740151*^9, 3.76639696733578*^9}, {3.766397042132395*^9, 
   3.7663971496401854`*^9}, {3.766397227482553*^9, 3.7663972644284363`*^9}, {
   3.7663973333311977`*^9, 3.766397355351975*^9}, {3.766397618827623*^9, 
   3.766397687505013*^9}, {3.76639772427311*^9, 3.766397969803034*^9}, {
   3.76640056688218*^9, 3.7664006325644836`*^9}, 3.7664007358757353`*^9, {
   3.7664007673486433`*^9, 3.766400798961092*^9}, {3.766400847880375*^9, 
   3.766400848106667*^9}, {3.766400895876939*^9, 3.766400991651844*^9}, {
   3.766401041635077*^9, 3.766401050996022*^9}},
 CellLabel->
  "In[341]:=",ExpressionUUID->"9959a362-46bc-4169-8f00-a14c77ff4d96"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`votoggle$$ = True}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 16, $CellContext`s$$ = 
     1.166, $CellContext`star$$ = {-0.15200000000000014`, 0.274}, 
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`star$$], {-0.65, 0.001}}, Automatic}, {
       Hold[
        Button[
        "Click Here", $CellContext`votoggle$$ = 
         Not[$CellContext`votoggle$$]]], Manipulate`Dump`ThisIsNotAControl}, {{
        Hold[$CellContext`s$$], 1}, 0.5, 4}, {{
        Hold[$CellContext`n$$], 6}, 4, 32, 1}}, Typeset`size$$ = {
     1152., {570., 582.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`s$101136$$ = 
     0, $CellContext`n$101137$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, 
       "Variables" :> {$CellContext`n$$ = 6, $CellContext`s$$ = 
         1, $CellContext`star$$ = {-0.65, 0.001}}, "ControllerVariables" :> {
         Hold[$CellContext`s$$, $CellContext`s$101136$$, 0], 
         Hold[$CellContext`n$$, $CellContext`n$101137$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       Module[{$CellContext`pts$ = $CellContext`points[$CellContext`n$$], \
$CellContext`vees$, $CellContext`vperps$, $CellContext`operps$, \
$CellContext`orbrds$, $CellContext`sects$, $CellContext`oscts$, \
$CellContext`hues$, $CellContext`arrows$}, $CellContext`hues$ = 
          Map[Hue[#/$CellContext`n$$]& , 
            Range[$CellContext`n$$]]; $CellContext`arrows$ = MapIndexed[
            Function[{$CellContext`p$, $CellContext`is$}, {
              Hue[Part[$CellContext`is$, 1]/$CellContext`n$$], 
              
              Arrow[{$CellContext`star$$, $CellContext`p$}]}], \
$CellContext`pts$]; Show[{
            Graphics[{
              Map[Point, $CellContext`pts$], LightRed, 
              $CellContext`pairwise[Arrow[{#, #2}]& , 
               $CellContext`closeList[$CellContext`pts$]], LightBlue, 
              Map[
              Arrow[{{0, 0}, #}]& , $CellContext`pts$], $CellContext`arrows$, 
              
              
              If[$CellContext`votoggle$$, {$CellContext`vperps$ = 
                 Map[$CellContext`perpRenderable[(# + $CellContext`star$$)/(
                    2/$CellContext`s$$), {$CellContext`star$$, #}]& , \
$CellContext`pts$]; $CellContext`operps$ = 
                 Map[{{0, 0}, #}& , $CellContext`pts$]; $CellContext`sects$ = 
                 MapThread[$CellContext`lineLineIntersection, \
{$CellContext`vperps$, $CellContext`operps$}]; MapIndexed[
                  Function[{$CellContext`l$, $CellContext`is$}, {
                    Hue[Part[$CellContext`is$, 1]/$CellContext`n$$], 
                    Line[$CellContext`l$]}], $CellContext`vperps$], Red, 
                Map[Point, $CellContext`sects$], Red, 
                $CellContext`pairwise[
                 Composition[Line, List], 
                 $CellContext`closeList[$CellContext`sects$]], Green, 
                Apply[$CellContext`errorEllipsoid, 
                 $CellContext`bounding2Ellipse[$CellContext`sects$]]}, \
{$CellContext`vees$ = 
                 Map[{$CellContext`star$$, #}& , $CellContext`pts$]; \
$CellContext`orbrds$ = 
                 Map[$CellContext`perpRenderable[#/(
                    2/$CellContext`s$$), {{0, 
                    0}, #}]& , $CellContext`pts$]; $CellContext`oscts$ = 
                 MapThread[$CellContext`lineLineIntersection, \
{$CellContext`vees$, $CellContext`orbrds$}]; LightBlue, 
                Map[Line, $CellContext`orbrds$], Purple, 
                Map[Point, $CellContext`oscts$], Magenta, 
                Apply[$CellContext`errorEllipsoid, 
                 $CellContext`bounding2Ellipse[$CellContext`oscts$]]}]}, 
             PlotRange -> 1.15 $CellContext`s$$, ImageSize -> Large]}]], 
       "Specifications" :> {{{$CellContext`star$$, {-0.65, 0.001}}, Automatic,
           ControlType -> Locator}, 
         Button[
         "Click Here", $CellContext`votoggle$$ = 
          Not[$CellContext`votoggle$$]], {{$CellContext`s$$, 1}, 0.5, 4, 
          Appearance -> "Labeled"}, {{$CellContext`n$$, 6}, 4, 32, 1, 
          Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
      
      ImageSizeCache->{1250., {696., 708.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.766393178620384*^9, 3.766393202869133*^9}, {
   3.766393283528571*^9, 3.766393331896811*^9}, 3.766393409716612*^9, 
   3.766393551719265*^9, {3.7663937192759037`*^9, 3.7663937254175253`*^9}, {
   3.766393866246372*^9, 3.766393887802788*^9}, 3.766393948752088*^9, 
   3.766396675508972*^9, 3.766396711128043*^9, 3.766396873799869*^9, {
   3.7663969310106163`*^9, 3.7663969682900143`*^9}, {3.766397043162071*^9, 
   3.7663970532654247`*^9}, 3.76639709874452*^9, {3.766397129759069*^9, 
   3.766397151209227*^9}, {3.766397236959643*^9, 3.766397265212285*^9}, {
   3.766397335103343*^9, 3.766397356298808*^9}, 3.766397416933077*^9, 
   3.766397688830091*^9, {3.766397917985651*^9, 3.766397945403946*^9}, {
   3.766400584409211*^9, 3.766400633919683*^9}, 3.766400813070108*^9, 
   3.7664008494785013`*^9, {3.76640097519416*^9, 3.76640099409167*^9}, 
   3.766402817389612*^9, 3.766569653724711*^9},
 CellLabel->
  "Out[350]=",ExpressionUUID->"651b82ff-1475-4535-b894-da3c1a242d3a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ExportStylesheet", "::", "usage"}], "=", 
   "\"\<ExportStylesheet[fn]\\nExports the private stylesheet of the current \
notebook to some other one designated by fn. If the notebook designated by fn \
was open before, one would loose unstored edits. To prevent this, the target \
notebook is saved automatically before closing it.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExportStylesheet", "[", "fn_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "nbk", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nbk", "=", 
       RowBox[{"NotebookOpen", "[", "fn", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nbk", "\[Equal]", "$Failed"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<ImportStylesheet: Wrong Filename: \>\"", ",", "fn"}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Throw", "[", "\"\<Wrong filename!\>\"", "]"}]}]}], "  ", 
       RowBox[{"(*", " ", 
        RowBox[{"===", "THROW", "===", ">"}], "*)"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SetOptions", "[", 
       RowBox[{"nbk", ",", 
        RowBox[{"Options", "[", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "StyleDefinitions"}],
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"NotebookSave", "[", "nbk", "]"}], ";", 
      RowBox[{"(*", 
       RowBox[{"safeguard", " ", "against", " ", "edit", " ", "losses"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"NotebookClose", "[", "nbk", "]"}], ";"}]}], 
    RowBox[{"(*", 
     RowBox[{
     "closes", " ", "without", " ", "asking", " ", "to", " ", "store"}], 
     "*)"}], "\[IndentingNewLine]", "]"}]}], ";", 
  RowBox[{"(*", "ExportStylesheet", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.766570261063449*^9, 3.7665703235762463`*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"84377122-ff9f-427f-9b6d-074b12078031"],

Cell[BoxData[
 RowBox[{"ExportStylesheet", "[", 
  "\"\</home/ANT.AMAZON.COM/bbeckman/Dropbox/DOLPHIN/PENDULUM/LittleFiingers_\
n.nb\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.766570375183848*^9, 3.7665703861728687`*^9}, 
   3.7665706553785563`*^9},
 CellLabel->
  "In[359]:=",ExpressionUUID->"4200e174-17fa-42b9-95ee-61acd59431f7"]
}, Open  ]]
},
WindowSize->{1853, 2045},
WindowMargins->{{0, Automatic}, {0, Automatic}},
PrintingCopies->1,
PrintingStartingPageNumber->1,
PrintingPageRange->{1, Automatic},
TaggingRules->{
 "PaginationCache" -> {{2018, 2, 20, 19, 46, 39.675061`8.351092581673305}, {1,
     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
     4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 
    9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 11, 12, 12, 12, 12, 13, 14, 14, 
    15, 15, 17, 17, 19, 19, 19, 20}, Automatic}},
Magnification:>2. Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Creative"}, "PastelColor.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Text"], FontFamily -> "DejaVu Sans", FontSize -> 13, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Title"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 30,
     FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["ItemNumbered"], FontFamily -> "DejaVu Sans Condensed", 
    FontSize -> 13, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsubsection"], FontFamily -> "DejaVu Sans Condensed", 
    FontSize -> 15, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsection"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    15, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Section"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    18, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subchapter"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    28, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Chapter"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    30, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subtitle"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    15, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsubtitle"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    15, FontWeight -> "Bold", FontSlant -> "Italic", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Item"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 13, 
    FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["ItemParagraph"], FontFamily -> "DejaVu Sans", FontSize -> 13, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subitem"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    13, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubitemParagraph"], FontFamily -> "DejaVu Sans", FontSize -> 
    13, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Subsubitem"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    13, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubsubitemParagraph"], FontFamily -> "DejaVu Sans", FontSize -> 
    13, FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["ItemNumbered"]], 
   Cell[
    StyleData["SubitemNumbered"], FontFamily -> "DejaVu Sans Condensed", 
    FontSize -> 13, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["SubsubitemNumbered"], FontFamily -> "DejaVu Sans Condensed", 
    FontSize -> 13, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Input"]], 
   Cell[
    StyleData["Code"]], 
   Cell[
    StyleData["CodeText"], FontFamily -> "Source Sans Pro", FontSize -> 13, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Output"]], 
   Cell[
    StyleData["Subtitle"]], 
   Cell[
    StyleData["Subsubtitle"], FontFamily -> "DejaVu Sans Condensed", FontSize -> 
    15, FontWeight -> "Bold", FontSlant -> "Italic", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}]}, 
  WindowMargins -> {{Automatic, 28}, {31, Automatic}}, Magnification :> 
  3. Inherited, FrontEndVersion -> 
  "12.0 for Linux x86 (64-bit) (April 8, 2019)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "c:1"->{
  Cell[580, 22, 665, 9, 134, "Title",ExpressionUUID->"6f3cba05-b339-4654-99a4-829a31dbb3b1",
   CellTags->"c:1"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"c:1", 467659, 9870}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 665, 9, 134, "Title",ExpressionUUID->"6f3cba05-b339-4654-99a4-829a31dbb3b1",
 CellTags->"c:1"],
Cell[1248, 33, 718, 13, 102, "Text",ExpressionUUID->"f8a900e9-2e08-4795-8dd9-f13eab31aca1"],
Cell[CellGroupData[{
Cell[1991, 50, 398, 11, 164, "Input",ExpressionUUID->"3c096ea3-fe53-4135-a67a-5167fbeb6a98"],
Cell[2392, 63, 271, 7, 144, "Output",ExpressionUUID->"1d346773-116f-4058-a9e0-5e2a1901cda0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2700, 75, 518, 15, 186, "Input",ExpressionUUID->"8649ada3-bbd3-49e4-8b7c-8e84b0f06269"],
Cell[3221, 92, 430, 13, 208, "Output",ExpressionUUID->"15b66c9d-6b49-477e-bab3-00dfdb1bc5f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3688, 110, 375, 11, 149, "Input",ExpressionUUID->"22aa9a6a-b5a9-47ae-9640-82a5ae000563"],
Cell[4066, 123, 5645, 113, 536, "Output",ExpressionUUID->"dfc0195e-a3ec-4099-bbb2-490852842099"]
}, Open  ]],
Cell[9726, 239, 583, 10, 102, "Text",ExpressionUUID->"d7e913e0-0326-4141-8abe-3f4ca87342b1"],
Cell[10312, 251, 253, 4, 62, "Text",ExpressionUUID->"6ee75921-d795-480d-9ae2-25363897628f"],
Cell[10568, 257, 150, 3, 62, "Text",ExpressionUUID->"21da0045-6451-4fe4-ab06-7ba9536303d7"],
Cell[10721, 262, 603, 13, 302, "Text",ExpressionUUID->"e5e59c80-5976-49f5-9034-f630494fb28b"],
Cell[11327, 277, 157, 3, 60, "ItemParagraph",ExpressionUUID->"e0171550-1b74-4b02-8001-f99421b0d5e7"],
Cell[CellGroupData[{
Cell[11509, 284, 1939, 54, 433, "Input",ExpressionUUID->"28e860a2-4735-46c9-bb25-cb4d75fd5793"],
Cell[13451, 340, 1335, 39, 238, "Output",ExpressionUUID->"bf92da8b-0ee6-4772-a123-6de7475e7d67"],
Cell[14789, 381, 1337, 39, 238, "Output",ExpressionUUID->"4a8edea9-b713-41f2-8e19-9b63db4c9324"]
}, Open  ]],
Cell[16141, 423, 499, 14, 77, "Text",ExpressionUUID->"2f52397c-d277-4f4b-92c1-f626d33f4d7b"],
Cell[16643, 439, 192, 3, 60, "Text",ExpressionUUID->"558cbc3f-939f-402d-a71a-05944e62f4b3"],
Cell[CellGroupData[{
Cell[16860, 446, 3239, 82, 977, "Input",ExpressionUUID->"a2ac0b29-b122-4713-a081-104a0851646f"],
Cell[20102, 530, 385, 6, 115, "Output",ExpressionUUID->"961366f4-d7b6-43b7-9ed8-df1b7cf398ce"],
Cell[20490, 538, 386, 6, 115, "Output",ExpressionUUID->"61f73c0e-c815-44b0-be80-459faa6e6695"]
}, Open  ]],
Cell[20891, 547, 205, 3, 60, "Text",ExpressionUUID->"4efff4e9-9c38-4a1c-b0e7-cb0c220f47d1"],
Cell[21099, 552, 1261, 35, 324, "Input",ExpressionUUID->"9ff43b8c-6584-49d5-adb1-7c7ed479ad40"],
Cell[22363, 589, 1585, 42, 388, "Input",ExpressionUUID->"80e25fc1-da31-42b1-a608-0ac5f8ef7e72"],
Cell[23951, 633, 1953, 53, 433, "Input",ExpressionUUID->"01b9c8a4-13b3-4182-bcbb-0fe317d8fdd7"],
Cell[25907, 688, 166, 3, 60, "Text",ExpressionUUID->"fa5b5cf0-9fb9-467f-a511-afb7a2e7f92f"],
Cell[26076, 693, 2107, 58, 750, "Input",ExpressionUUID->"0dd15450-6a85-43f6-9055-549db446cae4"],
Cell[28186, 753, 364, 10, 115, "Input",ExpressionUUID->"f2ea43bd-cf28-4909-86d9-5633eedcd547"],
Cell[28553, 765, 2207, 55, 614, "Input",ExpressionUUID->"d03b696a-947f-4980-acda-232159d40ad1"],
Cell[30763, 822, 2483, 60, 660, "Input",ExpressionUUID->"8e6a99c5-b80a-493f-b421-2834e3ab7bc3"],
Cell[CellGroupData[{
Cell[33271, 886, 1510, 37, 433, "Input",ExpressionUUID->"00e4b9ee-9f56-4986-ab67-c0796b838699"],
Cell[34784, 925, 20875, 361, 538, "Output",ExpressionUUID->"aeeb582d-34c1-4a09-a7c9-f1866695620b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55696, 1291, 213, 4, 115, "Input",ExpressionUUID->"f18b095a-dd7f-4707-9864-e37a4e69a647"],
Cell[55912, 1297, 424, 9, 120, "Output",ExpressionUUID->"1206abce-4f2b-4db0-8975-f49c39a1cdd9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56373, 1311, 461, 14, 115, "Input",ExpressionUUID->"9a7ca034-a86a-450d-a5d7-d60ba5bcbbe6"],
Cell[56837, 1327, 2064, 55, 442, "Output",ExpressionUUID->"503acaa4-ed8e-4df6-9b84-c8288894ac32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58938, 1387, 459, 11, 161, "Input",ExpressionUUID->"507c9390-78e2-4a03-ab53-0fbd62913b74"],
Cell[59400, 1400, 3200, 85, 740, "Output",ExpressionUUID->"bf7c5c26-cac7-4de1-a121-1047bd134fa2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62637, 1490, 310, 7, 115, "Input",ExpressionUUID->"67ce692d-d4d0-40e3-a42a-60ef9ff9d993"],
Cell[62950, 1499, 2402, 54, 866, "Output",ExpressionUUID->"1ee6ce81-c8fb-41ac-810d-f961ed86c3fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65389, 1558, 355, 9, 115, "Input",ExpressionUUID->"1d088fd9-eebf-403e-aea1-7d6e33a1eecd"],
Cell[65747, 1569, 315, 5, 115, "Output",ExpressionUUID->"e39b31cb-943f-4722-b873-07055237f555"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66099, 1579, 471, 14, 115, "Input",ExpressionUUID->"e9935be6-f492-4402-a035-b8b551ec0087"],
Cell[66573, 1595, 965, 26, 170, "Output",ExpressionUUID->"c4f52aaf-040c-4648-b26b-56f004e1cee2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67575, 1626, 312, 8, 120, "Input",ExpressionUUID->"eed54bb7-76f6-4bc2-b51a-53fe5b685fee"],
Cell[67890, 1636, 671, 13, 161, "Output",ExpressionUUID->"4b235da0-9289-4b9f-844f-7200f12f4aae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68598, 1654, 663, 17, 161, "Input",ExpressionUUID->"7f31ecf4-0d96-400c-a90b-a4f4f1800627"],
Cell[69264, 1673, 52907, 911, 783, "Output",ExpressionUUID->"7df7b7a9-09cb-485a-b01a-94622cd71a4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122208, 2589, 3968, 92, 1158, "Input",ExpressionUUID->"fb205405-03dd-4e49-9695-814aa4cb21cf"],
Cell[126179, 2683, 94178, 1946, 188, "Output",ExpressionUUID->"fceedb46-1e99-405b-9e98-d35156f53217"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220394, 4634, 975, 27, 252, "Input",ExpressionUUID->"eb7f811a-0455-45c9-96fc-ca81d065c9e3"],
Cell[221372, 4663, 3169, 78, 524, "Output",ExpressionUUID->"5564761e-6492-4a26-b3fc-fd63fe68c1df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224578, 4746, 498, 11, 206, "Input",ExpressionUUID->"6a595dbb-b77f-42f1-b7dc-2a909c21e807"],
Cell[225079, 4759, 94276, 1946, 188, "Output",ExpressionUUID->"6c05c3d3-fcfb-4488-8b34-55beea892c60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319392, 6710, 181, 3, 115, "Input",ExpressionUUID->"6c0cecbb-9d21-46c1-8959-d27ce049c770"],
Cell[319576, 6715, 2089, 56, 388, "Output",ExpressionUUID->"0869ca8a-13f0-4031-8d59-caf21ebbe5de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321702, 6776, 4374, 108, 839, "Input",ExpressionUUID->"8555c40d-761a-4158-a414-7a59b5018744"],
Cell[326079, 6886, 94471, 1949, 188, "Output",ExpressionUUID->"6fdc363d-87c9-4fda-aba0-98a91a38804b"]
}, Open  ]],
Cell[420565, 8838, 758, 18, 252, "Input",ExpressionUUID->"10aa60df-9413-4b6f-9bd9-389758199ece"],
Cell[421326, 8858, 6917, 145, 1310, "Input",ExpressionUUID->"c4a8ab73-dfa4-4dbb-8a29-1f5c2df58698"],
Cell[428246, 9005, 1920, 44, 401, "Input",ExpressionUUID->"191cd211-e644-452c-8a35-12b571146799"],
Cell[CellGroupData[{
Cell[430191, 9053, 345, 7, 118, "Input",ExpressionUUID->"7df1f37b-7b9a-43a1-b8ee-4e784cdad4e3"],
Cell[430539, 9062, 615, 12, 634, "Output",ExpressionUUID->"6e885125-125c-4ec4-9818-851169946f4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431191, 9079, 22029, 494, 3831, "Input",ExpressionUUID->"9959a362-46bc-4169-8f00-a14c77ff4d96"],
Cell[453223, 9575, 6129, 112, 1487, "Output",ExpressionUUID->"651b82ff-1475-4535-b894-da3c1a242d3a"]
}, Open  ]],
Cell[459367, 9690, 2078, 46, 824, "Input",ExpressionUUID->"84377122-ff9f-427f-9b6d-074b12078031"],
Cell[461448, 9738, 334, 7, 166, "Input",ExpressionUUID->"4200e174-17fa-42b9-95ee-61acd59431f7"]
}, Open  ]]
}
]
*)

