(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    892598,      17903]
NotebookOptionsPosition[    822431,      16175]
NotebookOutlinePosition[    870360,      17205]
CellTagsIndexPosition[    869754,      17187]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "The RootSearch Package\n",
 StyleBox["By Ted Ersek",
  FontSize->12],
 "\n",
 StyleBox["     ",
  FontSize->12],
 StyleBox[" ",
  FontSize->12],
 StyleBox[ButtonBox["ted.ersek@navy.navy.mil",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["mailto:ted.ersek@navy.navy.mil"], None}],
  FontSize->12]
}], "Title",
 Background->RGBColor[1, 0.975998, 0.949996]],

Cell[CellGroupData[{

Cell["Version History", "Section"],

Cell[CellGroupData[{

Cell["Version 1.0", "Subsection"],

Cell[TextData[{
 "Version 1.0 of RootSource was posted on ",
 StyleBox["MathSource",
  FontSlant->"Italic"],
 " in September of 2001."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Version 1.1", "Subsection"],

Cell["\<\
In March of 2002 RootSearch was updated to correct minor bugs.  Unfortunately \
I don't recall what the bugs were.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Version 1.2", "Subsection"],

Cell[TextData[{
 "In April 2003 RootSearch was updated to use more robust programming idioms \
and the current version is 1% to 2% faster than previous versions.  Also with \
previous versions the next cell would indicate that Sin[x] has a root at \
machine number 0.0 when an arbitrary precision root is expected.  With \
version 1.2 of RootSearch we are told Sin[x] has a root at  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.", "\[Cross]", 
    SuperscriptBox["10", 
     RowBox[{"-", "71"}]]}], TraditionalForm]]],
 " which is an arbitrary precision number in the interval  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["10", 
       RowBox[{"-", "70"}]]}], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "70"}]]}], ")"}], TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<Enhancements`RootSearch`\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{"RootSearch", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "6"}], "}"}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "70"}]}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Get", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \[NoBreak]\\!\\(\\\"Enhancements`RootSearch`\\\
\"\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/noopen\\\", ButtonNote -> \
\\\"Get::noopen\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Needs", "::", "nocont"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Context \
\[NoBreak]\\!\\(\\\"Enhancements`RootSearch`\\\"\\)\[NoBreak] was not created \
when Needs was evaluated. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Needs/nocont\\\", ButtonNote -> \
\\\"Needs::nocont\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"RootSearch", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "6"}], "}"}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "70"}]}], "]"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Version 1.3", "Subsection"],

Cell[TextData[{
 "In July 2005 version 1.3 was posted on ",
 StyleBox["MathSource",
  FontSlant->"Italic"],
 ".  \n\nThe GoldenSecant method was rewritten to make it simpler and more \
efficient.\n\nHandling of arbitrary precision was greatly implroved.\n\n\
Support for RootSearchSamples was added.  \n\nDiscussion was added in this \
notebook to explain how the RootSearch algorithm works.\n\nAn extensive list \
of references on the subject is provided."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Version 1.4", "Subsection"],

Cell[TextData[{
 "In April 2006 version 1.4 was posted on ",
 StyleBox["MathSource",
  FontSlant->"Italic"],
 ".\n\nWhen a package is automatically created from a notebook with all the \
code for this package a formatting glitch occurs. This glitch caused an \
incorrect setting for the RootTest option when the package is loaded using a \
Mac.  The package created was manually edited to correct the glitch.\n\nEach \
time RootSearch is called it derives a function u[x] which has only simple \
roots provided the functions involved have continuous derivatives. RootSearch \
now derives a more efficient u[x]."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Installing and Loading the Package", "Section"],

Cell["\<\
To determine where to put the (RootSearch.m) file evaluate the next cell.  If \
this directory doesn't already have a directory called (Ersek) add one now.  \
The (RootSearch.m) file should then be copied to this (Ersek) directory.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"$VersionNumber", "<", "5"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ToFileName", "[", 
    RowBox[{"{", 
     RowBox[{
     "$TopDirectory", ",", "\"\<AddOns\>\"", ",", "\"\<ExtraPackages\>\""}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ToFileName", "[", 
    RowBox[{"{", 
     RowBox[{"$UserBaseDirectory", ",", "\"\<Applications\>\""}], "}"}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input"],

Cell[BoxData["\<\"/Users/rebcabin/Library/Mathematica/Applications/\"\>"], \
"Output"]
}, Open  ]],

Cell["\<\
Once the (RootSearch.m) file is copied to the right directory the package can \
be loaded by evaluating the Needs statement in the next cell.\
\>", "Text",
 CellTags->"Instalation"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Ersek`RootSearch`\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RootSearch", "::", "shdw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Symbol \[NoBreak]\\!\\(\\\"RootSearch\\\"\\)\[NoBreak] \
appears in multiple contexts \[NoBreak]\\!\\({\\\"Ersek`RootSearch`\\\", \
\\\"Global`\\\"}\\)\[NoBreak]; definitions in context \
\[NoBreak]\\!\\(\\\"Ersek`RootSearch`\\\"\\)\[NoBreak] may shadow or be \
shadowed by other definitions. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/shdw\\\", ButtonNote -> \
\\\"Ersek`RootSearch`RootSearch::shdw\\\"]\\)\"\>"}]], "Message", "MSG"]
}, Open  ]],

Cell["The next input displays the RootSearch usage message.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RootSearch"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"RootSearch[lhs==rhs,{x,xmin,xmax}] tries to find all numerical \
solutions to the equation (lhs==rhs) with values of x between xmin and \
xmax.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3569557625-4343972"]
}, Open  ]],

Cell[TextData[{
 "The current version of RootSearch will only find roots of a single equation \
with one real variable.  The algorithm is very robust as I demonstrate with \
the examples that follow.  Also the algorithm is designed to give the best \
possible approximation to each root.  So for example, when machine precision \
is used you should find that the error in the location of each root is less \
than 1 Ulp (the distance between machine numbers).\n\nIt would be nice if \
RootSearch could find roots of f[z], f[x,y], and f[x,y,z] if given a region \
to search.  Several root finding algorithms that could be helpful here can be \
found in sections 9.6 and 9.7 of Numerical Recipes in C ",
 ButtonBox["[Press, Teukolsky, Vetterling, Flannery 1994]",
  BaseStyle->"Hyperlink",
  ButtonData:>"Numerical Recipes"],
 ".  However, I haven't found a discussion of such algorithms that I can \
understand without assistance.  Please contact me if you would like to help \
me with this subject. "
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Section"],

Cell[CellGroupData[{

Cell["Example 1", "Subsection"],

Cell["\<\
In the first example RootSearch finds all 21 roots of a transcendental \
equation.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f1", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"4", " ", "x"}], "]"}], "-", 
    FractionBox[
     RowBox[{"x", "+", "1"}], "8"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f1", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "13"}], ",", "12"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
+Vvq1pYsBLj0aeCmf0jAdJWeaUUWTkcFN2fLtaOsh79SZBZkYcRNNNDkVhsy
+vDOhDRDsX+0PKVe0ooGft6es5yQhXarp2HRIq3IbQ69dBmRhXIjjdjwoBbE
KcB5MGxAFkhj/1UfZWxBKUeH2lN6ZMF18KJuZVQz0rmZ9+RHhyy4KbFWKKs0
o44If9G+VlnQSbFxfNfVhO4XWZZtNMqCqN/mP+6oJsQ4pGjD81cWIj1OcKVY
NaF45h065d+yMNYSEWBzsAkdPtDwxeinLGQMvRY0EmlCzZc/GdtWUOZP0qO9
zNWEHH1dZj2xLDBmSy6+429CNOkGEW+LZME0OX6RuLcJxbQJHMj9LgsrPKc9
fM2akBphqu1vNiVery5nkWdNqFa+1G0iXRakeadkvlc2IZtTYSK0abJgeGXA
jMTTjLYeW4NYsiz0MTrsjnduRlHxatc1E2QhC/5dKx9oRkq/6ejOxcmCduYT
uWdXWlDVYnvynRhZCLN/pVox0YKshFNPBETLgof6qbrLz1vRiu5/MwmRsqB8
5n77bsU2FHL7ZDgOk4XWt+3N2/1tSDZKQq0jSBa6yuoXUj63I1y62LrkLwsH
HZUEth7+QxajPx6z+cjC1Lu9C/hcB5pjixbe/VQWSmP41wqPdiLxa1rWVx7L
wv3nJi03SN0o/wUrrZuLLMQ61+x9c7oHmWX1JUXek4WHopzNxHu96Cm1z/Qv
B1m4+le/N3WsDw18/uOqZikL12UJqr8CB5Fb3Qehk+aU81L+McPv6BDiXL1X
6nCaEt9p6XIR8hA6ZshL88FIFrpzv0rxeY6ghAmr0F2HZSGO6QDtfB6lfnPt
V5FWl4UIG0KSbMgEaj5M3aKtKguaYeFJifaTiDY4SdB5jyzceMNq/U12Gtnt
m/vcIyQLepeV3RyuziF556fF2WQZcLE0Ny4QWUJKu2JbH6/JwJ47x0Qy4paQ
WmzhHFqSgSiD0a1HUsuIVL0oXTspA9udnWeH5FbQBWG74KEOGUh54P2OX34N
Xc30TkpplYGVKy78Tz+vITv9D2V3G2Ugg49LPEJiHd2/275M/iUDjVlv6MR4
NlBApZEVT4EMML/6usMzsonCLtxw7cyRgXLppzoLZ8koauZZxMcMGXDOzbxs
V0ZG8fwlVXuTZcD1RAzzm4gtlPz1X9/iJxnQiLMfElzdQt90VjYKPshApvSX
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
6b1sU7j0B7sC9X87uPhuZ8oNsSncVPd4d8LlHXxIX151QW4Kj7UN7NHT3sE1
HPFQKz+Ft/tO7B0R3cGNQ1LEdYkpzDWRo+S3s42fhc25uXFNYflFEWX5vm3M
3P8v0HxrEmuTfff/gm08EbxyI7J3Ep+hnVO5+XEb5ymN8h0pnMT2rBfUmLy3
cXtsysOLwRT9fOUH0qy3ceI5qn1ki0kcKb5H3eTYNtY9cyN/r8gk/qIQqTEj
tY19L4edIXRM4FKVrUOhNNs4yjqAzjd0AjcftjusPLyFneavRzcemcDjun+1
Gn5s4VeNjkGbQ+N420RD+37iFrYYZhTh9xnHClcZj+bc2MIJn+XvhGeMYW2H
BzrnDLdwWuhHGhmtMXz2ftexFfktzLTl0iBQNoo9nn/T15gg45VZPofE7yM4
MpjP8F8NGa/ZrZQ+VRjBX6K8jrulkvEyJ/9pvVfDuDn5tHGxIxlvJ/a9E744
hC142BgKjMi4VyO33ThpEHc9/V2RK0/GVMeeU3NOD+BhS93D6UOb+KPg4x4N
u368wnxwd/ylTXzRfCatbncX5r8nwOBvvIEt3PPeGHrU4JjulornuzdwUGYZ
fYN/FRY3ivB8yrCBRx/aG4kElGMFKaZVt8p1TBVj88ZyMgdrtpCHb2utY4ao
YO6/+Uno8qG+ijOKa5iwn82O6UQTGvgc42nGuIa/RrFWORi2IDvOC4dNxlbx
8VE3/jFSG3KabMjST1jFQeIzxHXxTuT1vuLjIeFV7GHkTNut349oGL0uH9xY
wY998quUdg8g/4daAqrtK9jA8euVboZBFH4yN0wxcgU/PdZ8yuT7EIonJnmK
Ma/glRdjLOkNo0jW6fph4YllbHXoWjLPizGU0iG2yl+9jGMu7DVdPzSOsrOj
nTifL2PT59Gq9n4TSEP83G4262W84W7wJEyK8p4I4hhhIi1jo4VLG3fyJ1Gl
bcBlWvISPuZ+eCHh9xQybNQXoOpYwhc1s4eSjk+jWm3qlu3vS3hU5IhACZ5G
Zqk4bPPVEk4s2PwLe2dQC5+78dqDJaydfj0s/OUMsnyuwbB8agk7BqWrsM/P
oJ65pYr5fUuYkZQ2JqY/i6wvZ3rOsCzhpZROvcSIWTTy6/bhyclFHE2Y1A9s
nUU91dIRCrWL2MDXd4KBfg61/ewcu5G2iDXISuRV0TlUXxWBEoMWsfDn5nUm
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
rgBxtLN0fJGO8v//J64AHQFa61fk6Cn/B9EFb98=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-13, 12}, {-2.4508063892205576`, 2.397092768173266}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f1", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "13"}], ",", "12"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "8.348289378299722`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "8.128931534118271`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "6.862951194089526`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "6.471470625613025`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "5.353916539697934`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "4.837462268522024`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "3.8363831890811366`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "3.2116177756546436`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "2.3149160596763254`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.5892263387762744`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.7919019607177706`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.032351189053103635`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.730877103530479`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.6553816023295524`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2.251554720739636`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3.2828240626757283`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3.767387062972021`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "4.92068856358791`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "5.272491509475395`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "6.596105432790534`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "6.7398184613474434`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "%", "]"}]], "Input"],

Cell[BoxData["21"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example 2", "Subsection"],

Cell[TextData[{
 "In the second example RootSearch finds two roots. In this case none of the \
traditional root finding methods such as Secant method or Newton's method \
will converge on the root at 1.49999,  but RootSearch has no problem. I \
developed a method I call ",
 ButtonBox["GoldenSecant",
  BaseStyle->"Hyperlink",
  ButtonData:>"Golden-Secant"],
 " to ensure convergence in a case such as this."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f2", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "<", 
     RowBox[{"3", "/", "2"}]}], ",", 
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"3", "/", "2"}], "-", "x"}]], "-", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "4"}], " ", "x"}], "]"}]}], ",", 
    RowBox[{"2", "*", " ", "x", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "x"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"f2", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.10"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "500"}]}], "]"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f2", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1.4999", ",", "1.5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
SSk8/z66vYO7Pn5vgR7u/wEWLfzJ
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-0.1, 4}, {-0.2269135877918398, 0.8650256162899659}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
+D8f5NIl
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1.4999000000000002`, 0},
  Frame->True,
  FrameLabel->{None, None},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f2", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "25"}], ",", "25"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.0552005647310447`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.4999938554856136`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
Next we see that f2[x] evaluates to 0.0 at one root and a fairly small value \
at the other root.  I think you will find that no other machine number near \
1.49999 will give a smaller value for Abs[f2[x]].\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f2", "[", "x", "]"}], "/.", "soln"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "9.468554412750407`*^-15"}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example 3", "Subsection"],

Cell["\<\
Traditional root finding methods converge slowly at multiple roots.  \
RootSearch uses a little known fact that if derivatives of f[x] exist at and \
near a root (x=x0) then u[x] defined below has a simple root at (x=x0).  \
Since that is the case RootSearch will look for roots of u[x] and f[x] if \
f[x] can be differentiated symbolically.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], "\[Equal]", "0"}], ",", " ", "0", ",", " ", 
    FractionBox[
     RowBox[{"f", "[", "x", "]"}], 
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}]]}], "]"}]}]], "Input",
 Evaluatable->False],

Cell["\<\
The next input shows that Exp[x-\[Pi]]-(1-\[Pi]+x) has a double root at (x=\
\[Pi]).\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"x", "-", "\[Pi]"}], "]"}], "-", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Pi]", "+", "x"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "\[Pi]", ",", "4"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "\[Pi]"}], ")"}], "2"]}], "+", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "\[Pi]"}], ")"}], "3"]}], "+", 
   RowBox[{
    FractionBox["1", "24"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "\[Pi]"}], ")"}], "4"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"x", "-", "\[Pi]"}], "]"}], "5"],
    SeriesData[$CellContext`x, Pi, {}, 2, 5, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, Pi, {
    Rational[1, 2], 
    Rational[1, 6], 
    Rational[1, 24]}, 2, 5, 1],
  Editable->False]], "Output"]
}, Open  ]],

Cell["\<\
In the next example RootSearch quickly converges on the double root.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"x", "-", "\[Pi]"}], "]"}], "\[Equal]", 
     RowBox[{"1", "-", "\[Pi]", "+", "x"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "4"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "3.141592678814519`"}], "}"}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "The equation whose root we 'found' has a double root at (x=\[Pi]). \
However,the next input shows that the alleged root is about ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2.5", "\[Cross]", 
    SuperscriptBox["10", 
     RowBox[{"-", "8"}]]}], TraditionalForm]]],
 "from \[Pi], but the distance between machine numbers in that region is \
about ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4.4", "\[Cross]", 
    SuperscriptBox["10", 
     RowBox[{"-", "16"}]]}], TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Pi]", "-", "x"}], "/.", "soln"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "2.5224725863637332`*^-8"}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
It turns out the RootSearch algorithm performed as advertised because (Exp[x-\
\[Pi]]-(1-\[Pi]+x)) evaluates to 0.0 at the alleged root.  In fact there are \
lots of machine numbers near \[Pi] that solve this equation equally well. \
Later I demonstrate how RootSearch can get much closer to the true root of \
this equation.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"x", "-", "\[Pi]"}], "]"}], "-", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Pi]", "+", "x"}], ")"}]}], "  ", ")"}], "/.", 
  "soln"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", "0.`", "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example 4", "Subsection"],

Cell["\<\
Next I give an example that demonstrates how hard RootSearch looks for roots.\
\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f4", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f4", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1.5", "-", 
      RowBox[{"Erf", "[", "x", "]"}], "-", 
      RowBox[{"Erf", "[", 
       RowBox[{"2", "-", "x"}], "]"}]}], ")"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"Abs", "[", 
       RowBox[{"x", "-", "1"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f4", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "8"}], ",", "12"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "In the next cell I ask FindRoot to search a range that is much larger than \
the range plotted above and it finds both roots.  Also notice f4[x] is very \
small at beginning and end of the search interval, but RootSearch doesn't \
claim that f4[x] has roots at either end. RootSearch will indicate that an \
endpoint of the search interval is a root ",
 StyleBox["if and only if",
  FontWeight->"Bold"],
 " (lhs-rhs \[Equal] 0) at an endpoint."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f4", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "400"}], ",", "200"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.5178907607442612`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.482109239255739`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f4", "[", "x", "]"}], "/.", "soln"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "6.855400747827155`*^-17"}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example 5", "Subsection"],

Cell["\<\
Next I give an example where RootSearch needs to look at lots of places that \
might contain a root.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f5", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f5", "[", "x_", "]"}], ":=", 
   RowBox[{"3.2", "-", 
    RowBox[{"3", "*", 
     RowBox[{"Cos", "[", "x", "]"}]}], "-", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"8", "\[Pi]"}]}], ")"}], "^", "2"}]}], "]"}], "-", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"14", "\[Pi]"}]}], ")"}], "^", "2"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f5", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"30", "\[Pi]"}]}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
nef/Won80kfjfkTh+P///2X/H8zhN8Q=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{0, 30 Pi}, {-0.7999423483436628, 6.1999990942161025`}}, {{
     0, 94.24777960769379}, {-0.7999423483436628, 6.1999990942161025`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]],

Cell["In the next cell RootSearch finds all four roots of f5[x].", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f5", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"30", " ", "\[Pi]"}]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "24.543200825536683`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "25.722281631900007`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "43.392756747075445`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "44.57183755343877`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f5", "[", "x", "]"}], "/.", "soln"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", 
   RowBox[{"-", "3.1086244689504383`*^-15"}], ",", 
   RowBox[{"-", "7.549516567451064`*^-15"}], ",", "4.884981308350689`*^-15"}],
   "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example 6", "Subsection"],

Cell[TextData[{
 "RootSearch can find the roots of complex valued functions, and it doesn't \
even care if the function is undefined at some places in the interval being \
searched. This is demonstrated with the next example where f6[x] is complex \
for  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.2"}], "<", "x", "<", "1.2"}], ")"}], TraditionalForm]]],
 " and is undefined for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "1.4"}], TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f6", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f6", "[", "x_", "]"}], "/;", 
    RowBox[{"x", "<", "1.4"}]}], ":=", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], "-", "1.2"}]]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RootSearch", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f6", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
   RowBox[{"RootTest", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#2", "<", 
       RowBox[{"10", "^", 
        RowBox[{"-", "6"}]}]}], "&"}], ")"}]}]}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.2`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.2`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f6", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
    RowBox[{"PrecisionGoal", "\[Rule]", "25"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\($MinPrecision :: precset\\), \\\"MessageName\\\
\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
     "-", "1.199999999999999965638319603265457694526647432916238802903`25."}]}\
], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "x", "\[Rule]", 
     "1.199999999999999893977182894433592371553806711273560304758`25."}], 
    "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f6", "[", "x", "]"}], "/.", "soln"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f6", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "1.2"}]}], "}"}]}], "]"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f6", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1.2", ",", "1.4"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{-8., 0},
  Method->{},
  PlotRange->{{-8, -1.2}, {0., 2.60768093547207}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",ImageCache->GraphicsData["CompressedBitmap", \
"\<\
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
HtGvnKP+B9Qja9A=\
\>"]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0nk4lQkbBnApQjOhImNEaZA1WbJ9uhPGvow9iSGUscSQT0yhLxFScYgQ
UoxtHCVMtrJkO9acY3ubXJkUzfjiPeelxDfv98dzPdfvv/u6n+eA33mnAH4+
Pr5Qev6/RZg2OtraJLb1/ycztF0MydqbSZG0XZxPC7uJJGBbI3PiMe0jGhbN
B2uvIcHwjDKXdnPZV7kGvWnYaJWI09Ehwb6QNGQkcguxJr2sKNpnnibXzi/d
BtUVK/uEdm5FsvTuh1n4OPD6ua4uCS1R2cPitTkIdcjcHU3bSyMpxEk0F4tj
ZgENtHM5d49e9srD3FSFkN5REtw/1SNVevPBeRfpoK9HoonVC12RYjgHK5bE
0H5zuX6ZkVKMkaXJlSba6qOvHKy3lqCPZ5xjoE/ipIXA2OxSCVq2Cr0yNCAh
ZzDZ/vXDUtyXK/jJ2IhEWbB4+le1ZZArtW+5RHtysW6LpHA5ChS37GyjHVuR
xeryLUe2emDdsX+RiH5/6mt70V+RYqS5BmMSo3yzYrFeFQhz70o6ARJKC9wK
xd4qGN78q9jClISO3jcF2iJMGEQVn7pBW8JeP5CtxoT+SRfJl7SvtS+UqTsw
cfRgS5q3GYnDoR3VQllMaDWmRV8wJ8ETXp7O2VsH5dcqtqUWJMx/uzHgLPEI
UoeDVjdtSAQzrjiLfXiMvXv2PTKzJXFFo9l9U7Aekp9GQlJpv3ibeq9bvh57
OvXfSNiRkGYXhL45WQ8xd6FBNXsSt8KphIAX9dgeX37f05FEhcKKkHDeE1BD
b+0aXEhEWb2tnldqxI8HKoNWaSukXz3ueawRA5FhSfqu9H1UThg0uTSiWGq1
5SntMpUsR53ERlj7Cam1u5FYyXXN1p5qRBFPRaTXgwT/+tyO+KQmWMqEv5jy
IiHL6K4pGvkdeUGfj234k+jxsNWMN2iBgO/CzytRJIp8/O8m6z3DRpPmO5Nr
JCzN0saVDDtABGcVBeXQfXoHhQ9+6IRFvH3uh3IS45oFbQn53Yj779zLb38n
0dl/e//wdz3Iecpw/q6P/gd1m5rYS70wni/cnTxN4n98XnZf/ujDQEjH3o5F
Eqmng3Q6pQYg7/jcu+ozib0N+dnKYEGAITW/tIML5wOCrDsRgxjWSqsTkeFi
s1J5oPbqEBS03FoT1Ll4dV3K3fXBMMwy1nc8PMZF77rqlQzPEVibt9wrsefi
7qN2/j/YIyC82BFrPlw8DIi73uo+Crdh4etK4VykpBdHFA2Owut+ziwzkYvI
6aIt/NZjUBnbiH2fyYX5g+sXN5+NYdYr4eTafS6MU2KaAtRfQt7yVIxfPRdJ
cbaJVsUvYZPxw8yDLi68Y3lVRsLjMD4in5g9zoXoIUGR3WHjaNaxOTv7lgtp
wcSQH6bGsT/r5u2tFBcyF+wMLhmxIe6k9iVhOw8TC1aFf5WyMRBaWlEtxcNz
n78vZgpxEPKnbj7zEA8xRb0aM/4c5DXvH9xpyAND5UuaZQ8HNX8rmppb8xB3
WUaQeWACqb9s/6LsycPw8489GzETIIOP884F86Avf5DjwJmAaQNDKyGOB8mm
Vz0yapOQ8zVhLqfzoEM0iA0mT2IuUPhno0Iejh7xZRgQkwjvq4rWrqHzaI6U
f1Cfonsra05q40FPei3WN4l2ZYsZc4iHIvvPaxR7CnuUVXfqzvJQuOuFm5ba
NM5ti5I+t8xD8WpEYH/8NB4YTv4UuYXCvz1KxKZZ0wgZZaxP7qKwULwWGCE3
g287Q0YkD1KQY3/Wqw6eQZa43Ht+bQotpgac/CczuPNM+biVGYUpAfEyahuB
K/0OxFkXCv6/7nM0tCew2RHJqaVt9cSoO96BQGzznZFV2pJUi2q3I4HI6tdd
ya4UOpY/shycCfhnnK8pd6MwyHL90d+DgLnTzcvvPCioXOpjpfoREJoe2n/2
NJ3HhNfHiiZwdWxFupa2oZ7JebEYAnwDkhKrtEXiNQRdLhL41OwtnOxN4XEl
V2gmjsBi4dJymQ+F24v+fu8TCLB8d3bO+1L4FBofyJdGwNJTq1XDj4KqRrei
aTqBLie3xmjadZX9k0k3CLSa3qsSPEOh2V9m145bBH5T0GAo+lM4kSc6vSeb
gIqsU0YY7dz15EPuOQTKJKNTGmiHKQ2fy7tD4N72tl++D6Bg6znatu8uAWm+
N9EZtCvlbo375BPIWROI4NA+rKpAlBQQ2LWsHCwbSGHTM5M9V0jg5oJdQCBt
TvrUM4UiAv8AXbpmBg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{1.2, 0},
  Method->{},
  PlotRange->{{1.2, 1.4}, {0., 0.4472135909365539}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",ImageCache->GraphicsData["CompressedBitmap", \
"\<\
eJzVXAmclMWVb2EGjyReuTfZaDabrJtNZjfXJtlEk4lXPEfFaJQBJehE1OiI
GJ0o0bQHthq11egISKPSIjSIg8JwDeAo2qLN0aAN0kCjNmKDjbZiI61W6v/q
vfq+qf7mANzsb/v3G3S+fv96r169elfVNycNHXnB+X8YOnL4sKGHHjtiaPMF
w4ddfugxl47Qj/rvFQr1+0EotNdZh4bw/yoUkn+8z4/wj/9Jnx+Mof/0V6pS
VuUyfRPan/6t0c9KqpDPq1wupwrF8oVCqiqqVCLa0AAmLRcLKq/Jcvmi/lYN
YNJyIa/yeoRiWYUuDOBUK5zKJU2n4bm8KlVUbd8FOEBI9TOQ5vMFpb8xI4Ru
F0Q5pRpYbf3l3/pWVTK6CPXjUQrJqGL1qnB7rj/DK7k2VUeP6zQR4DUqli5Z
XaZizTU8amO4TRV51EFW3pKKNYQYiH/3VYlsWXX5lNKqmTnXNScwh5CwV6WM
CjfUEbKfSF/XpDpyZcsBukzHm630oVC9SmRKocGfjAY0XnVGm3zwWhVpy3SZ
gdZC6H9DDbVsaeV0q296+qe5DbbWzxpiXrU2+r5uiKpcRdX4LWEfbSYF1ZFI
qEQiphrBpDGiEm36944MBuvPakhFG+xA9ZGkeXyQFi9FKPqqvkW1tkZVNNJC
v0eSPGEtdKK5XtU3hVVbZ0plMknVqn+noaLJUKNIovllOtuIe9ioRbW0QrJ2
lSspWdRyJu6bdYNKlWTB99HSROh5Q0tUdSSTqj0eZjttUTnRzN7eEE0xLU2H
aiKSZpWtKE+aPdOLtq560kmzird3qmRnQjXVGbJYpvSP0kstf6e07SXb42ap
9EQ6swXW2QCVjBqWLYmUSrcb/dWFO9hM7vTZe6xeC9aatj6umIqxdvVid+Rr
WLt4TELoHSkmUMxmVaHsuUeYfivmUhdRBaWGMJdMrJFkT1d8spczqoVVV9/S
1tUR+BxfP36WjdOuVIlcOSQL3hmuowXOVGRTGREjnYXQkF2fYblUUhX/Ji10
EFl9NPVJzbCfb/FTiVYVieqNFW1VsVjUuC1tWIlkTiatKllyE3UtHVYRZtKN
mDQrzLeaWrh6I7AEjFImwXOtV2258r52lHoaJa1XTyaRbm2wJrY3PyuXrUZI
bBX6tMomjP9ty8l3RWLr87N68mkySy3KkADpDpZnxU7aUA2tKctyd0SzCtOi
ROv8vneA/jciPpocG/TcnMgKpMiRQLvonvR5IOuznG0zLkBLqLeBuChVyqlk
MuPNv5A0/sfoJGgeZoUOIFvIpjpVW8zn1ezUjAShlnbPND3VhoJ0eyDbXymf
Vh3aO3gOquzZ366L+xl6trfKxGHqdaqz4IlXH+nQuU/ZLkOJQ1hrulT1LJoq
9qTng8RueS+HGlqxehK3SymJ2/WqqalR0oSokYaIBgcIfwDrRFUyXmDTP/Gc
33ZY12Fvs/VN1zpeROo8Lx1J9d8zaY2q4XJyqoUygHYsu3AVN7kHWj7Ycm00
esjK4g2wQzSFw6q5qVE1NYdVe7pwboCgZvr761RX57XpNg5EceUlO7vsGcR6
VUXHgEJGRZvqDLuy2h0J9+fhirwSbTrzjjcYVl7emaQt3dyWs3oU+ngmwCtU
KKLU6SE+43uW1D68LeMtheRxOmFylqdB6YwyNIyfSeyAuLIuiUajtKL1bXur
jpY6yXiMHjkzCHfkfbbpyXawlSPajZl0L4eojZIZyNIYpiSli9r0XmqirKLT
jpuMeL6b1Xa7XdCsCtfXq+Zwi3H5Vn37kJ1EOcFJJLO6xErZnEhHGde4W1rj
mmM8HtfPYrGEyhTJN3IGPoC0gCy+oamZiwGalcfNxPC65laV0vaQTcY5q4vB
SkXfwq2+JaErsyTHcjO3xh4mtT/j06TPJj2hjCrYCdUjalRt192cka0KdaZS
z+5Hh1JJaEyqoC2wPa1TTa4qmimSVK2OXoH2aIsdpS6S5In0V/lkTJ5zXVar
wk5RpCein7J7S9m9zhOoVblOnW/Xi5P0G9kAp54z37dlyzUMTbKPkp9YqsBe
s2exEakbHLGb4+k9FvtAHj/V2sA8U6EaWSdtD5F631TqWlSmLMVZVFYd7YKi
yW/9TYh8NqMy6Yz+riJJZKWMLoL/pxISP1cpFbRhUmpj0z08y2b0MJms0jYk
DYpiLqPS6bTKFSuhoT1Jofd7PpclKXLF8q5KIarBDstCAk1nmxz0LK3S+nnJ
di4OwX+o0vYW5bP/+K++wOuOr0L4lar2PfjK46XVsWOHl6l+Dv+SOX7Rknzx
/+GzKp3Coko77Dz/ZDGjLMmogGdB47z11vZPZJxNm7wd7S35gQGUr7yypY+U
S1P5PlJ2zM/2kXJqYmUfKVvvS/aRMvyXjj5SXjT88V4oa7vumYP2+Cth/YvD
71ezZ6/pg5CgvO/e5/pAedaZk9SIy57sA+W1o+apk06Y0AfKR+LLSYLXX3+n
F8ply/JEOW/e2l4o339/p6r/xRgVveOZXijxOX/YNDVs6NQeKSnKqHvuflb9
8oj7/ZtRcaJQTfzs4o0k7lOL1vdOvH37TvWrX45Vt9/2dDCxRNI/XNymzvxN
3FHs/gGUoth1697qhTKX20aUEx9e1g0liSrJKazgQmPYPvLPdEd+912LSWna
8/SFfMWKN0iY6dNf6gv5xx9/rAae+jD00hN5DZP/7Z7naPQ333zXR/7p7shf
WbOFyB9+aGlP5LVMPvSchBp01qOOZj7VHfnkySto9FUrN/eFvFh8n2xk9E0L
eyKXvCR83Xx19JHj1LZtZR/5ft2RayECjKCKXDpE5+lN85uBcfXhhx/5yP0R
utYv+8yZq2n0zs4NfSFHVIf7aL70iW7ISZh9mByuG6OvXbvVR75Pd+Rbtryn
jqwfCw31RC79vFsiT5E36eqh9u6O/LXX3ibym0cv6ol8Pya/8YYFelXHqE15
/+gDuiN/9dVtAaNXkX+KyW+6cSGR5zYUfeRVCaKQb978rjrqV2PV1S1zeiL/
NJPDH1YbcE135G+/XVbH/zrm7NUqcin89aaj0RcvzvnI+weT11DPEp6g8exH
VaXykYfo50PU+uVBeAQDvQ9DvZLXkKsZfsF0ddyx49XWrds9xF6uSAcwgzWr
t5Dru/H6BaEeyCW1h/OHPEuX5n3k1ZQ1FIBObXiInM0HH3xIdB+7xAfxsAs6
sjTsuLFLQsGU0s648o/t5GE2iLV8FExZQ4by62MeoDjw0Uc0oPrQJf4sD4sc
rIueu6GsoaEuvrCN/BYsHR9TrXutkXKRzoPzhZJ1Rv7z4APsoJ/jQfW+Vcce
/YC6oGk63BWR7TSDmrWuVeVcu9Sz9NMUS9niyjnOlNAgnXoTQs2/Da22BDZD
0xefZ4SOaKSGCXpwvxDGLynbkQw1qnZdZiZazClTa6pYw6I4R2fSiyjlUioR
T+ifCHW5G8Ix1ZZIqI5MwUQyEuMLLMYfr5hFDmfVKt60H7AY5MBs2yRiG6l5
Fa5qblQd9EgYUZU0abI1XTahxce7hqqPhpMepBRi+3ZirHZ0Ye9rMPKHT3y5
Y2e7gnxciGYs8RngLXl/m3tp9xfqwqTGZSLdIvOIDp564SHLeecdzxAPHdoM
j3LfeIS1QnvgQfr6Eutr584PVdN502g/ZLNbaeD3g/Vl+8IlFW+0beFe+HyZ
+aCaO+G4mDr7rEnqvffMumzvahYpbn7bI+qCiqBr10Qn6L5ubYbWvyuff+Jv
tSsnnf35mrmhLkx4C/CZHA4eO3M51R4x9h5JFo0TxpltQtXXNapw2Gy/rny+
wnzub32e+CSmpA2f9wwfr8sdt8aLn4ZIB2YhTCqFlIo0eXsNbWaXSQ35kksu
nkEeU28m4vOu4WNvfRTzKpNOq0y24GvglOmeS1EOd2nQr/KgCCzw7KefNlFt
3bKdV1R1dZf/zMTIlZHIoIJBzYPPOy7x15h47pxXSCd/apltXfbbLvEhLGRs
/ItEfM9dz4aCKQ9lyhvCHSZff2yVodwWTGmMGeUL8pHkcxuJuOgSf52J33mn
TNb462PGW8t/y0dc6x/5tVffpnTx9IGe0ra6xDLyiuWbqpS2xRXjX3tQWsEl
/iarYvwDL3RVWhXlt7pT2pvBlJ7SkEZwOa82u8T/xsTYuk3nP0YalhbJGy7x
YUyMHEKXvRQLOp8yNeoml/jfmRip27lDppCtYxPjk3eJv83EKFQGD5pMmeTz
yVeJ+HWX+D+YGOuFhYaLS71IZOo1l/g7TKzLNnXmGY9QOMc64vOqS/xdJoZT
g0XAhGR/bnSJ65gYScJppzxM+WkmY0Jfzkdc6x9548Zt6pSTH1InHj8BNQcR
b3CJZeT1699SJ5/4IP3oWpyI17tifI+JMRpGhTVnXiarUOtc4u8zMfYFfAUS
MVFd1iX+gW+CUB0WRZZ7rUv8Q9+iYLlhSCjd8HnFJf4RE2OrDv/9dDLoRyet
IOI1LvF/MzF2HFpIIB5z//NEvNol/jE9qCXj16GCiP96Wyd2oNkuL7uInzAC
e/RWXa8Bcd2181AIGMRLLuJ/WKD77jW14xWXz7TXHla5xD9j4kfiy4gYqSSs
HJ+VLvHPmRiKw3454/Q4GQE+aZf4cCZG7xMRGMXFkudpA6gVPuJa/8iwP6RQ
2LqPT6epqeUu8eGsEmxd5NTsmTwlLnURRzACFYV4qKuubMeaGUTKlf5XLNCE
mAkXw343VRUKFGzViy7xkUw8b95askIUa2iw4POCS3wUE69Mv0E7Bzv+mac3
EPESl/hoJs7n31GDGyeTs0T7C5/nXeJjeJbwf2KJaFfaWT7nIo5lBAK+tBrO
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
+Cq0198BOSjAGw==\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example 7", "Subsection"],

Cell[TextData[{
 "The Riemann Hypothesis is a famous unsolved problem that has to do with the \
roots of Zeta[1/2 + I y].  You can read about this problem at \n     ",
 ButtonBox["http://mathworld.wolfram.com/RiemannHypothesis.html",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://mathworld.wolfram.com/RiemannHypothesis.html"], None}],
 "\nThe next cell makes a plot of  Abs[ Zeta[1/2 + y I] ].  You need to \
scroll to the right to see the whole graphic."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"Zeta", "[", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "+", 
      RowBox[{"y", " ", "\[ImaginaryI]"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "237"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2000", ",", "200"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "12"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "600"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
xpFwNv7JdwMpdRS6flpT+T4x/wP09+XS6pjZHO4WQMz/tWtOLtWy6qizRvfW
OsIffqY2dTUpqWPO105KQQgJlYIDAjy3qmNe0pnOp7cI/zlJl1+vqo7npdKe
Xwoi6iH81NVKXR39zfqP8PqT0NzPdalfWx0f7p3UiL9I+PNR6YRgXSK/cC39
zYR/TWh8M1TUU8foZn6TeC9Cj8P6YW6gjoM0iQtnXUlYe2D1xvmd6rhl1dvR
S3YkFFX+VPRoN1G/VDmBZ7YkdCR7n4I96khfiVApIPyV68PPlEATop6HlFxq
DxN+RknVFjRXx2cN3l+t9pIwd9b4EMVWHdMXDvzHUCP8pHl5rvKkOhYekeZP
UCahxZvMx2ft1DGgxZttQYGEUyfEBtLt1fHUvm1dIVLEfqj57aXjoo4v3v24
IraWhMkPb0WZXlbHhJtDt+Ym2DEaK+sv3lXHbI+asQ/P2bHT4YnHyj11rFYc
154n9qFShI9w0H11VKo6LaPyiB3Lf8nZxjwg6sWt2ekTzY6zl4P/pT1TxwdL
U4JhxL49mm0k1pdK9O93Q3KlBTtKKtY57KtQx2/KZXa35tjw3IEk/tZKdQyd
Wld67R8b5l+88s6qmsi36y/LcZQND1YpLTjUqeM13rA5yR42DDwdFu7fTOR/
r/y2SDUbDj3Zl537Sx2taPc3Sd1lw/R1n0nSs+o4U/7zeT6FDT1rSl1rmOpY
7ytJbxFnQy2/7Hb3OaJfwbd3df3HhoUjDzKLF9VRJs998hsnG9Z+OnPqOIcG
3uR8++dS9QoMui18ihPSwJkDP181bV8BiXq5G4JKGjjc/z0rT2YZwgOvrSye
0MCDOxv5Vr1cgIbdUemPThLXqycFNaMXgH/V8+N6dhroeyatfM+1BQiJqv9w
xV4Dub4r+jDMF+Dmk40X589pYOEoZ4TO8jxczcufYF7SQN1cn+g0s3lw/jvT
MxWjgS/TzV16hlhgZOFaPlylgcnt9k/k+2bA0c6zpVVBE6+sul0od2AcTITE
Xk5FaSKf289+fNwNSwuRm6/EaOI9MDnAdaYb0oe44zjuaSI54qRCuXI3CBXP
3PovThNf3PVItbvYBV9dmp1oTzTR96j8YHL2L7Cpu6Vy+bUmXh47w/tCpR08
gpjZ7GWa+PnA+7r9m76AtKerSki5Js60Wn1RTW2B1uMDL9ZWaqLTuPqUEKMF
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
0APpQ8s1wqZ2oe1tq2d6tC6oMeG9EvcfFUPOTbBduOR92sDxnuoyKsp87lCY
OdUK6tgblbaciguuWZ+LamiBwHWVFe9XULHFUO6Obe4P2DsRplAjR8W80jAl
6TvfoTxY7cu0ChX95Bw1PVUbwPl2dKfrJiou9Fn0Yjq6HtZfXz4lsJmK2See
x75cUQ8+FrOKizSouF6k4NUrwTpgq5ddU9xOxW/a4GDaVg0fvpitNWBS0YjW
0hlA/wz2hTXa1Swqmv54vE1CqxzkM1mGh3SpqF7qHymt/AlcIlSun9SnovDy
mOXli0pBx+bvV0dDKirzpdsUdhfCoNm5nikjKmbtb1WL//EBHh9omXE5QMXo
r/lVa+sKYFq7SMn3EJV8L14YeO/7HrJEAm5EHKfiURn2vgXHMsB6jve+wgkq
3tcvXWa/Pw0kuY4vX5pRcY1b1Nflu1Pg8rejNSkWVHx0b36/lVs8KFVU9m61
JOfdlF948los1Ofj3LvTVOz2XJ485vgcNF8qKZdYU3HzGcpCkb4Q6Ap/tGv3
OSqKwPGA7a2+EOwvduDreSr6Dq3IPjZ8CejurtYHbak4avNBpT7YCkadRm9+
t6Ni/wEJulSmFzw/ezrYzJ6KFs83bV+Sdx+MTL+96rpIRdoBnpibj8MhmZlX
O+xIxVPi64uTFGKgoWR3cshlKr6M6LtWdTwO5jhN97Svkv6aVRT7BieB/p4/
LO/rpF83Eh4Yz6RC18ENWTLuVDwhINRmqvcOpKxCnxgEUNE93Eu6veQjuPna
nY6Po6Lb2tjU8y9rIFZ0lmaYQPRQGBmgytVCpZ+v7EQiFQ0bh+/eDiXff/df
NNKSqRig0XLdyaMO0sO/6zVlUnEmYWNiwqEG6EtgqwoXU7HvP96HBe1NYPRF
9u/pVioO3uMJP0pvg8sRX+t+/6Qi/cBIiMPFNgi3cU+91k7FxYrysfRnbdCx
oMfWr4uKPUn+FSJzbeCgm9SV/ovo2Rnvo5LWDvcLdtbw/6XiD+cC/mtLOiEz
YOiN3yQVI2sjm4d2dsL3E5F+ktOknuIdc8vOdILCHJ+eyhzhiMZJl+xOSNtR
nr+fH9BFWLov4XgX1KWaJEUtApQTXFK8JaQbJm8tuKuyBLA1bVPFu+xuWGWU
a50hAdjwTfr9aGs3WP6WW/NpGaCo+1tDG+UeGFfpDR+RBpw9FiR9+20PLI9x
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
5mbL6g+KoUWOn+CeTDZOXi/UlR0VQ8xMVx95y8aFt2uZjDkx3KxZVvohi402
N/nngvnEUTa12TQ4m+g1U/IpiyKOs0l8d7a+Y2NE6bytyxJxzI4x7LiRx8Zj
B7KCJxXEUUl/4irmszHq/J+kWCVxDBl+vEiggORf+2GH6gZxtN/Wq3P3Axut
gj1vf1ITx9bme7V7C9l40VhgZ8sWcTRw0zgnUcTG5PMbGOVbxVH5082Hj4rZ
uCN42XY1HXEMtVVUNf3IRqlZ3hVxVHEUkPhULF9C5u1R59YZFEeHTLtjXYTz
vkXeU2KIY9vRpaMvS4memvbLVFjiuPdfts/5MjbGszsqhHXFMTfaTG7zJzaq
tja+zueI4waOYOYo4fiFt9/u0xfHsMF4g8xyNp5hOHdm7RZHoSDDzmuf2bjV
MHDzjIE4OmpNXNtVwcYet9mw5XvFsaPp8WLeSuL3OLaM6D5xNHShvSwmnK6x
O+cb4TyF3l0+X8i8qOy0czUUx42l9+p2V7Fx0/4n2/4RDj+vcX7RVzYeUdRb
ZmIkjsKLv/HWEl7bZS90h/Dl9JthodVszEh6uOAB4S4Txc1Ha9hYejl09TXC
++fKPsrUknplHu/eSrggyu54O+GXdsq+FSS+Knvp2Is6Nm5XW968k/CTX9m+
1vVk/tcE0T1JfgsCzOQ3NrDxzX/SH2JIPVe3CL79TfhC1R2TZ3vEsacxfk9a
IxufbRcTdST1G98w7Lr8jcSjyzfLE30K5SectZvYmDr+5HOsnjiqfXy8ZJ7w
Pcekn4JE36dnaa8+fCf9nK5eSWWLo9jCXqpXMxsrfvx028cUx75DGjZiLcR/
YZmtcyCOh2Ya+b4Slouq/Rm+SxyLI28+Cm4l83bKXXbJTnF81ldWsrKNjUGm
3ed8tcRxoZ+daSvh4hOhnnc1xPGG+tI/Ue1sFImqGTuzWRwPO5utXt/JxnUv
/IbjlEk8WcGsQcL7NqT4LFkrjhpF8XuTu4jeNnEP9q8m8cQmrm/rYaO2P2W9
+QoSL/mxxAzhBerZBarLxPGXMS0ur5eNfvMNQ/WLxbEk4l4Dq5+NV17fV00h
86JJ17AV+UX2yfDqQ91knp73NPJXEr4z+U97jMyby2ZFdeNBolfzRusnY2K4
9UP2XYvfZH/EHg9e2yKGbYmDXltH2OhzTKcgtkEMfcPk3BZw2XhUvsJ2pkoM
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
GCCjelawrH0KlUTNFyu743rPnxH0H5lCt8tfQBR2a9x7yfzJKaTA1Pi6jp1M
dtF1WphCrTvHj9t64HrUbKnIX51Cvibhnxuw/4lyvwhgn0bH/FWPqN1lwIsy
rrEBnmk0mteT9Qb7dHRQfZXgNHo+5rtf+B4D2myFb6qKTiOKlEq6CzaJlj92
cNM0WqW07u7Ffs7pZpUnPo3SPO6mkD1x/ThMs/+Qmkbn0+R3fcI+LXTv32WZ
aUTo+vlW+j4DEOUILXjrNCoSdtzui13ENkpV3zaNboFk/BS2S/EWCc/t02jb
zWKZs14MeLaP0EOSn0ZNr2xflGCPGXxqeIX9sIEgucebAbKd2bIPsQ+z50Y/
wQ654rA2i78/dOD8JtYHDDAoXI2bwutHW3JFXMHuZZdCbnLTiBj5XqQJW3lA
SyRMdhotlRo8PvGQAf9VJekelp5GqfPLAonYFn+l1Gwkp9G5Ha/9CT4MYPHY
I7Rz8zSiXQ3nccA+LmnCyN04jU5+8PZpxj7fucNvgDCN9sw4cBx9hOtnMOnf
B4FpJH3E0usZ9ubCvbn/4XgLuRmwrGL/SzKQ3oLzsf5V4+55XwZMtM6YFuJ8
dWvJu273w/uVv6DZMzWF6vzFmD7YIW8O2p8fm0JFNZxOI9jREQHn3funULzh
4M00f9wfIRFvwpunUNizlglCAH4f7qR4BFdPIe/OMnsH7LHgkB27SqeQ5eVE
26OBOD4BV3lR5hQySH4y9Aw76Mx4Td67KaT575HVKvY5959erbieFZxsLhQH
4ed5C52z/lNo+OEuE8pjPD/zNteUm02htkrx1jRsc5ctl/QZU6hSkO+MSAgD
ph1Cjb1OT6HkyFFGC7bgpuisHzunkN2bFB2LMFxPwhzxYvj9bTbyvKwYe9qQ
93Vp1ySi7g7UkA9nQA0lp1iybhLt+WQHo9jqY8TG/A+TaLJk91HHSFz/7whp
zVcmUTePdHYLNi8vh0iR8SSqpwgdPBaF68ct99kZrUn0senf3jXs2smmfDfZ
SeTY/2GHbzQDNmkGEx+/mkCWO+PejGLHOaeShV0m0Bm7kG3Up3h+nNilOkyd
QIdnb8iIPmPA8rZ2g6SFf4jJvv+/mOcMKP3Kq+F6+h9y25bFlR6L3+/Px+b3
FYyjqmS7SMJLBkSmV2Rn+I8jif3y229il/ww3PLSaBzlQpT6/jg878M8Y8sm
xtD8ORf3rFcMsNxpsfGS+Bi6Ea02nZvAgER4G5OqN4KsBEv/FCXj/rhC//jB
cgBlRXjYyaUwwOb+Jt3mrQOIQ+rwshd2Zw9LkV9nP4pXTNyskcqA5jO2L18b
9qNubT/9sve4/h6Y3shX70OmXtTKqnQGlLOuuHhy9CD6QnNWYza+z4Wf/xPi
14bU5M7cVsvB9wNyTtX3zlakSG069AZ7Y+TcY+0DrYjjdUO2Uy6utyKNNNqv
ZpRLq80Vz8PzqXNRNEe2Ecm+rfhyvoABaW3bplO3/UCC9doeFdjBQRd7NfMr
0dJy2Yl9XxkwGNTaPqpbgZp0S7+yfWOArq3gooN7KfJbLSp8U4jntVdlkVfw
N+S0U/2+UBED/ipdyZ768AVZ6heqO2OfFN7+baD2Mzr57muxTjG+L8rcmQ/n
z0JKTSe8M7CHSwLe2O7IQJvXv5yW+M6A7AnnhnnvVDRtkF8yhu3U4fVl41Ac
6rqn+tCgBOdjD6UkUDEK/Uz+rFmAnWfl3ubK+RB9bj7KpVDKgJfJwU8bQvTQ
W5bcsmBss4a8TUcy/FC40pFHC9hP1z8fzw6IRp6G2doWZQwg/mfWLro1Hpmm
ZlXsK2fANQl9PdGO90i79YDfM2ydRz5H6/9koINsmUT2CgZ4b1P9fbgmCwkZ
Z1Q1YRO0ane+Ts9D39nTfjpX4f76N9erduI7St+zO6gb+8LpuT1N2SUo1iSV
SvyB46GV4uOlUoZcPiTXSPxkgP5MvRPP9kqkfDaxrqCaAZXOlUfm+WpRxMe4
JvZ6fJ94+Vtkq20zKpy0ibTCDlASFXbe3IL+7tlnWI7Nt/C0/W15C9JKKWr1
b2DAkej9z33l2xDzde8vkSYGqO6pNuHq+oXMIrf3yLQyIMYz7J/atm603SXp
7/E/+P5N3GexaDuAGNk30l5gP3ixgSvsywDymD16fR3bafpRypjQIGq5UTlZ
3MmA18l33nV8HES+tqMzxG48/26digxZGELjpspLRn0M2GmlHyPlMIoyT6Rz
OY7geqtJzerbNYHuyqDFP9giSl2UXbh/dVhrxrRHGbD3W6/nXOkE6igZq5Mc
w/e7nrO9gir4vkHZ8fz7OANS/hM5dLx8Ehmaxu7dMInvayRTQwJ+v8qq7Zbz
wA4vzfpIwPN7dAsuE+ztI5vGKvZMo3s97Yt5U3je33M5bu4wjZJsxEouzjCA
/PH1B95F/D5xCjT+OI/ntfih5Ia5GVRiLEmWWsD3SY2yg2wbZ1GwavIJH+wt
GXFnu/bNom1r5XKmTHw/j6dKxdnNIspD9r+sS3i+FjfwKnXOok3WYV1XsflX
3QRzFmdRt87Whmbsav1/guMb59BtAZTzbpkB3Cz2dTTSHIoNd72vu4rXqwO1
4fQ5ZHOb1zEf+3H4s5XUyjm03yj6svwa/rzIDadNvXOoXCKbvIj9K0grtFlk
Hk2+mhJ7xaILhW06EfN28+hUuk3yJLsu0NDiNVORBXS1+dt7Yw5d6P+1Q+XX
tgUUsbQpoxBbvOp059KhBTSoUZoTwqmL/y6/4rzFZAEFtG8tVeHWBQfls3v+
PFtAWWsuFdHYkRan/pgkL6DObXU/WHh0ge3ztSDHzwtI5drdhjpslSL9p14t
C6iJ7XfXDT5d8C2YozL5mWh1x/6+NuzIq3mjZzczkQLVbxD4daEp15317HYm
cnly5C9BQBf0Q745Kx5noldfgiddsIVy0nSWNJmoqmdgphs7SdnNyZLBRFLK
EUvpgroglXDzD5clE2nqjq1uFtIFwrlNkSftmeia0ynW+9jhm0PeCjsxUWHh
JLeusC5c5t8w6O7DRCMD2vyfsQNsyl9uDmYiUf6XQlsJupAt/66KEslEVmeo
YlPYgjcjXnjEM1Gwa8JmExFdoP541nkniYlyXy5LFmErr1cWC6YxUU+Jnswu
UV2oeFovcSyTifhG38mFYnOwET4v5zDRAWFWhUXsi8bhN898YSKzg8a7LmzQ
BRsdCQmtQiZ6aPJBuRL7TctG/+rvTJR2l0tl30Zd2LzrzbOxMiZqfX3uwFPs
m1pxCnGVTMRSmXWYVUwXyuuD+cZ+MNGuf/yqttiNBe+3/6xmIr0Nl07U///5
0j+D07VM5HY0D45twvncsuTOqGOihHMiGq+wDdeVPWewq71stHn/04VV45jT
yvVMNJ/4jXQT+8mZjWlL+LlM9SZaO3aDjHiSObbOtL2u+mZd2GYzJGmM17/5
X6nBO+z8fse5Qfz7z9SkjEXEdeHpjxty/D+Z6PsFh7N3sLU0NMJK8P7HfarM
e7CnGkUPbyhnok2pWy8SJXC8S/NYFvD5Ub2LVQa2iHfz4HUcH5v5WhtxSV14
OZfT6YHjFya5w+4+tkT9rW7ZXCbKh7vXR7D7ehsGjHH8+62ab+lK6YKX/oVR
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
U7kNza0lrUp5Mgasa4L44sQpJHafja28LN5/PChf5CQp5Ooaw3I6bQJ0jWp2
qW+gkP45eevmlEmYnC9lN5WlkPh0MYn79Dl4Grx3Mg89Wc1zviNqDuQVkzol
tlDIv5SbF0X658Dc+kF+O7pj1Ukb0ZvzUFFzyOXCNgopOZeWczxyAeLii/+4
bqcQp8umPfUtS3DieH5m8G4KMbtkeOaIMDPxeTxRv4J2KDaRLdNgJoXl2xh2
ShTy8gGP0OZzzERJL3j3fmUKCalNcnN4xUzWEcf3vSoU4nVD74f6HhbSsntj
ktpeClEbz+s4Y7CKWAr99/znfgoZPa7PHGTCRiKoHz5oA4UsLixXpLmykfpn
Yz/foXXc+k1eBLMRHb6zol6EQmp3nVvbWsdGtnLsCZY/SCHSHhLdw0fYyfBs
n5/7IQp57/ryE+tuDuLaetRrvQGet/+aS551nITP7Ej6PbTjOVqD3CAnSWjX
7/qHvihvWxTOvJo0dB06WHCMQvRCnTi/7VpNlAaA5dwJCqHkCt7Uf7iajEwp
e8VQcH/09x3JU+Qi992U0jmpFPJkg1XAYx0usn5OscsZDZQk5Y2mXMRgccfB
AzQKubPyMfiBJxdJZtnG0kWnkCsDeuGGpVzEml/SS+Yk7t+cbU7kCW6y6C+e
/gjNFCvy5/Q5bhK0RqyLgZ6Y2yPW4shNioWED345RSF/NtrKcjzhJhslBVis
z1AIz9KxWY1v3CT3BZ9SFTre0lO1rZ6bnNjAa6l6lkKCfr7T1urkJp7SXMVs
ZhQSt/Lv4M4FbtK6jdUr8Rzm46Gna1u285CrySzpfOYYrwpXRI3VeAi3AnOX
KzpctbvP7yAP0di1fEDPgkLObJZ0VTTlIXWpi5dT0H4jZCXMkofYKS3Eilji
/rgm93104CFhqrPM/WiK11pXxTs8RDFnerfheYwnF4+Ruw95yPe9Uxa5aJvX
S/ZPAnjI9L6JIh8rCpF33bex7iUPoR0cvitnQyHFUev+EyjhIdubldN90WF3
nepzyngIi4N71xB601HXsk21PCQ1mEv7/QUKOXwoyEurlYc8kKdc4belkLfe
G1VGO3mI2efwl87o08zaduf78PsGtrEq2+HfB3O0A8d5SNctZ5UgdGJ86p/j
0zwkd02u1ZTd/+PlcU/lPA95+molyNieQrT1/Wi8KzzERlPvaw7ak7tQXmAV
L9H64TclepFCJDvHrRrZeck6mybZm2jzZx+Yz3LxkuKn1vc1HSjE4pGBRYYA
Lwnf/C77BbrbcLOs11pe4pw32buM3t+VcmytMC/RO64pYn6JQtZ12fyxEeUl
Ut3eekXobVcfNHuI85Iptwo3aUcKYd0tTOiSvKSSZ22SNzpNqE1ibD0viYs9
1dKDvnHN2fnYBl5yY08cp64TheR1bda5tJGXGFYM7H2FviAmFnViEy/ZYr7b
jtMZv69X8f4kemnyergd+junMNsZaV7S8LCwrBytK7x38330GynO+e2XMT5M
Kv+5oL0yTsg/QQvFVzlIo0/qh54aQXtpLr4NwvUU/7T5nnChkJ/Rfz6U4fM5
XLZ8TEUzm+e/LML3a2N3HBK8QiEbGK+ueUjxkqznWRJX0KfuXoV5/L7HiktH
G9AeqR8E9knwkvNfdTxUr1LIzKXmuf1ivETj1OO3IeirmUPc7CK8RGC0vnUG
fcCw1dR/HS/p85bgPXkN60GMEeOPIC8pED2v9QE9Q8sZGeHjJUHvki9JuFJI
gZzmuRJuXnLx4MQLD/SmuB8nT3PykoPN6tV/0J/zt09ms/ISMYe7y/vdKORv
UqFOExMvGWMq2xmD7nYrtcxb5CFR8qZPLa9TyK47LRcqGDzk2ufozyVo45Mi
d+dHeIgBrW908w0KGUlQrfw3wEPmbrka9qFP2RVbbWrnIbVrCu7o36QQ1wnb
QYufPCTxFVvaa/THE2ZrLtRjfvwIEnRwpxDO0J9Fn79hfti0HqhCh+U8frC2
EPNjQcZlpwfWB9J/USEP82NzRt0YWuryOqH3yRj/138EXvPE94n5ljbpy0Pu
pLZPtaHbRNZKfbzLQyb7/5no36aQayHVsVrXeUjbSS5JiTv4ftu/ZLtZ4Xr7
tOML72K8+EcWflXnIZuvGrHLe1GIiceJRy47eUj423O2gei5JV+hP9I8xGu9
h4KNN4WcSNE9MczFQ+grmZnc9/Df0x62zjVzk3K1EuFraJmC85uel3OT/c4/
rrehnWxFeBbzucm2zn+aafcppNP2QMtSDDeZL97y1dgH8/WhbTynDTeJvh/W
GPsI+8+3oabrPVxk3edENe7H2D86VpZV6rmIz0xm+FX0wC9pg6wiLuJi++Os
3hMKqcqMCloVxUV0jnD1Dvthfz5Q/b2dykUGeD2m1QIo5Jdm79eOzNVEOfic
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
+nKcfP8+VW4SHuJdC0JMcog1dbpPiJuMPl4t/V2YST6lR7jtr+YiPFnCf0CE
SY6uHXvFk4/zTzVnQRx64wNpN/9ULmK89OuknSg+j5V55tlNLpLETM/oozLJ
Y7ttm3L1uIjt6j1GIxJMYuuzes99fB++uE1D5uBKJnGx2SemcZ+ThB1aN5aK
/nSttfbOZU7y0Z/v/llJJgksTmLd/4+TrPxR1z0hxSSHnUs2VrPhPBVn58WS
wfNe489jv5+D/Hpvbmwti/lDWdVAV+UgS7UGqz+glR/c7Fu9koNsZt9U4rMa
4xd3TpT3FzsJPjYpxLYG4+cuu+9UIDvZI381iUeBSUqvDB34+5qNZDx/0SK6
kUnMNKreSDT9BQcbZocPmiLD3d8c+RdWSUt096Ejqhdr9Mz/wrWI4KHsTUzS
q/VWX6N+ESwvn/lLU8bn3d8XEFyxAP+YamvjVZnkpCMbX1AaC4yl8lw0t2H+
aPxLDD40DezN7hceo5/s5xX5jzINWXdUPHm2Y3z4JVr5CqZgNV/c5VZ0yd4+
w7XqUzAxGxjpo43/J8zrc1R0Eh427c8t1mESfeO5HZoNY9Af3sh9VA+fPyij
bf1yANpsmvmz0fzxUfmyCgNQrdIqKKnPJLPyz24Ixf6C7Kp2yU606+OBK0H3
+iGY8lP5xD4m0V25FMp9rRc2BIwfdTdiEqWk66ORrj9A9tCkdQs6/oJseVXX
dxCRnbbZcYBJ3v/QL1rV2QXzH+ZO/UXbdsr/bGnvgIrZf77XDmL+mQiq6/e0
gtNZgYR7pkxS9q75xU6JOrDdLfRqFl101GuMtaYWzFeIpFsdZpJF3YEse1o1
6LwSy5UxY5KDHtu+7wuvAIFfq6pfHGESu2X2giKiRcCRJdvAa84kIfoRLJUd
BTBzVa71FDq3IFdLqCgfvssr9CgfZRKRB9MFa89nQ+P4ul+30UWxH+8l1r6F
8s+KI+PocwdMxgY00iGduWnmnQX2HwF6Z43wM4hXVl6Q+A/jsyro1KrhexC1
qMJ2Cf2ovuCTs5Q/hFaqcnegZQ/Of7m23gsuR6vz77bE+j+ryGulHwkepzQF
49B1Ao2m68SfwuntWlQOK8yf5PtC0v8Swax5h2wpeuNKO13/1gwweLFzrZI1
kxwPv/GpeVcWaLvpKIWglUs9Z1Mf5YC8yB51ExqTrLrWsfWQwmeYPLjfoJmO
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
tsEVHgKyeppJaI2NVjcPMPGSk5ovz/B5UklPiY+ROzsvee1mX9WNFo/RChEU
4iWlAUWrjL2opPfbqqQIMV4yFiurko2+LmcS3CTFS1TLeyIDvamkSFBtOU+R
lxzt1fs5if7KuqBpo8RLfFZezh+/QCXHN7x49U2Fl8StY1YsQhcff8o3os5L
vm1zOLHtIpX0cwdS2/bykm79H3ej0F4/xE8/0uIlLLRNeQyXqJhNdLmEdXmJ
8f1eqRq0+2jqO2cDXnIuUf/I3stU4qMdel7TiJc8zHvl/xJtM6pt9fcwL/lY
x5zF5YPxrOSnq2rGS5rGHPouoOXpOyWPmfOSFZZi4Q60VfzZKl1LXiIlKWdg
cAXzUaKf1owVL9FVv+2TgVYzrrN0seYljiZ9b8WuUskek/WUxGO8JOj0/tYA
dE27qOzr47wkxS+Rewzdr9uTeeYEL6l6xLLv6DXMj6dSni6gp9Mdz39Df7Zo
rTpkw0uEfhXHK/hSyc4OAU1btEaHXG04+vyyZI0mmjp/m3kZraXPfLsVP3+d
t3+Xgx/mP+clQ110gvwBpwo0d7i7iDv+fvG+19Hq1zGfFDP0UnF+Q9asv5+j
xXVuJfLj/LnOn15mu0Elf36xH72L77cj6Oc2T7TddPVEqQUvsXixmd6CjvU4
crbiCC+5+OlOqP5NKvltrFEZZcpLYqr7v6eh2UXcuWVxfb8OHpgW9sf5yLJt
vWDISzpWJcneQNcnUOXvHeQla0TXWg2hW6tnmJz1eYmcstMd8wAqobE+KGLT
4SUGh37l5KIHqza6niW8xM1OfmjTLSphme9cidbgJR/CB4zm0UL1mOyUeUnd
m4O+trephGK36dbHbbxksSApvRT9uj5VcFael+ybduKPu4PrTd8cVCDBS05x
lOiyBGK9C9UJNBXhJbc3KnifRS89zvuVIMBLyswH67WDqGRg/y2TGFZeMu5q
wPYW/Vku9ROs4iX8AckagsEYjz/HUxIXecixTOe4PjT30TL/khEe0ic4ZBdy
l0rur4oMsqzA870v4uEo+rhfZndmMQ9566pZbHKPSroeLi905vGQcwX3FQTv
U0kq/3LeqzQesnhWZSL2Acb3Kq7ouhAeYvOkRZohFN3mlJt4k4fkF98yt0Wb
8Bhe0b/MQwI2NGRvCsP6FXPCaNyBh/D8vnotLZxKklmvTc1p8hCP2U3pvBFU
Yj4eFb9PmYfUSld2eKDh4TuWY5t5SMwlaT31h5gfFWvvLGB+k5UrZv8WSSXz
IusGVzq5ye4bPI+rH1OJyqP6Go0r3CQmJadEJZpKvL/GjIef4SYr9bZLkWg5
4zuPvtK5ScH2TNrxGCrZJMhuE6LLTYxbrDd1P8H+5tDTt9xs3NiHxGfMPKWS
vAJRk0oRLhIyqlou/IpKJqzjU5X62YmRTSLPJbQbg5X61gJ2wv1b+EgD2vTg
4f6OWHYSmrRY9zgR6+GP28teZuwk6tS3DpEkPK9CfXzWH9lIfKPhjNhbKhEw
Dr12/8Ja8umHnZjUeyrZ/sC6QewnM+mPC3WW/4r94WMDn746BrL/3a/WUPSi
v9rbkucMJLGA8cgCmiXv6tq7LgzEvv+cRmkelVQ9zdHJWKGQjh1mHG7fqGSN
wP305zIU0lTIl5peiPU+5cqbyupFqBgMn9hVivmF9YO1e9U0bFsutX+GTjmg
4D5En4a73GsaWX9jPX4u3uMwPgWGKp7fG9AsNekyp7in4NdV83CfcipR6uFV
fmc0Ad95BFXzqrAeS3EW5MYMQ6Za5EX9etyfU0pHHj1thSMnhEYS0WY/FUZX
s7XA5PVHJ9c2UMlJxgpHQ68m2F4WbfAbPbCteu1d43pItnsqZtaE9b/1o6sP
RzUcDJQMzUCbutveuHKtEvpSnzMJNuP5VH4kt767HGQX4kfr0HNBe4Tasn7C
0wev821aMb8ddfiXM54Dmlnyqnno1Vkvl5VbMqC5KTlJso1KfO+WSJjFvQUf
xi0bbqDTArQiacHPYL1cSlgXun6TeNwargDINtzGotdOJQG/NC+69d8By/Np
Pq/QVxyPdv1wfQ4zUUrjLB1UMqqvwmFukQLhue9OOaEfJwteHhD+ADu6djaU
oH1uDTayr/oElawfjLZ0UkmW9ufTe8/nAad5ltoYumRHtN2oYRHcGfzE6tVN
JcFMZnHhoxUgx7P36l90k0u5yN8TVVCkmjuxq4dKdlseGLn2qxpWX89rXEAr
XF47MBJbC1eFCt/69WG+sbD0eLOzCc7plpmEDGJ9UZy+s/ZmJxyPa3sUP47n
y/7THNOTYYhylCOcE1RiJPjezm3fCPxRcu/xRvtp+2Xd6RkBo4KVHQaT+Hv3
s786CowB9IuXjk/h+pT5PUsxGQepnSeWNWep5NPA0Vrx15Ngsxgfn4j2mG45
2zg2CY8Lhw7yzmE/y/g4vUVtCvisfCK70SWl5c0Z36dg9ZXo7cEL2B+94JK4
gfHYW1R/sn4Z8/sarpflJf9A5r4kq/YK5qelNRq+zLNAO3o69Q26/LjPFcd9
szDkubgEFBqxj+rsavowC6dYgg/yMdDI67cOl0jYHKweThXbj97r+8j3UfEc
PK+sHvNBH3EpcJdZmoOWxyKRPejrtOu3f9vOg8WW5M6PjDSSS+OePrZpAaZ4
yjNH0PHHhe/stFiA0JmJO9KraOTvxiPeu24uQPnX3dtD0LHCd72Kmxdgv+kv
H9pqGpH5ORo7FbAIPaojxhFoP/oxP/nURbgpwiv9C/3Y+uGpwNpFyOs6+nPn
GhrZY/aiq0hqCdS9+wWYmWgk2C77tXz6Enh1K53ehU6rEBL2rliCDLNLn0+j
DQ1nxZlHl2D7djbbUvS5hqfHxzcvg1usWeYSWl+Lw9xAbxnesMewbmOmkZZy
ONVHXwa5fsW0B+ifAZ+8Bx8ug72l56rv6Gu9NVYmacsQX/jFYgrdnXSEa754
GSSeGy1ZsNBIxuDzTr7ZZVh3zP2gKCuNGGzbbXTacAWO/Mx+Yoi2P9TU1U1b
gVA1hvGraNsIRr+E8yvAyR8a2Y7+4Ge+eeThChy63jDAu5ZGqOFP3LxfrUDg
mJSmDlrxUayCTtYKMP1+3/USXegvk5hYswI6exbV6tCfGF/nko4VuP5aJ4iV
jUbGxjvmRUdXIG9dSMtu9AOmuAd7F1Zg2f+PkguarzL1hMkqCtGYEvN/graL
3mL9koVCLp20rytDHzDa2/KEg0KyK1IUKOw00vU8mW0XL4VMa/67qoRWyhZl
8hSkkB1voeok+rcI2+SR9RTiLnJ7Yzi6urRo7q8YhaTcqbhQiB7b7qG9LEEh
Q/+ESmfQN5nYFn5IU4i8PX2DHAeNbNA2N1SRpRDHmtfnjqKjpoYd9eQo5OW+
icJA9F12cnVhM4V0pe0W/oyeUPT/ekSBQqQ23HAZRg/SCmimihRCCyn5Ks5J
Iyf/VkROoWMX+PgOo0Vu74/ZswXz/enj9n5oxvrQV5vQ6+viP75DT6u0TmXj
81Z6w+xd6LRY6fxR/P6HGSo0AS4acVUQMSiVp5Bqqavv9dCFgTrVRjgf7gdF
TBfQNzzaor03UYjRCqf1azQ3z1if3kYKCXa1fNuAjjq+k/JFikJ+NcZR2Llp
pPjSps0NGyiE5WCf2V50GMuat7GiFKKXvf2VG1rkRG7tWmEKuSl7cT4O/aB4
aUJcgEK+hecbVqLjCqUPN3JTCGXV2meMPBivkrqahJ1CNM+aTu1E127YzGXE
TCE5hp2PH6J3fQgxKZldgdlPCiM/0A7rp3a3Da2AqryH1hza5tmXRwfaViCd
aU3fMV4a+TExGyRauAKxD9O1g9HFN3LtqjJXIFjWJu4z2iO7VKIH49NeL8tC
jI9GON5TxeVvY7zX2r4zRD/6KPvnmPcKaNlzc15Fi314d3Tk1AqIBpwubEGv
L+X6u0trBVgFBSW5+GnERfHl8YktKzCT8M0H0IU2N35yrV+BykIR5adom6cm
oRfHliFgTdlzugDGl8pvLgk8n+cjLi0/QIdfHhnguroMtI2brL+hyxRZTjud
WoY9ur480oI0sqUhsO3kjmUYu7nDtwvNy8595HLhElivjjzhIITnTSX2+YbK
RdAP1/4YiV497Wkgn7YIyjJj/MXo86URXKl3F4FL50CpnDCNXLmltEHh4CIU
3FjYPYCuU2C2YPu0ANtW0YRcRTCe/3k62/rPg2gYu8cTdOOrb79Dj8/DWumP
5b/ROWcSNhntnIeufby3torSiLr86A3X1jl4fL1gehQ96bkQ5b4D8zPj5upz
4jRyIV9YLabgH+R1Zuu/Qk+FZUnxPfgHPoX7PzeiNYxi1wqf+AfTtx0TdDbQ
SKbBGs+6yRno4Ur0FpSgEUvll++PiM7AD7FNojmSNHI2h4WWbz0FgeobTzFs
pJHUpOXknEdjoCfyoV4F3W2Ze83l2BgwLukYOaErH1PKu0XH4FKenVo1ml2R
PchFcxSc9eNZE2SxfigfX71GexgOmUun7JejEafvDYerNfqB66zkv3sKuB63
S9pEOdrBqenPYB7aTWjBmhbaBkX6gW3j6KGou0av17XBVfHJn2aK+P01c66p
Oi0wUlIQs24LjWxW/vVz2r0Bfss67ovbSiPGDfqhEzVVIBcqqlaBjma0eTjb
UQk3lyoUGLbRiMLAfqbT4xWgUaMuYIsOeRe+WWtDGbzxY+uT3Y7Pu1zrWR9f
BCzDX5ss0W/dYISvuADsrDwqb6MPOGyI0Rz+BqLbmnMG0N4bbXTfeuVCUFNK
SIoSzteL+Y1GXCr06Nteb0Vfy7hYZ2idCPver/Pm3kEjo5PtG+6JPINY8VJn
LXS7f03t0aIwmL/jSzuHPsAz/jI60BMsppXNX6Bzb67p1+n1g3e0/gM16C/J
JmHyGpHAWfpEc81OGunT2cJn+Ok5OKmZ7lRFp5i+kTasfA1Fz5nkHNAWFvNi
02fSQIrzk2gUes6lNtFn8j00dEkzzaMt1coU20dy4EDodN0XZRpZAdd7ltYF
EL/0+vcIWvXkKfYcjiKgnLb5tkEF5ze8b6Ar9wdkw49kP3TKj3WVTutLQG44
6qquKo04zvLNhjRUAPN+DZnfajQi4HGRQW3XX9ixpkaJcRfW983NYsacdXD8
mzOooT1mHWO+dNTBO41o62foDZ3CpwMCGsBGaf6+pzrm4+yMbNmPzZCxPntJ
bA+N7H+ltqq7ox1a/xqzmaHbZSTqzKAD1kb0Ct1GWz45RL497gAq1zrlCbTX
8c+NYUadsHa1l1ORBs6PK/VE0esuoA3v/OumSSP/XHsrTyr2QlBSSdcLdIxL
Un6ady9kOthO1KE/9Wxlb8jvBbaOUA5toBGJNrvPmaZ9kFk7rr2O0IgQt1/S
Sft+aA+7Y3IIXRGYZGme2A/sJpJUP3T5oslh/v5+oJccvjSIvng4RXPMfgDY
81LTvmrRSEeIZfq42SCoXdHPnUIrCq+SEAoehJO7W0s276ORVs7uiaVvg5CV
wdkbht755M8cw5YhOPnaVcxRm0ZC02omC8aHIMR+jcITdO11k7dfNwxDtvST
XVXoFbMm8TOHhoEjttRMQ4dGxBfX+/U+w/FQhUBuXVzvheevNuwdgdCzm57q
oPsFHB4tU0fA5bB05gV0cP8xhYd+IyDJKdLRho7RHGkZzBuBxSHBWX497F9o
ba6JLSNQW8LLeQBdEZfhvX5hBALvrN2djtZYaFEV3T4Kdo5Mh7vRX3hC45L2
j4KmPqO9sD6NLKf39g9SR0FIdvmyIVooN8i/1XMUJlbPP/BDt/bMD9wMHIXS
zulXH9Btcv7RjU9G4eW38S/9aDeWw5KdqaPg+2y4Wmw/rl+iFVd03igc8+3v
N0FfuufJsKpiFFSp3Sv+aHEDq5j1LaPArdkukIMOqbkb0j4wCgOizQoj6Nmc
m0GWM6NQsFCnJXUA6xv7N3lNyhjENtRYWqCfyzbWv1o9Bhc+VrgGon/qhX5y
ZBkD06jSG7lobt6mz75sY6DoXfxoAn1BT6x8lGMMmCwKUmUP0ojpW/m+D1xj
0KacV2iNnunbz1jNPQY5fJ8b76L5tyuK6vOMQcRE1vg39K/+f7t40e6V75n/
oTtkNWnK//+9SFqqmIIBxifvypO3nGMgcy95JxWtsDWR8Sr7GCy7vjoQhr5x
g+9FAusY1B16Qf2B3pIRECXDNAbvFOI8F9D08XTKAsMYBK+NDtp2iEZ8np9Y
MJkfBYf+h89s0ckiy84nRkdhX3FoViTa5LDga6HOURB9dfd3CZq7WYvn5p9R
mPEP7FxBW3/rZHtaNAoVdgFzOw3xfIpIs7pmjkKS9nUuR/Qjp16/wfhRuCl1
dWMM+mN9zT+R0FHY1eZpstqIRkrDTDkiHEeB9+tZh13onnUfGltMRmHoiesV
F/RZ5qbVzeqj8OzYqdc1aFZtW5m5NaPgs5v+lcWYRgQ9f9wVGhgBC+ETfzTQ
JiLDe0ZLR2Dt3yMMCeh8ma74wrsj0PXh8Lp69EN+TeEfriOQG35oC8dhjF9u
G60bBiNwzlTnqCdaPcfs8rZVI3BIiZx5jQ6Idrsj2TwMstwa/s1o718l2lUf
hqHx9850XRM8n1tmeTxsh0HngDSroCn202V0lfrUIchN147TQ9v8YXeRvjEE
u9bbqXijj8+Hq9uYD4HiYDy9Dn1lncro65lB4AuRzXlshvcFY87zHxUHIXha
73AJumK6ofPVvwFgsnHoWUD/FihUvp8/APNbE3lPHKGRzx4bQsxMB6CjYrPz
BnO8f4lILPx06Ifj6gcZDqNPyZ2WfSPfD7XPnCJ90bLc16dDh/rg17nk7+1o
ubQ5Qw/XPkjn3yIab0EjWs0eP1Nte8HXavtvOSs8L8Oas07S3TCfd9j2KNq4
TZnF5G8XeGw+O3fH6v/4lz5rHtgFjvPpGwfRMUF+5/OGO8E4ZufVt0dpJOiq
/VHTpA4Qb1PdtuMY9jtczUpis63wxWHvgz02NGLFvVS+T6IGmKS0iDvaWqFF
bJ9eNRg16YzGo1847j/0y6kK2g4fMuSkYv98MYkrJLUCVu8+xtqOrvk7b81q
8gsMp2yyBWg0cvRtoXNPQDE8TDnpcBB9ekPCHtWcItgk7VT4Hp3l7DNMFf4O
B9kv+gXQsX47uYlf8MqCsCKf7Z/Qn4aLNop/fg9Nvr6to+jfEcWRffOpILPn
5l2ZkzQiKi7bKueZCK7Tt/YeRWuy2Qsp9T6FzNSgoRD0tR6pLqfnobB8+l70
N7RYXzZPgqoz6MuEHfyHzrq5kj/y4xbcb3k4p2CL8XB2T+C9vdFQH/U4kYZm
hr9DBaYJIGUWaxmBFuzpmfnC8Rbe/0j4sIzWTrrK0GuQCbVpGWcr7XD9R1RE
ni19gw3O2RJMp2iE7XOdiMS/AnDc+Ll8NzrjQ8fGifEimHv0fUs8+pkmNd5q
8BeI3qjq97LH+b26aPTXsxJOmo/RRR1xPcP3/doeVA8jcwqmDs40Erkrb/bq
UBfU7j3iF4X+njPnL2DfDV/9fNJ+olfEV+WFt3bDfdbfnIoueD7sLMu0qnpg
h7BbyRj6vHT9dabMPvDalaZzyQ29f/xurscQLHkpq4WcpRE9j48vXjaPQ0/O
cftc9Cpz/nv7BCegbPlmxCha3tTX6KXRBMQG/Jk0OYf178mbua+5E0AeeqUJ
nsf8f8VDbF3MJNz8kL35qQfel8LOqew4OA3sUxqi771ppLnkwdcTzrMQf/Sn
WSf6D/cb2dBHs6Dx1TyI7wKNfP2344PTj1lwCXSbP482jGEUWy01ByUST+uU
L2L++Xfy2KeqOQg0XBWReQnvh6/ivx6XXACp9/dKe9C37t4fsT6wADlCoqvX
Xcbnn/Y9GHZfgIFO5fPeaB01yqPS3AU4cMneZJcP1j/X9B4r80VgefWTI+cK
/v5SY/SQyxI8ZbfQHUC3q+eV/wpZgl3nOnzWX6URlbAh2e0pS+C4d2HwEvp8
2ZxuyPAS/KhW/LXnGp7XpjiuK/bLYKP+kcEFXS3+jc/3xjLMxOqqx6C9Bw/e
X/10GWSdbBIX0TZnpUzv/cX7E+V+wBdfGrmXVKXyGLtAcXvR3GE005dTspFH
VyCzJHFazA/z7RnlR9znVqDnYb7dVfTu6Px8r2croLdlch9cx/oRFTxAmV+B
ltBrl86gn4SrmJ7G+6bXLNu7OLR9yUGzuzx4f/8uI0m5gfk0SbCCDe/Da6wt
VvLQTUF2rmX7KcSFp8h4Gq06X/vmmwmFVBWrPN18E/sbu6gFO2sKeaomoBWK
nhx7XfXOiUKYR28+KEJ7/d3bc+Ichbi9nGqfRzuUJm/IvEghGgI112398T5p
83mH6y0KeVGqXR2JXjWr8rokhELW3nwvXYre9nb3tdowCnHfI+1BCcD9DMm7
HfKIQv5OhBYoo2Pf/osei8X7dBKjwGl0nY/Bg5UXFBJPP3fqCbqG2047J5FC
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
5V2fCTuVGA5pMn6hUohwdcUJB7TZpt30jFcoJOn67Ym36I8658s221FITXSx
NCMHlbiJ1Vp+dKWQy4ftyuTRd+sPz0h4UMhivcA1K/R/vRoj1t4UspXzUkIh
2vLrSKJBEIU8WBi/sIjO10zPOPaMQv71uAnKcOL8s3hP8b+kEK0q5goa+lDX
tmthkRQS9yP4YRj6bumD9pa3FLL+gzCUoQ/7q0R0vqeQqy/iZum5qKS1sjog
NoFCpO2zL9qgE4xmCuxTKOSJhfaWKPSTfXX9zmm4ntrVNTVozXG11YNfKcR4
/zl/Vm5cn2De+ZxvFPJFbED9CFqh8NlvpkwKEeC6seSIdtUMsWHNppDbi6uf
4tDO0gZVZT8opKn30dUW9IzB/bnjuRSiUs0vzkOhkoDLVrXPf1LI65w3jZpo
RbvYyy/zKIQuUSrYFe2T5fDBIp9CqGFftJPRnPI2b9rR+V6E7h/6iuUndfEC
Ctnu8CddkIdKQkI7X25H+5w1tTNAZ45yvu/Fn+/X6ZR8gGYwLb5ijdZVvNb2
FZ3uITiagO9LFJ97PoS2bvE58AHHw8X9wGArL5Wo3+Q1uYbjtV/iWGeCTqzb
rzeC86nse5H1CL2vrmeHNM5Xrkb8xg/03UvB89K4Hs9yP+6eQsucFCsdw/Wa
TVTu3sFHJePzc5/scT1PvcwPt0BbTY3/SMX1zvA2PBGMzsu5wJiG+yHs2Mha
hJ44zf/8xkcKuXvO6uciOuPPMb9Z3L923bHbMvxU0vWlalE5lkKIkqusFZr+
b9naoWgKid62rj8MXXViOG0N4+PS8iYzhg14viofvfqF8VTS/55LCW0bGs9e
gfEmVStbZIOeY94V88KPQkY+au2vRV9+8LD+6j0KuXHekS9eAOOTW/K0xCUK
qdNb+d2CtnkexHfgPIUoK/s+4NmI55/3iDT3KQpZoryecEXLUPwOMepgPOf9
KjcQxHgPGmOm4Pn8l2T88AE64+gzNhVRCtF81X4kHS3Zf55+jwDG742Zj1uF
qETvtlXiKUYKCZIQ859Ch5Z009d/4SZPXlXkb99EJXIqdn8G3nKTEB6PJRN0
DHu14osAbvJspe3qN7TR04UP+TRuEl4boeO+mUpyllMC7dgxf3gLsrBsoZIp
h6k0d20uEr9UfEQZraI6e9FRmoskONy6eQU9+GaDJys/F0k8W9fzB/1S2FZB
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
6B0tugbaBrjfAgxeS+g4jslD/mu1UGBxpWl3NeaT2d3J+rW1kBhdIWuBdreR
6S+Lr4U70m9as9DvTamWgjq1YHWDWWEEbSFQFf1vQy3oZ1z321KD9fw398Rb
HTWwRUtF6S66dHV7/rxtDTD7vwtIQrtquOkNytXAaCXbvzb0u8zUkITpavhx
tvEJ1GK9kyW+FOZQDeecbw7S1VFJRntrqdPxKtDKbCX70Ffr813ZmapAml7z
hSXaxswz/v7nSlj159PIQxs/ol/j5a6E1zEpkZ71WC9+8jwnYloOJipLHN/Q
GvHC2mGP/gJHjeadYfTlMLaN8K0MXBmbzU0acH+ZHhrLspSCKXWd4I5GzD9v
q9xuXCsBzkWjh2fQDI2973e4FkNBcPhsEHpjivITTc8ikPspUzuPrqzY59j9
sAA4t5qH/G7C9+0z1Y04kwsF6TH0a+h+9xtBco9/gKvRmL18M5XQypjbn5hm
Qf9dL6MItMSIJK24Oh3eCJT/qEALToXkFHl/AdMkIel1LZhvI7xzbsukQUFr
EoctWupmFK9/TSK4OS+4RaOvsD2y2jAXB3KcGkN16IWa8lsJrO9gICbQnL2V
SkKun2TvFYyAKJXGX4BOuO/z5uBaMJjVbDtwA908L7YQtekecF2zjY9HO73c
Vp7vaQWFjN83tqKbqj/mvmL3gzuvGB/ytFEJ25UnGithL0Be3nBWE739o97t
2u1vYfB32EVX9G+xxA3Zj2Ph1OJeje62//++afS0al4KyJ8+Rf+lnUq+7Ovf
acyVBYMCH91OdeJ9aumxOj36C06HmNq/+Yfnp6EpQb2/EVLSCs9XoIUWOALC
PzUBc62CEX0P1jd0LEGl7s3weSOfNA3d49l5J0GgFbgiy4cke6mE8QDL5rKd
HZAfp305qY9KVHUDv1xz6oa92QfPZQ/ifrz/L7dMdhC82hIMRtH7/5P56BE5
CE1rgodFh/B+iTexO8A2BL5qc5vvo3dFHu1O6h6CruK0Ro1hzKeWTFq6oSPw
omqPSekI7p/i7thot3Gg7xfRbx7HevlI5uWtJVMgecbBmDKB+YUzNLFybQr0
/+ZbaKLVjxaXaipNw4vP1teT0W9ntSevv5+Gvfc/BXpOYr3luKBz/+4MnN6k
Vbl7mkrqPd/7VIvNwd2AsMYL6Kn9l6+mGM9BDN1Q53N0K9vjhb0P52CsN2hy
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
v0gFUEgK5/asI/YzUMku+zTrPr7fgO2nObN5EB0+pl72gEJchTLkDdatQpd9
VOAM+oPpivkB6iokDtFqtwVjvZ5mIfP18yrsHooyuoemFzgm0aewhpDB8Qvq
D/H8fvz2Lr5jDbEZeO5eGUIh7FbCLWJS9GSn7WTRAvq2asIvdT16Mtqvzij9
CPtn+rMvFG/Qkxv9k/cD0YeSLgcbl9OT+381nmiF4v5W9FYNusBA0nuns2rD
sL+znsqdDmQkTtYnZ1bQr9/YyDVnMJL9vbEH94RjPTEoyXu5gZEU/TlZ9BB9
4FPmxUwhJtLQ87JG7zH2s7fpt7rEMZG5Lu2B+giMF4/GPVUSmMmnc/HSDJH4
fgs52rRiZnKna+6yPNqDqpus1s1M2Lvip8PQyU6zla2iLES0c57e6AmFFJ1t
evnqIQtRaU8Ua3qK+SH35MB6K1bSmN5xk+MZhWxef1qtzp2V2HoJ/AL0J9Wb
i3xPWEnwloDgZPTJTceYFKpYSdtFh9WbURQiblc8HyfNRhwPJ5qlo08+vhB0
V5WNMHB1fOj5/3pkSsff02xkZ6au48loPH/mmzN33mUjN2bkukWfU4h/cpLy
s0Y2wllhr6yPDlk8POrQz0ZiniY89UU7X5B5mDfPRsqU+A1G0fds7s2XiLIT
U27ddIkXFKLbu9HVYxc7Gem8x26CZhFw0X6rzE54feaLC9H+5k6h7ubsJNlQ
btMUWiqjoo7Pnp0c3mZ/SyqGQh7raLJI3mQnF761yT9Cm5e/lYgNYyczz/hC
vqILyiwnOWPZSYCDzvA8WiKrJmzkNTvJXFuUcCEW8wHfR1XWYnai1j23JhKd
kBB5RqWanTRl7bWoQv+pYtAf/slO7O7afVxFO99TzmHtZCcrRvF8Ci8x/5Tv
FI7oZyeh29uu2qKd/piuDx9jJ1vneWuj0cK9bAr0s+wkt1J75w902/stG7uW
2YlWtJ8fUxzmC5UTV3YxcpCuS4U9B9EyDt8q/7FxkGswd+Qy+uz8hybetRyE
ef3eqDh0tlEbSd/AQZ71XJz9hY48WpD9XoCD7MqOO8URj/vJ6VXfThEOUuT7
OwPQkROxAVwbOYihCS/ndfSuSE9TC3EO0i+lbZuMllNs4xOW4CBuC76lbej4
emH3o1s4CHd1gfj6BKyvX9kbtaBfPp+9fQzdLVBD/Y1WuCLbchOd7s91RwNd
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
2oyU2N0FVxZpeEUnL6D/ARXBcQ4=
     "]]}},
  AspectRatio->NCache[
    Rational[1, 12], 0.08333333333333333],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  ImageSize->{2000, 200},
  Method->{},
  PlotRange->{{0, 237}, {0., 6.062599519810537}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]],

Cell["\<\
In the next cell RootSearch finds the first 100 roots of  Abs[Zeta[1/2 + y \
I]].  Notice Zeta[_] evaluates to complex numbers in this example, but \
RootSearch still finds the roots without problems.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RootSearch", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Zeta", "[", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "237"}], "}"}], ",", 
   RowBox[{"InitialSamples", "\[Rule]", "700"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "14.134725141734704`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "21.022039638771545`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "25.010857580145693`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "30.424876125859512`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "32.93506158773919`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "37.586178158825675`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "40.9187190121475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "43.32707328091501`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "48.005150881167154`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "49.773832477672315`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "52.97032147771445`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "56.44624769706339`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "59.34704400260235`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "60.83177852460982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "65.11254404808162`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "67.07981052949418`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "69.54640171117397`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "72.0671576744819`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "75.70469069908393`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "77.1448400688748`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "79.33737502024937`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "82.91038085408603`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "84.73549298051705`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "87.42527461312524`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "88.80911120763447`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "92.49189927055849`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "94.65134404051989`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "95.8706342282453`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "98.8311942181937`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "101.31785100573138`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "103.72553804047834`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "105.4466230523261`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "107.1686111842764`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "111.0295355431697`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "111.87465917699265`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "114.32022091545274`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "116.22668032085757`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "118.79078286597621`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "121.37012500242065`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "122.94682929355258`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "124.25681855434577`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "127.51668387959648`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "129.57870419995606`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "131.08768853093272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "133.4977372029976`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "134.75650975337388`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "138.11604205453344`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "139.7362089521214`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "141.1237074040211`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "143.11184580762063`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "146.0009824867655`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "147.4227653425596`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "150.05352042078488`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "150.92525761224144`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "153.0246938111989`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "156.11290929423785`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "157.59759181759404`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "158.8499881714205`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "161.18896413759603`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "163.030709687182`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "165.53706918790044`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "167.1844399781745`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "169.09451541556888`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "169.91197647941172`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "173.41153651959152`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "174.75419152336573`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "176.44143429771043`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "178.37740777609997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "179.916484020257`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "182.20707848436646`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "184.87446784838744`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "185.59878367770744`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "187.22892258350183`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "189.41615865601693`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "192.02665636071376`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "193.07972660384573`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "195.26539667952923`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "196.87648184095832`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "198.01530967625192`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "201.2647519437038`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "202.49359451414048`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "204.18967180310455`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "205.39469720216331`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "207.9062588878062`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "209.57650971685626`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "211.6908625953653`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "213.34791935971268`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "214.54704478349143`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "216.1695385082637`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "219.0675963490214`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "220.7149188393141`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "221.43070555469333`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "224.0070002546043`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "224.98332466958232`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "227.42144427967932`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "229.33741330552536`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "231.25018870049905`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "231.98723525318027`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "233.69340417890834`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "236.5242296658162`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "%", "]"}]], "Input"],

Cell[BoxData["100"], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RootSearchSamples", "Section"],

Cell["The usage message for RootSearchSamples is shown below.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RootSearchSamples"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"RootSearchSamples returns a list of points where the equation \
given to RootSearch was sampled during the last use of RootSearch. If \
RootSearch[lhs==rhs,{x,xmin,xmax}] was evaluated. Then RootSearchSamples \
returns {{x1,y1},{x2,y2}, ...} where yn is the value of (lhs-rhs) at x=xn. \
\\nPoints where (lhs-rhs) did not evaluate to a numeric value are not \
included in the list returned.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3569557628-8744552"]
}, Open  ]],

Cell["\<\
RootSearchSamples is useful for monitoring how well RootSearch converges on \
roots. An example is given below where only 19 samples are needed to find two \
roots.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f4", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"f4", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1.5", "-", 
      RowBox[{"Erf", "[", "x", "]"}], "-", 
      RowBox[{"Erf", "[", 
       RowBox[{"2", "-", "x"}], "]"}]}], ")"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"Abs", "[", 
       RowBox[{"x", "-", "1"}], "]"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"RootSearch", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f4", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "5"}], "}"}], ",", 
   RowBox[{"InitialSamples", "\[Rule]", "4"}]}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.5178907607442612`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.482109239255739`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RootSearchSamples", "//", "TableForm"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"-", "2.`"}], "0.07444771260806783`"},
    {"0.`", "0.18566056311649695`"},
    {"0.37699058170317434`", "0.06202635626182816`"},
    {"0.5164781980952233`", "0.0006431180227999398`"},
    {"0.5178835304463827`", "3.2925046738016444`*^-6"},
    {"0.5178907607442608`", "2.0566202243481455`*^-16"},
    {"0.5178907607442612`", "0.`"},
    {"0.5178907611260144`", 
     RowBox[{"-", "1.7384144595800483`*^-10"}]},
    {"0.5661239350279699`", 
     RowBox[{"-", "0.022076111453626226`"}]},
    {"0.7532540119511856`", 
     RowBox[{"-", "0.10576986624416759`"}]},
    {"1.261206570896226`", 
     RowBox[{"-", "0.09965669932188817`"}]},
    {"1.4819152629230996`", 
     RowBox[{"-", "0.00008833470070925917`"}]},
    {"1.4821092392557387`", 
     RowBox[{"-", "6.855400747827156`*^-17"}]},
    {"1.482109239255739`", "6.855400747827155`*^-17"},
    {"1.4821092392598716`", "1.881944613285733`*^-12"},
    {"1.4821093895543134`", "6.844244377966415`*^-8"},
    {"1.4874256244630302`", "0.0024190808681179496`"},
    {"1.690199160794438`", "0.08932820212090398`"},
    {"2.6271443096376905`", "0.2210666064150156`"},
    {"5.`", "0.027473053731563526`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RootSearchSamples", "//", "Length"}]], "Input"],

Cell[BoxData["20"], "Output"]
}, Open  ]],

Cell["\<\
It also allows you use you own judgement to see if there may be additional \
roots that were not returned.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f5", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"f5", "[", "x_", "]"}], ":=", 
   RowBox[{"3.2", "-", 
    RowBox[{"3", "*", 
     RowBox[{"Cos", "[", "x", "]"}]}], "-", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"8", "\[Pi]"}]}], ")"}], "^", "2"}]}], "]"}], "-", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"14", "\[Pi]"}]}], ")"}], "^", "2"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"RootSearch", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f5", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"30", " ", "\[Pi]"}]}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "24.543200825536683`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "25.722281631900007`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "43.392756747075445`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "44.57183755343877`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
If you want to see if RootSearch missed some roots, you don't need to use \
Plot when all the samples RootSearch took are available for you to work with. \
 The next cell plots the samples taken by RootSearch.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"ListLinePlot", "[", "RootSearchSamples", "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJxV2Hk41F//P/Cxtcm+zKDsEVpsidB5WrMbM7a7IkVIslSyRVok2oQsbRRa
EVJpYSgtM2RXoqIihbQoS5a+8/n97vu6v9/zz/t6XOc65zp/nNc5z/NW2hLK
2MpLoVBieCiUf77/aXk5/zQ2UaxeMD3neDsJ9P6aonz+JSlz0Th1jdJHlj27
Y+V2/DMZ8BnUlXAYId4Lwoy2qo8Tk7ffuiytfpFwJ9lQ5e28GB5tJhMmk6Qm
5/6A5KP5aDuyu87GYZb4Jz4Z8z0rijyGXZf2TR4ol18yeDQmAf8q5pIVKvxY
kVlMV0qWRt0J1hO3yjnInjE7q2ZOg5KkUP0Cs/kwPGm1YWcDDTcSim0jKwWR
55jeEbWchv7CkeBDxsJQddoeGR0ujRzrcKEHW0Tx9q35sysPJLBJUClyQ4EY
TNsTzDW9RbFXPr8yckgcrGD3orvL52Nna4BBgK4kFozGlvDe4IG3KWTsg6Sw
R3y5zI+YMZJWdD/Y4qY02peUdni2DZDuZasv5o9RkXBy59Ccn+0El5y8tSVo
qJkNMN8V3UYeVI0qH86noTQ2ugyHG0iUvbVA2RANFFbmwfsqHOKRFrrnqYgM
fFIVDFWusYnB6+yBbj0ZJJSkXcm4yiZTUa6/MiNkEdhSFbDW4hVJY+CeG0sO
i7R1uvZqD5JdKUdqHlMWQzrBT0N2YpyYz0a6ihF5mO4cOHOxhBcv+IuV5PYr
wMQ3Mmuj0gJ48NRr3PNTxLNW0mHQIYqaHMaWU/OUQPNJfza+QhLBy3eN6xUq
4adhvtKJUmkYVbELCm2UMagqGF3OoGFoYr+P3bAyKujL99zn0CC16Y544xEV
nOy3Or1bloYdz4KPtGuowvG6EyPcURpO368sam9Sxd1Hqsri0RIYP1u1Yk3w
EmT0spuUNUURvNs29b64GlbxZrx9cH4eWh4lffepUMM5gbF+IUMeaD8eK21l
qCPwWaC0TfJv8l5G3wtj6ghb2at0Y8snIn3/5iqljKUQ1Zk4qqfQTiKezNrR
7i4F/fSTizPjzaSMkjiRO7EUPgpqlQpdHOIsb9PkK6OBmuyhj2FX2CRG/s/w
jiUaSI3UVGk/yyYF8kULonQ0oGi1JPfUUzb5aix4WX2NBvLyV1aozuWQJZ3V
CzNfaaCSduNWYE0nOaOW9WgwWhM0o+SpL2ZDRFqy3XlUTgvyjwS7czkTROTU
TX2Hai0UR2+JOejIh9pjXjbYuAwuyzR1nl1cgFexrKDjPMvx2q4jrZ0qBtbe
UnXzguW4OjB5celmSSiKWXVtMV+B+LfeDpavpTEu7flSY2AF4qiRzi6BNAR7
7hk3OrgSNk4iOgZsGrSuhC4Zl9SGni3vw0MTVKwQ5U1Y7qsNTqNLT6qyND5s
WVibXKGNxN45vMXOEohZRjbc4NdByEWho9rPRcD7tmx8jYcOWs89vMe3eB6S
NKTKcgt1cMEzZ1hmjMLdl/tFPo/rQOAPi2/66i8yuODAsOM6XSz90f5x+8V+
MnK6hCSf0cVV6sKYf6W3klPtxxfdKtFF3l2jNSGjjaSGmcli1esiIeJXj4w6
h0RvsD1wvEEXpQeevJ9L5ZDA8TL2tjZdaFcXFJnfZhMfK/+vr17qornWoeDl
BTbxSJcVs+7iju8PuCR6hk1GWi9safisi976j15+thzig6JlTCM9fH9Dz18i
00WWVgrJjaTogfb8xu/I48PkXne7Y+kbPUSpFT1oezJJDspTFd9o6eM6mR+w
4SYfkjv20L3i9RH6mrrScYMgqk7UrbRq0Mdhcz7VDUZiWMvMuV2xeBV0vn55
UxInCYsLX6dzQ1eh6I6qy4G/0pCucQq9ULMKeRvjGq9F0BBhM1RQL2KA3QUb
HCSe0KBTMLo1zccAeXvv5KsPUlEs9DK3r9QAP0dWbZWYkIL9ruLY7XyrYbL+
X/oMPglkWaQPz2WshrG2sKDnAhFIDPlv98lfjZWKhym6g3NgzOfbt3xsNVoa
o2OM9kyTF/Hz6pssDdF8oe2c0ofPZOrXDf/aZENQ7JclWGqmkKqmSW2Bo1z3
yjKthY1INEdllcg/plDoh26Er/39MuM/plBqPEzlXv0vc5uhg3GyQZYheu8q
bDt1uIrVvd5GoOyTISbaK/zSvfpZS07eEz1laAR6oWLWgT+fWbsddia8PGIE
xctSs2e8u1hSB0d3DlQa/Xu+4YestP+6+fRjU51g7dj/bxRJnKlY2yrNnJz4
x6lOL2oHrUgCxEsUqoyAxGMySU6FRE4trtjptRE+N6gJXMzvIDvD3lZFa6xB
ZvHYsYNffpEtzQY/j8eswdKpoqM+P3gxsvqEzixnDapqzzwVNhFEXNnH+cdl
jfE1v1n9mJ8YJi5MN74PNkaOUNFHvduSeKo6vNfsoTF22wd8UqNRwXvOd9ci
YRMcC150QOogDQJPLCrXeJmASafTN9fQUCygf6qlxAT96tnhY01UaM117tGh
mOKrgPzjdU+kYLFbbIblYgpvRxHkt4ojcxnP5S2XTJEeQ/E2zxWGZkzt/Ovf
TcGaeTfOx5yLbo3Ld7eZr8Xqy0oT93r/Ej5b03TltLXQpaulinqOkns2o35d
fWvRZ2wROLbiIzl8e5PO7VUEimr5+u5vm4kPTd10nSuBz0iY99iCepJgKk46
PblOQ+HNAxyybZQp0+lLkGDdfSn7Ppswrp0efRVCkJfWKvCJez5W+/3665lI
0BvueOzCnXrCp5h2QukVgQ0xcX7b8ZbMVvQuFpcESiXCA5ip34h/9vRQnDGg
fmh1cIflFDEycqp18wOEfvrWPn/MjyPDRWOtRwGJAMG/iUoLkax9mi+8AqgL
2Wf//J4YFFthWvUWEOF3aRn8LgmncZcLT/nNIBMq5BlsQIVeV90VnhVmUNGK
HKtMpYF1OmQk3c0M7vb7h3ru0RDW4JsmHG8G9cYlo5mVVEiIm4p6XzGDYf7w
3sgMKRTv8LEMaDRDmLhO/+RdcZxUDFv1eMwMZdc4tsqbhWEjW+wTqGiO3+8j
3fzOzcE+ia1ej9eZ43r1H9Yl6b/ks1zAnqlQrp8FvGOe+UmiZtt7vLPNEXzo
i/6uEx/IAwH5v2drzRHmuf7kXqVm8mqfriyjjes76Ya5ghzSQlktb9RhDsq5
y2fkm9lElqW4wb7THM2H9z18c55NfOMWZHt1myMvU++zTgGbfIv5ILXtI9fP
BncO1XBIREo+TWjQnJs3rhpeamogiiKlqbXiFvCcO9nEf6uHFM/Q3imtsUDN
xsG7WWu/k81dPH52vha4waebeTVkmrQaa5gUpliAP65ObVhVALdGHho1llsg
Me70l678hTgv56Sa322BzKAIvrFJMZjYzj0gx28J/g+kll9aCqu/novKWGaJ
eeEutOZNVMgpVX+aYlqi73LMWE42DW+kTE8d3WuJePsirY4yGrdOF1wrLrTE
2s1ZgYzTVGwyjO3rfGGJD46nd//eLoX7wV9Mpn5bgsF4zLL2FYdF13XrisVW
2LV+Xmv4ASHUy/8rqcLaCucaqpc36QigMLTU8HCoFTyua2kz106S+3sHeDdk
WcHSJtYpLO8DuSrfWzxcagXKyYwAKdWz5Lh8nOiKcq4TmKn6j7zIkN/8l1b/
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
NNYDCd1Jb5TjXxLrwb8Xuk964D//4/8HuKh0fw==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  Method->{},
  PlotRange->{{0, 94.24777960769379}, {-0.780579848452513, 6.199931968093049}},
  PlotRangeClipping->True,
  PlotRangePadding->{{1.8849555921538759`, 1.8849555921538759`}, {
   0.13961023633091124`, 0.13961023633091124`}}]], "Output",ImageCache->\
GraphicsData["CompressedBitmap", "\<\
eJzEvWu0ZldZ57ub3IBwMYSLR7tteowzzuVLjXHGGefjOW3Z3d66tUBUQAok
QiIXbQsBsVS0LVCsAK0FXkoRC4ESQgVCgKQgUATCrbgUIRWSEqiQjViQFFBI
IWyhxHXWs971m+u35nremTD6Q+8xctlr/985n3fOueZ8/s9t/sRlz3na5b98
2XOe/pTLHvkjv3rZrqc9/SnPfuQP/8qv9o/O+1cbG/f5vzc2/tUTHrkR/99t
bPCv6ef/iX9tbDwg/nNeN/vb//Y/6U8XzP/0v9Z/evHw4LzuzJlvdn/8sg92
t9zyxRX8T+r2Xzoir3nTJ7t////+efdHf/j+jaePz26++VS357+9qzt37jur
T/+f6z79y7907fDp3/rNd2z84vDsgu7zf/cP3ROfcNXwPP750pf+cU0rLxke
nB+I7gf/vxX66b94DQ2976Y7h0e/eMWbhv9+5jNfvoeGrj5064D86Z96bffT
j3ktDb3trSeGx6959ceH/370I59vNnRB98ynv7l77M8c7P77S97X/dAPvqL7
l3/5l40rxr8dfO3NQys3jeK984bP3ENr//nHDnS/94J3d6/+62PDJ/rZKa39
6Z98aHi2ufnV4b9vuOr4mtZWc3th953v/MswWi/b94Huuuv+dvjUpz/9JRr8
g9+/sfvRH/6r7pvf/Pbwp7/48w8vGxwWy96xwbNn/2lAHvirj3UfPvp3w/9/
6IOfo8Fff97h7rE/+zdDG//pP/xl9+K9772HBk+d+trQSEzHHSe/Mvz/W99y
ggaf/rRruisuf9PQxs885mD3G7vffg8N/u3fnh4aefvbP9X9wz9sDf//qgMf
o8Gfe/zruuc+5/qhjSue+sbuGU9/8z2M4Uc/+vmhkQ98YHMA/scfekX3khff
RINMWPxEwz/3uNfdQ4M3vvuOocHjx784AGPx9AN3+fjnf/7n7wx/jncyfn7v
he/ufvxHD7TbvPbNt62Wxp1nBmD/tbrLn/LGVZsXDe84qzp+WEnf/vY/r4T9
P9Y1/NrXrFbwl7/8jQH42791Q/foR72Ghu/s+4s/v+Xa24c//83BFfz06X9s
NnxR92d/enRAfutb/zwA9/3RB4al2n/9jaeOmE/c/IUB8973fHbAXD8t4Xto
vV94wwLkhxcxNhhaj1bjWfQSPx/8wOfmr/za1mMQfupRrymtx1qLT544cbq0
HiMSz+4cZ+T22+4efr/hHZ9etq4VfFG361fe2j35SW8orX/kw5/nPSutsz19
5SurafnCF87Ot4S1rT/lF67ufumZ15bWP/nJu4ZPvutdnymtx9KLZ/2mPmAW
+8NiZJ49PDi//9e57vSpU/1rfbrb6rqHjg3GEt/9628vnWrZbDxmwJzXdVtn
+o/1Hz19duNB47N4seIFi9/uMz774f/4yu7Kfnrjt0eNz86c2ux3xVPd2XOx
ZlfPtk6fGto7s9VtXF7E2+qfFWwGfVz91X5xBJ3bvLbbNpz82/qW4vy/sDtw
/Gw3/znV7d/Zixp/7j+9Y1+3eW54vvGQcSjiVf7937uxfODuu78+DMXr/uYT
Gz8+YC7oju/f0Y1KxvDPvmNnY4CGv21tHu526G9XHDi28cBRxHH/mQ3Xz/70
sGsOv/3k8O/+W58bxFQf27uDx8+cT/cHd83+dOjE2Y2njB89c/zQrPv4+4Gj
p1sffWw+ovfturPHup2At+/u9u/f1+3bu3v4fe/RM+eNXR7dt314tPvQse74
4b3D/2/bc+Qh4xdkv3z5yz5QvvQ//uO3hmev/MuPlkHd2jzeHT60b5jDHXsO
dZtnz434i/p/bXa7B0l2dodPnOgO7V51uf/YmZXcfZuhWvQax2xw4wSJIyp+
+wm+Vf8KHNm9bfj8nkNHuxPHDo3fcld38lxHl1snDq6++BUH+n3jSHfFBNm4
jKbOnVw933ZFd+2xk93m8cPdrm0rMY9t3aumfrYe/KeNHzpz7MDqQ33bR1db
VHfm5Mnu9Nb09aL/XTHau4+UZzft2Tb0f6Jv/JLx2XTOHiu4Xg0anvWqx8aP
lO9zqju4b2+3b18/0fsPdAf27x6mY9sV+7rjp8/dZ4SdPb5/tQZuOl3eqj0h
6q7D/dh2F489hKLx6792eDYhwxvw+NdpQmJjOT5MgL/FqcOrZXbgxFZZBKtv
tiu+2fBz9vgBxBhn5Lwy1LuPnC5tbY3i7jt65l61tZiSlS59fnf2xKFxh9ne
Xbu5dT7y969JvHK7Dp0sfZ45um9o79DJrTILn//8Pwwj/sarbx13i/MG7S60
vPjth0t7R7vtI4VZbWQXd9v3H+/4We0+O7pjZW872x3YEa/o/q5fKBuM/4/9
yF91LxrbRq7f/Z13dTt+4q9n43/u1Grj3HngxIh7QC//3nFnG5de3/L+7as+
SrfjvG3fd4zh704fGZs6Xpo6eWi15Rza3Lo3TS1G/xnj6G+dvHYclp3xQjCC
LMb9x8+Wb8mzXvoy+idun853PvuYR79m0BWm0b/vsJj3xju848BKvHF29xw5
2W2xPZznSdiYP9vb9W/Fxv3HZ70GN3Tba3SlWyk/4yRc0veyb9yUd3ZHNs92
586e6PbGpEYfDFwv0DByu4f3rB658SW4ZBjhQ7tWO9yOXXu7vbt3rtreeaDj
jb2nthbT8MxxGnhTNnYMq60e8nuaBitLjMcTd17VPftXrxt+W21FF5YXee/R
fhLOHR9mvj9m+cj64d/Tz980/F/+0jeG7nr9snT3J3+8Uq5Dky170JmjHHUb
543Kw65DJ7rpZxyuPUfK5qvR+oXx2anD5XgdlYwLux0H73UzHvQLprUfX201
gwdPbk2b/7hN7Lp2c9p2xlV08MS07Rx518nh637y1rvKEDztimvKWfmjw78v
6M/EjdXq3ToxLPiYtfPGl6IMt1biwZ3lHWa0P/e5FfG95prbSlfBRONZz0zH
0e71m63VO7Vxxf7u6NEj3aFD13ZHT56ht3u12VwyPNoxnE4Hx2V9ZlQMtndH
y+eaTS1H/HJGt38rjh7Y11174uziINlbDpI4gk8M5/m2PTeVZ0f3bh/e4+Nb
0xH85mtuwzZQhuZXn/W27kn92vcslFntj9+d1SycPVYOsvGbnF5tVVdcG+8w
s9CznKGrd2inu+r1twzP7rrr6+MsrLjAShHa1h9n51bK9kXjo93dJqM1vol7
jpwqxyyb4hVae2eHI2MY+nLMttpaM/Sr6d+3sdr6Dh092Z3aPNbt2bFSQ3s5
zxvbXh3h/WwcPt6duGk1MqMGUkYdGhZWGobi+f2GH0al+O3HxqHgjBp1SrpA
vwpN4abNze7w3h1lAXDKfvzYqaGL9910Z+nirW9ZGak++9mvTDp92WG2dfsO
H+tOnznTvxNbdMVeuX13r/luHu12j2pkrKFJ3VyttdDFj272Hz/FwAy4+9yL
ptaom/3OdfRAUTqgR3uuLTvXOKMXDkOyd7v4xbbd3YmtDmUfw0WYGxmN0G9C
F/GAF5VxtcTPH1s/e/zgqGGt/tmx94g1yve/b2WmO/axvy+tl+3tk3f162UU
8vS0YjbGMe+XJRTt6Lib8s+BY6dH/nRe/8kDSFDGYf9Np6pxyNtYECkUx/40
706dPNGdOH6iO3VmfNPiO5/tTp443h0/cTI2p0tHEfb+wXu6H/lPr+RVG/4d
BsL4lmG8/PHx2bkzm93JzYHHx8YxPjvV99K/ECdPF9bZazwr68ftd5f2+uO3
2FIePYpzevNkd3z47KloE/X2zOaJ4fHmmXMTT98600vef6ETAyG5MIEuePqV
I+i3fvMd5f1DnJ4HDuJ84xvfKmdptmPecssXh2fvufGOlaHjf1/XS+ytTxz3
Vj7dU/hi/KKXvzk4PQP3mc98eXh2/XV/ew+9BLcM3uleMCxt3nmm9OLvB65Y
Vns60O4ljE1hdHIv73znZ4ZP33bb3aWXnmEPz77znX8puK9+dQvL4j30YkME
n7bJjV5ief7oD8+XZxgJA7f/z47OernP+NaEo6P/1//VbYzPmn+aZPu++L/7
lP9b++wRoxzYGnoVb/X2cjiZez2s2RRHR7hDwhY3Lvjh32Hh1kt/b6X7H3l2
0f/okNjUMhuSsBjHH177mpvv5ZBc/pQ3dr/0jGtnQxLv2P/sIfmVxZe22s8+
9o1vrIykf/mKj6wO5dl3Cy/Xc559nb7beYNjIwz18dtPF0F2lf974j0L8vd/
/7Wy7mg2nD6jAyER5Kcf89phi7Qgv/LLb+l+4cmH7r0ge8cPnjy52smu63cy
jojR7zP8hj73X378VThJSqfP+7XDxVgZ/1r6NemlZxZDL/1RXHr5yf/y192e
3z0y6yU8My99yU2zXn7nt98Z/op70Yv8PKUX2a03njw+8x4AzirIopdB+Xzk
iHzDVceDvgy/8eyf/unc4A4JBvXvxmfh4wtl5ytf+cbGvxmf4bDoVcLSc6yr
Z417N7h+x++ue9uJWR/9yRDm+6EPcJjt4tWlvRi/7f/+L2btHf3Q52LnHZQD
5OsX3OCOcR+xS8f3+MTNXyi4WKB//PIPdl/84tnyrN/thxOrx8/au65qL8Yl
3EIf//ipWXth/Q/V9+J6kP/tCOqP7+GLPeonX10+GA3Fs/6lK8+Cosaz/kuX
L/umN66c3Lf3B58HGTr7r8flxWT80A/+RbgzHjk+/qtXrk7iR+94dSip/3ps
4Y47Vq7Nvzl4c2k1XpLRA1ZaDX9O6GbxvB92WsW9Hf/0I8DjmNB4FC9D3xnj
Fh7pePx7L3z3BtBw5YTnZPC6vOV2HuNKjn8+9bdf4nHMeDwKU14/CzT8+tfd
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
4AqHEVd41E++euAGrTUW5sRePyyfYS+K2I4yh3+3nMOnJns4tDT2GL6T9fES
9yydmjmUaaTMtfVZ1kSMN05C+sXq/6oDHyvyxV5Uv/8O2qS9n3/iG4b93mtM
PKzIh7Mx9ne+R1Bbos/4vr1+NPBG9xvvT+jSkeiJfPE5qHFJj8Ag2a9j2iOA
NPYi+sXAEbo5uCx9yOGx4AjziayTkhxzZjJDzd6BMWYFHKG1EUVDe6EXhixR
WuNBWmOYq545Wrs7nVmj0WzWdnammq+CI6ghrC7IgMkk1iffnSz9OFOZw9On
MR59osw13qMIfkS+OHfDje9+VZCiyBfzzNkLziF/tOeziH6fKTsa8uG16PfM
8j1CJwrnm+dQvK/ggkvwroOLd5vzGPlUqqLgJqPaJ0p7rjsALnsHRs/3rN8Y
k9BL6vHDnsL4eX2COzbq6jfddGdpz2bSbI3J4jabw9ChPEbjeTrDsX77c7vg
rBchA0EMwQnBESIfY8QcslcG/2CuHXhJvz7/aS/0Ls6E2p4RhlFwziYDF+dB
rAuvsdEzMVtjBP7EGe08FPZjvu/A/54wTxMYfF2jDQJc7MUEzdb7ca8PFFwJ
uH3bidKe3J4FZ5sXuNDR4WDgwoVHeCy4OHdZ7+BGd9hMPvTjnnMWXLF1X3t7
usbGINnZ3HgPd+bs88c9C5zPsUWSw6FbF+9X7K/gOFP78StziFvs8PWfGmO+
V2t79CsVXOwbcCray3gqbsfggXV6RMQigbO+wxrL9MUs3SJCabEJ8X3HMjYz
+exfoF87sMCFHTX24/4snN5R8cDzqmfeT6wHgsMuEtwanDkOuOCu6KStPYQQ
Zb8DzojzGlvpY0Pgdzm3+u/Mx6zG0XxY1lFREINlEWYhcBxvk/l7yvYJGgEO
Z0YkkDGN9ruzzOLYxqQBLl4NzN20F1QrYqssH0ePtwCbesGN6sRsmYWnIsbB
/VqNoD2bDPm+j1O5BXA2GdKv1QOi8DOTISbUfnxKe4Qjv/maaUuJ1zFeS/fr
Ix5cHIPPqrKYQl5eK/q12d2vwehSLu29613jNnLrXWuXGZGL/RpYrOL+jeLr
+xQFB9sKLRWcLZfg/MYjrrUjptGaK8ssdvLY4eO3762Xyss+WPoNpltPo2ov
FZwtcbRHAYLQrOnXJyHyxVSMESvle5ipMexeKuBsrcxeA+SLqSZdAxzu5/AC
0J5Tk1onoa38PgnjNTLuSoVx0a9PR+SLU230IhScT+p1y0wnfHYY0nwoPUGI
3bx9nBajPlytHPC1TFiZRirZhfOC6Y6lQ5AVy8Jkkn5dzYl+iacLB4+nET8p
7ZnY0q9JIvKZENS5jKFw06+rBtHvH8nxCa4orP1hA87EFhxBWLFj0q8PXB+G
T64OQxvWaS92JAgh/dpABy7qL6JQgwujAgoBOA7miCpct8zYQnqCz8esb9K8
dyRwHIZ33/31aZj6wzWyHC2GeVipsDLVFCzT6KhFpnvQ9UdbFMvC+h/9Wm+i
XwIow44NLnSQkVeX9kjsi8AI+sWWE98X+VxShO/hHT07bOppDP8IOLvzS1ae
lsr3Jd/Np0b4DIx7ssYK+Vy3AVz2mrIj2U5NzcLYCX1qPK46XB18vm6Zkf7c
r6nadRNuN5q3ewscgWQxdOAcX1XM6lNIbnXGr94optHuq2G67xPqFn8tBse3
f6r0hvMj4qzorRj2v3A2lYrFpSjBsrj8TtNvaGiQrYxM069iXEq/Nm6DIzYz
viW4IQbyMa+djVrsz5wf50sWjjtwj5ZaUc4KJUCDM8GmvfIi9ucRONSAyFEB
N0aLz/od0otWMYFrFxcvcL96+JhT2WkeP07wQce9BBeKGAJwDtcF5+0/Gyam
G1typD4y3X6nwXn7pz1Cj2JI6Nc2R3CxTFDoac++Yvot8Slf/kZZZua6TKOX
FP26QmQZP/FpcCoVOk2jbNTgXKMNnCL+5j65Sj5sWObTJUbnxjtKe6gp4TNs
jZ+qkBZcEC6KLqxbZopdqRXNCFmgeZtZM7MtOMJEfGRZCwJnMzvTba7GdJuX
gXuPQpBoz8VNvq+Sxa8BtY3dnl2S9GtlFpxNb7SXTaMjNss0KlQGnN28tUoS
pvzM7XW+n41hU7wGDm0Dx/RGVbXvS2QBZ1MEOI8VOEf4z+Z31JozU5lNgsiK
+zHORNouJ8MN08kQZnJizcFN62SSwe4zcGGKC9XNc+0YUuY6TgBcdOCont2T
s9IeoX1xtrfegels/3Zpr2i3/fjSr4sfgbtb7ud6Dm0udqHeMocfX87hatt6
5Uy+7OQP9zBzaLKPyZd5s5qa1UnI9BHas9uTfu2+B1fI9Of/YTa/hKtka8zu
DmSwCY+2Mze1i0aAc/hRZocC5xpZzKFLEDHXwUpZJ+BKJrCohjW1mbYwqqdF
O7pq0o5oD3dh7Dv0iwk5TOrgitqqrOQxK2E2fg7zoF9nYLTe0atHu1avKc7C
nwgvyKpaLEJE+n0A+aypgZuY6jdLe9ZM6TeoWz2/WXjB6I5arLHzXAzG5zuC
mL7TAVww+Ij1LXgkONXuLu35oGEASDL0AooEG6w1TLiNjOCciEe/xDlE3BTy
hS741DHedaHm9nwzO4Dp14cKOB8qfI/BB/Eb85ggU4fvVj7HXNbxKS5s4rEC
55g6V8iAD4OLFxqlZjr4Jz5s/w8+PHCuxEZ7jmN78LqFFoFJnPp80Hax1umQ
aVy2r9QO8CjZnWVtfq/6xWzJhLs4KLjsRcgc6nb0Fg1z9DhExhHteXLp98My
TmQLku/hyfCLOgbdl37JNAmtCfnGJL65fNKAac+2S/q1VgcuUsLjWQRMggvt
DeX83syvNThX81nMb/+y0Z6rO61daPFFQx23IPbiIbDL1YPL1C6ikcMbCc6Z
Q7RnYwMT6eO0NiyEqQSc7ei058hH+o22MBAjn91YtLcwn2xM0YbhNwBnlc3V
XDDR0K8jMugXQ2h4BYsBYsdkIAFnFkh7juDMkm3BZUmTY5rycn5/Zp7Cmanp
6fx+ejm/GEjC3bV2obmeIR90yFQ56xNdzmdzdtaDc7YS7fntYyJN3ZlwXUVR
cOaftGerFv2GhQdXOPJtynFCe1709GtzJjiHZ9KvLV30G5NLaBI4ZU9p/KaX
A/kwr0ToDzg7y2gPE044t8Bl9TpswgHnl2OmyyXzW8tnrpHphmsXmouY8UHr
XggSA4cux8D7hhBwJvklxvRDS93BthraM7lgwq1Yg8vyKH0MgfNxAM7HEDgv
Zvr1LgLOscilCJxII993UEdGgwM4O9InI8l03IOzmlHcb++d9F5wJivgsGW6
30yXc/xppsshH64sz69vfaA9svGD7K9daGZ6fPBx0r3owIEtCOLMVXAO7iyB
pjL6gjsmQyvtuVI5E257OTgvKtqzYg3Oi75OdIvFB87HM/2aZWdkhfbQIe2Q
ivHDBwvOCSK0Z4IAzi8v7WVHtgN/wdlvPOlyk1EVXJwGs8TDmafFDvls1MBZ
Yx2X18YqAHss+b5x/mjZUEH21bqbrUCHLtF2KEZjuYoig8N3GUGfT8TVOCQS
nAMPsrQlcHbVsRLs/gSXpdjZhgDOJnzkc5o6pUPNROjXKYy0F31GxID7tQ2B
8fP5CS7icVCSac/2LOTzObuw80gpsxJKv4N+NJ7vLSXPLhpwttW1xs+2OnB2
gbAW77dacedOd0cOHeoOHVrV2N+2c2936Nr+9yMnhurxw4q9UDWlwnzpprNs
JHvOweGZiTggRA39mWUMzp4Z2rNzDpwDOWoLRZw44KzzugQqnp7MRYB8sVyJ
pmQp2mROvw65oz2/jrWaFZ6yOsYposzp18sYnE8rjx+FZcHhOQpLC/3CzawG
OlI4kw/csJyunI+f44/o1you8lnNB+esr3Ep4jCLG88ObN+IC35WTXjdxXfw
PPiUp7/MBGtjArjHJUE7WekJR1hkW1tmsEC+KdZsyqByRMRCvg99Ls1GoT1n
pdKvDUO050gWvgfhgaFggNN9k6VfR0SAc7QHOGfmgyMDPLZo+vV9cawnu7XA
uSp/pgW35ENRighgcLbggiMKPjyqi3W3uokmLkFZrLuxMspUTlvHP/1Zg6U/
sgcjJLPMq4pjgKMagMfD1mFwjjXM7BfI56Ic9JvZV+xOBWcqR3uuNHHf8Zn3
fHDeK/kemSHPlJ5+bVAD5+ALcDaYgvOayMYvi4LKlMQsGJB+rcSCc3BhSz67
e+9p3c30vmzwfBDSqXl6ZuwCNxSd+YW5r9RGLHBDiP3oA2Ny4xAgbCuzaYDL
9BHfKlHrmxF/AM4+sEfoGWFbLD77mMBZZ2RyfaDTrw1b9Gv9C5x9WyW1JomS
yko62I4FzlGsyGcjIDhfjUp7rpYFDntXuGyy1B+/HEQmfVeLz1Hb5YS/fTLM
TJM7GbEmw9Y04eCep/oE4IZI7sfPaxZ4ch8+PuN2xgh/ZRH4UlYWQabBeaHV
GmbYTcA5dor2TAjo1xoN8vkOA9pzODL9slvHhS3grhHxqu06sSDBZRqXDZzg
nE8GzskaLD4bBsE5fpb2eBEcJPPG5OXInOSW+btafJkRyzcetCbXvq0yudrl
MmNcKWag5Ekm1448FoHfUhZLpsZlao2TVMHZ8fsIyzcWLqBfq63I54gg2rPj
kn7tCAWXqYVWg8HZrgMubDXYk8A5woTvwcsbKSbgnHxWXg7thuAyq77ZPLiM
zoXVHLa8WHznBpqxLV181lkz5yOdOjMWnIPys8kFl2WgO9OSyUVHj4lkEVi/
Y5B9rSHt2StdDHTK/QDnW8poz3oq/TplCfmy7GpXK1vompLvaKLe2Lk86YaT
gQ6cHb/gbB3me9hSnWV/t14OJ3vUL2/I0uJ0dvxibhnww5Vxe7Zv73bt2T1c
Mbdj37HlEszMCbbg0LX91eCct9JSr62RXCixyeBjiv2u3rfIN90exFA7mor2
HK3mQ4FoMHBOUKY9Uzj69R1EyGe3JJqp3di0h404innQL9GIESxcxu+Fy/HL
vIbei8HZ5EO/TrRHvtFFPMNldMz5PBldBGeTz8wHMG4n1RLsznSH9+3mhsNu
296jyyXoXNvMckPXdiaCc2RBS4nNcoutZDPFhVT0U8xSKDpXv8swhI4bpz2q
z9rxakUZnOPfac+1jejXAafIZ0M5U2wD7iOSPug3s2zaCdzSE239A2cDM/06
UdVJvRjAwdmVRHuO9CikUbpyGb/XL4MVvcWMS7CEzp0+1Z06s7pz4oKy+Dig
M4bnq3Pp1HcT0qknqCixShKiPR9TDIqV2IcnfdxvfObUV3B2stKvFy7yeQ8D
570J+ezhYfE9V5EA9OsAPL5H6GHPq/Qw77F1sR17UBwq1NITPQZFD1MCxYKU
3TBF3ju2CZwjZWnP0QH0mxW6cyT3tLlMFgE7d4kmjp+xUGZqqqmLXlkGq0fg
XAiJ7zSZko6V7/4iBS4wh5DtiGhhjdncB86qJP1mJmo7xcH5fEE+u0ZYY95A
6NeqJN/DY0B7ViXp1/7azI9dq4MfXmNCp1+bmcGVpKSeG1o+zODgHIRKvw4M
KNxGljJwrgBAexxCYZj4njVrbFSbS9u+MbSWwXzN7wg40xBk8DvCd3dWDHPo
eALWmF0Z4FwfelKZl+Zoc2VwvkgX+UbuN1tjjjWlXweG8D3MMWkvewcyZcX6
DzhzTNrz/NNvpo86+BmcI9vAmQ7UlMhuGheSAecbjGiP2NXIJfcamx2YNmbw
Qadd1II4uMOaQC1I+Bppz5oAA+A0GCbSpISF5oAKcNlGnk2ky4+UiZTfg/bw
B/75/g+Xfs13wRWisvnV8j3CksbByveNwxctB1wWmpC9CFYawGE0ioCZOgXN
iolNu+AcOgHOEVzgwtRbE5/HJkTFCbrgXBVz7ULLBsoqO4LYaQwuq/GSCZJp
NDYzM5GkeUd5TibcJbbAZeF5w0RWGqbt9kX9lb+A9uwgol9HiYFzmQHnoWES
pV/TJXDOhQHngibI5yt1wbnYCO05xQOc69KAM/vNNpKsWIs1VkzPyGfqUeRT
yu/aheZAUz6Yhb+5wgkD7+MKnAOhypauWE5wDoSiPb+RTHhmKnGNBg9UfcS6
1AY4T2RtXQtLJP3aPAvOak2papOo4vbughviY8faYK0X1fGn4LJiUc51Amd/
RqaigHOAE7gn6hifXtTJ+5ypwZl8axeabdt80Pqz68bUR5jNnxdVz2LSWlu6
fQO0Z38GE26bEriwjVEQ9yLJzDNwLugGzuZjcC5gSL9kkIYOBM66tyeSnY/v
G6pI/SIM5tkxpCXzrYAzX6A9m4rBuYQUuCzz1/4gcOGixzwLzibbTKVoyqdA
8bULLbOze5unAwfCIogdYlnMGe05jB+ck65oz6mlTLjd7+BswaG9zAib6TaO
zwLnK9jp18Qf3IsV01FPZIQ5ZEZicEH6aguddy9w1jVpzyoFOKeblBjAly5j
AB23CM5+HnDO1cnkm2JsJnUEXCnz1pP4tQvNplYEsWLo8h4cB5klwgMVzyJA
kfac2w/O2Wm0Z28dE+6AInC2+NGeS3KDQ7cJ3YGB8nH1ML6Hgk3p18GNGdtt
TeRPJS+q84bKTqrS58hn0gDOFivas/udfp0tCM56W2aqLrpmMs4OS0A+592D
I34ovDlrF5oLaPBBm1XpINgLmWjg2L7DXQ7OcQq1bhPB73wxB2WD8+7AhDvc
H5wXS8aushfBgUco4Cw0Rx/S7/UyBdKe41/o10UQskAmcNaFaQ82HmNQYlOU
dAXOPhvas8mIfj1HFyXfIyMh4BxkRL/2uyCfTVrgHCu0NKGt6tcoEjDjYDRv
zyc4q6PgfKjVmk1YbfharhJVcC+fcEy30/FZFtYcbPXiXaY9W3zA2aBAeyVQ
UUYVB5jSnr0fGferQ6piT6dfX1MCztcigXPwLzhri5mmWSiISkqBs2XV8o1x
iKVf3yhdez/i9QNnyxo4G6rWLTNZ+IpeoyQnmneMQs0QI1AF3BOTeA7bo1oK
uZ28TLeXHsvCCVz06/yE1mtg+WgP/ee4TCqZ/mhlvmZ+YZzOmHhrGm0zBOcY
eHDWoenXJIJlljFxOxha8pkwgLOlAFymZ7oq27plJkN8rdXEyU/zvrQLHE7g
0GAG3JCXxpd2lFuthMc+RCtOkmCSfXyyGLLF7wCY1uJ3kP/DKpzNKPbc0J7L
lWdsD5wrH9Cvay4Wz4KyK8HZw5N518A5FhqcU4pLIP7oWYjQTnDO/qQ9h562
xi/TLT1va3UyxyLUukwow7UgoeTWZ3EYWcFl8Rg2WGZshQl34R8m3KVnwWXL
34XiyvIXuwXnGF3asw2Pfs3iaM+xvEyk9b5F/MmbJqXZBKhWmiN+ApxjnME5
fmJGEirdN5PPXpgsBIr2HKP78OpZ6JvgMpJgF/DahYZlNwyqtTYTbiM6yFiX
DZbgnq+UN3BmgBlbYcJdrpsJJyAlMjILK0yUertgphdhmlxwTmmkvcyMknkM
HOjERJrJ1kpzVAarxy8WPThnm84m8lHz8cuyJ2xyApdZB8wUS6CTEgBoLyM7
NviCs7sKnA2+axeaAxDr8zicsXTgNORaXQ+DZREkCcBw+UVwvsGHCX+WjLHF
rKBDGVym1juAc6mWTi+CaQztedekXwcXgXNAQh2sHsd4UZsVWAjOxxA4VyGd
T+R8/OwIN03gGEc+1/MH52Oc9qwWgLNuCs5BV+DwLFg+F1pfu9Bczo0P+ppz
OnA0jHUHFHtwmU/QUQklsLrf4aiUxUA5+r82K0RCHLhMsc/4lJXuQhReOhEZ
2nM9Rfr1CwjOQdS056yDotiLPIBzknbGqz2R9fiZeGREAflcgf++icwPT2QB
hzXfRMGB/S0N3dxz7UJzWBMfdFQCHThkB5yjEsA5uxOca/CBc5QIA+UwLibc
0fq18m4l1QmK9GtbEDje0iANtGeDC/06FAdcpkRTQiX8p0XJVzYGOO/CmWeh
nshY9IWEyN2XkQbkczHXRWxyv8vRnrNZwWVRLA4PBMdxGkZ0y0eI52KhEWVr
RykC291CB46DpwMbRcER0RDGOnAuH5bFqdKvXTVMuHdScNYXaS9T3m0UBZeR
C7M6+rVrCpwDscG5YhU45znQrwlWSz7nEYBzpbEyfkrso1+X10M+x2+Cc8Ie
7WUGc0eigHPRqoyErF1ojtFCEAds04GzDukgy7K8JonCcNmaTOml3zGodzbh
rp0BLlPyM6XcVDwjDbRnvY1+nbkKzpbxLNgXnMOH6vGzfL4PqcX+smBfL4KW
68w3DYLLlHwz5Zl8j5/LV9xfd3xFJGnyfCxsZ6Sl2HaPIL7ypKX0OmSnKL26
5pz2HCTJANg2Ds7Fa8CVkJMb7yg4H89ZBmlmu89IA+2ZKd9/fOZ4u4eOz6zk
I59fDtpz9lBLPh9/GftbKPkv/2Dp1xma4JwxC85ZVeBsm6RfZ1Uhnw2y4Oww
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
IM9scSzyXbmUD+e+/ckOeijMWc592nMxRp45z4Nnzlznma/74ZlLWLfci5nf
2VFC9ascVgue2TqbGa54ZvcizzKmmzHn7FU2M80MVyxFDDSnuv07J2v1xs79
3anVXzYmazVrcVD8f3Gu+Hv+ayuEx9IhZy1ZnRDFM+fHZNsdz64UQ+NZFkjs
iCbkc6QXuMwgma1PmLrXXUacnPDGM0d61R7IiGhqWa1cirn1LjuiKbNa8czX
sHqvqcfULmeeuUZiRlCL1UpH0rgWV8Tk/O7seM3pic3T3bkI7KvXn/US2sv4
wjh2s2eOrW3J5yzPafw+thg/73GtPTM7qh26yTOHtBYCrdBNcLbmtSyVrktU
dFaFbvLMF6jwzKGbPMusVk4EBOeQjIX+fPeks9pqxTNnFLfOF88lzxzhmHFT
cNbHx/U3hSiw0OwK5YOZdSQbKJuYWoJk+lU2UE6krDfECEHlmXPZW5YGB+kj
n+Of6w0snHs8yzZEp23zzMHoZXKTMXX4gCe3tkzdqayW1oua6ae2TJnkkTXC
M1umvOg5tHjmFO2MJIOz4cEL7QKXNfTdvtYIaluwByrTCMBl5iZHmNUDZYtK
NmkOpuKZq3OUgUriWXyTaDndlWZd71SWxcFK9S5sWZxewzPHXvDMxRp45gB/
ZHaF5taLSnpN5OnxzNancrrr1iCemb3yzJq6X1TiQIrnW+5acDazrl1odsHz
QTtKeOY8pIwFgcvss46ZXajpGigXtuCZb2Lnmcv88MxmA+TLHGZ2wbd21ywA
xwH+PPNNscOzIbAC5cxpgkjlAFBacdGZ8np+ZPl6Ot+4Jl+2fjtCvLye4qc8
yzzwmdc7IzJ2Ja09MM2oylTJD8KzbKBcN20aqInN8syx/2Wg3r0cKEdu8Ozq
xLprWXiWGW+yScteicxQk1mQs0nzDWGetNrF71eifj1tSMpeiez1dIFonmXM
KlM4HEk+vRL81UXAeOa7r2vdNfjU2uVl2xEfzCJDHMnP8GRHjsk+z0pG5x1f
aQ5P5v3KPpsdOU69Rj7XBwLnlKD6/TcJzlyc2ZHjjOLWkeN6V8vXc9pJHSJb
v5636fX0Jdw8y4hTdrTbOJQd7cjneg0tw7RtnGsXmi3kdGovRrbH0IEvVXN0
GEwUnO9WqQfqfRqozNfviDHrhiQRzgbqSXMPnJXoyUK+1IGy998ZCS0l2qnN
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
JDaYnWRswgoYOIfoWOnmu9GvfY/I55gicBntd9G6jE202N2QDjYeJeP6u3D8
0017Yu/b2R3fGs/hC20ttoka4ZweTadmJ3zWsTi1cBGtaF1l3CTKoHhhgHNi
IziXlgS3rNE0N9Mjn52HReNWkNuCAb3sg6VfW8fB2Q0Dzm4OcKaPNaOKhdFi
GMV6f3Ky3i8zT+ZOX/q1PxL5bA8qL4eyg1qMzwyjxagcfcs5PNh7+q1vs9eM
T/Q74Phz+mh3xXDD8/54lqzHbL4dsoMcNsvwWRtoW/Nt3Y5xMgME53qy4Pyi
gXNcPv3enei3DikCZ/sk7Tkqhn5tRAfna3rAhTniORVXyLiHQ6ha3MPRJDX3
8PvsKkjgXBQHXKZ/Z4zchvryvqjSJziH3E8Wgyk2kfV4wWo5jpdJbmxs7664
YmdPmFdcZd/qnt0BO5DoQUGkIJGVD2Q230AWByYUxeXxS8XF/Iv2nEfMWNkD
VitW4aYFNySdj8Z7cC8W96VfO06Qz+sFnA3/tOcqDfRr4z04cxBwXvfgMg5i
L2WLr9vLRnsOw6vlCx5xUfXZ4OvgQgmvOVf2zthLiXwOQCryKYWktifEZ793
XJOrm3bPHt8/rMkr9uzpdl2xs7ti157u8PHTuuUqK15Ku87gpH87eFoKvp1w
tOdwAcbH+1utYMUZAs5VNnz/A/UA6Nd+FeTzOZopvLTnEtL06wyEjICAs74C
zn4LcA4rAOfQWeSzxRGc91Xac1jB4mzRe+IMifKeKOISnNO+wdmGhXy33oN8
rMPztQ53dCe67r6LpWdViqZc2ooufYMbU+uQKHAOC6c9R0HwVR0ntlRPvzkf
uoqrWj5w9rSAM3+o1d2QBZxzOmjPOR0Z95ipu6MnA9zSgJtzhWWG+5wHgXPc
3iMSWcA50ucRiSzgXpS8GpkDwSpmrZ5FfgQ4py9kS2+j273/4H26gwcP9uAD
Bw51J86cGz9aL0enw9C8tZeMGsKHvPuAsz+G9pYB0fNcLHBLF/a8glqRb2Gt
mjvWkC/TrmwWoj07K8E59ifTrsA5pBWci2IU9qAKyODs72C6bRZqsREvPXCO
jgTnhAZwNgeAc2wSOEfoIZ+tzfXrHHPOcjzPy7FfnKN2eKzwl0Q7tJWctl0G
yEyMsWSubXoE50IftOeTGpzLgoMLrRctvMVkrVWBc/gt8tmyCy4bS4d7gLNm
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
N2TMKN4eI+v1qf//o70P/BdoSBdi\
\>"]]
}, Open  ]],

Cell["\<\
Then you can use the next cell to get all the samples near the roots.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cases", "[", 
   RowBox[{"RootSearchSamples", ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "#", "]"}], "<", "0.1"}], "&"}], ")"}]}]}], 
     "}"}]}], "]"}], "//", "TableForm"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"24.538107315999678`", "0.012775931512384542`"},
    {"24.54304796313203`", "0.00038232056531795067`"},
    {"24.54320079921533`", "6.582583367276129`*^-8"},
    {"24.543200825536548`", "3.375077994860476`*^-13"},
    {"24.543200825536683`", "0.`"},
    {"25.722281631900007`", 
     RowBox[{"-", "3.1086244689504383`*^-15"}]},
    {"25.722281631914253`", "3.562528050338187`*^-11"},
    {"25.722282122919015`", "1.2279667069847733`*^-6"},
    {"25.722549040589747`", "0.0006688543604593811`"},
    {"25.738764647918742`", "0.04161474406124421`"},
    {"43.382222876008484`", "0.02650483555511496`"},
    {"43.392030774205615`", "0.0018163216894251377`"},
    {"43.39275622805311`", "1.2979989492123423`*^-6"},
    {"43.39275674705014`", "6.326983381654827`*^-11"},
    {"43.39275674707544`", "1.0658141036401503`*^-14"},
    {"43.392756747075445`", 
     RowBox[{"-", "7.549516567451064`*^-15"}]},
    {"44.57183755343877`", "4.884981308350689`*^-15"},
    {"44.57183755360909`", "4.2596060012556336`*^-10"},
    {"44.57183910360752`", "3.87674768687063`*^-6"},
    {"44.57314680500841`", "0.0032767500070836064`"},
    {"44.5857179621181`", "0.03499211580730588`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell["\<\
The next cell shows all the samples taken near one of the local minimum of  \
f5[x].\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cases", "[", 
   RowBox[{"RootSearchSamples", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", "<", "#", "<", "9"}], "&"}], ")"}]}], ",", "_"}], 
     "}"}]}], "]"}], "//", "TableForm"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"5.049221849524303`", "2.208501208455691`"},
    {"5.353802103563195`", "1.405015085548397`"},
    {"5.671155642408069`", "0.7445491956324823`"},
    {"5.990858572952869`", "0.3272721576015485`"},
    {"6.018739198254991`", "0.30428773388846864`"},
    {"6.159691377760676`", "0.22284706750630567`"},
    {"6.2301674675135175`", "0.20421534943806563`"},
    {"6.265405512389939`", "0.20047416916270588`"},
    {"6.30064355726636`", "0.20045717413210085`"},
    {"6.614833657890126`", "0.3634792340374333`"},
    {"6.936850447226464`", "0.818418909222149`"},
    {"7.250746734937468`", "1.4980718247316012`"},
    {"7.561589546035579`", "2.335269174755267`"},
    {"7.876080061135508`", "3.2662898858365264`"},
    {"8.196725183516419`", "4.208216983814686`"},
    {"8.516734192450599`", "5.045867079134062`"},
    {"8.822662098703141`", "5.672417188250835`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RootSearch Options", "Section"],

Cell["\<\
The next input returns the RootSearch options, which are each explained below.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Options", "[", "RootSearch", "]"}], "//", "TableForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"InitialSamples", "\[Rule]", "300"}]},
     {
      RowBox[{"RootTest", "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "#2", "]"}], "\[LessEqual]", 
          RowBox[{
           SuperscriptBox["10", "5"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Abs", "[", "#1", "]"}], "+", "$MinMachineNumber"}], 
            ")"}], " ", "$MachineEpsilon"}]}], "&"}], ")"}]}]},
     {
      RowBox[{"MaxBrentSteps", "\[Rule]", "150"}]},
     {
      RowBox[{"MaxSecantSteps", "\[Rule]", "150"}]},
     {
      RowBox[{"PrecisionGoal", "\[RuleDelayed]", "$MachinePrecision"}]},
     {
      RowBox[{"InitialPrecision", "\[RuleDelayed]", "$MachinePrecision"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell["PrecisionGoal ", "Subsection"],

Cell["The next input displays the PrecisionGoal usage message.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "PrecisionGoal"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"PrecisionGoal is an option for various numerical operations \
which specifies how many effective digits of precision should be sought in \
the final result. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PrecisionGoal"]}]], "Print", "PrintUsage",
 CellTags->"Info3569557629-5953613"]
}, Open  ]],

Cell["\<\
In the next cell I use PrecisionGoal to approximate roots with high precision.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "\[Equal]", 
     FractionBox[
      RowBox[{"x", "+", "1"}], "8"]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"PrecisionGoal", "\[Rule]", "35"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\($MinPrecision :: precset\\), \\\"MessageName\\\
\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
     "-", "8.281147736884210858952932142344749991166066543515842122292`35."}]}\
], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
     "-", "7.162520376227090440068529653739097809861987558113719280974`35."}]}\
], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
     "-", "2.901595886832870914728408774656605817169409064002129162376`35."}]}\
], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "x", "\[Rule]", 
     "0.143418461173332938417502258186950846629624002446104896646`35."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "x", "\[Rule]", 
     "2.665620694845031472416083204164476606156047570584022483384`35."}], 
    "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
I think you will find that no other values with 35 digits of precision give a \
better estimate of the roots.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], "-", 
   FractionBox[
    RowBox[{"x", "+", "1"}], "8"]}], "/.", "soln"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0``34.350084509825564", ",", "0``34.262601172231626", ",", 
   "0``34.49741831119692", ",", "0``35.796224010171606", ",", 
   "0``34.5682288908051"}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
  When trying to find roots with high precision, you generally need to \
express the equation without using machine precision numbers.
In the next cell the previous example is repeated with use of machine \
precision numbers in the equation and we don't get the roots with higher \
precision.\
\>", "Text",
 CellFrame->0.5,
 CellDingbat->"\[WarningSign]",
 Magnification->1.5],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "\[Equal]", 
     RowBox[{
      FractionBox["x", "8"], "+", "0.125"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"PrecisionGoal", "\[Rule]", "35"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\($MinPrecision :: precset\\), \\\"MessageName\\\
\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "8.281147736884211`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "7.16252037622709`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "2.901595886832871`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.14341846117333293`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2.6656206948450314`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], "-", 
   FractionBox[
    RowBox[{"x", "+", "1"}], "8"]}], "/.", "soln"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.220446049250313`*^-16", ",", "1.1102230246251565`*^-16", ",", 
   "1.6653345369377348`*^-16", ",", "0.`", ",", "5.551115123125783`*^-17"}], 
  "}"}]], "Output"]
}, Open  ]],

Cell["\<\
In the next cell, we find some roots of the Riemann Zeta function with high \
precision.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 0.5}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Zeta", "[", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "40"}], "}"}], ",", 
    RowBox[{"PrecisionGoal", "\[Rule]", "30"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\($MinPrecision :: precset\\), \\\"MessageName\\\
\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "y", "\[Rule]", 
     "14.134725141734693790457251983562470270784257174333058164258`30."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "y", "\[Rule]", 
     "21.022039638771554992628479593896902777334340617773424929856`30."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "y", "\[Rule]", 
     "25.010857580145688763213790992562821818661358443154965451528`30."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "y", "\[Rule]", 
     "30.424876125859513210311897530584091320181556742962926548057`30."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "y", "\[Rule]", 
     "32.935061587739189690662368964074903488812712880502597779915`30."}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "y", "\[Rule]", 
     "37.586178158825671257217763480705332821381989301072233132513`30."}], 
    "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Zeta", "[", 
   RowBox[{
    RowBox[{"1", "/", "2"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "/.", "soln"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0``28.232649543960136", "+", 
    RowBox[{"0``28.221731616861028", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0``28.20358657873029", "+", 
    RowBox[{"0``28.22530742037348", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0``28.181197552886754", "+", 
    RowBox[{"0``28.185311428854682", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0``28.257806125937464", "+", 
    RowBox[{"0``28.211277905377425", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0``28.155344035242553", "+", 
    RowBox[{"0``28.157970901233497", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0``28.15694917514694", "+", 
    RowBox[{"0``28.18413866131001", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["InitialPrecision", "Subsection"],

Cell["The next input displays the InitialPrecision usage message.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "InitialPrecision"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"InitialPrecision is an option for RootSearch which specifies \
the precision of the values where a function is intially sampled. If the \
InitialPrecision setting is a positive value less than or equal to \
$MachinePrecision, then machine numbers are used. If the setting is larger \
than $MachinePrecision the setting specifies the level of arbitrary precision \
used.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3569557630-5870893"]
}, Open  ]],

Cell[TextData[{
 "An earlier example found a double root to the equation ",
 StyleBox["(Exp[x-\[Pi]]\[Equal]1-\[Pi]+x)", "Input"],
 ".  RootSearch can converge very close to the exact root of this equation, \
if it avoids sampling at machine precision numbers.  In the next input the \
setting  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"InitialPrecision", "\[Rule]", "18"}], ")"}], TraditionalForm]]],
 " is used instead of the default setting  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"InitialPrecision", "\[RuleDelayed]", "$MachinePrecision"}], 
    ")"}], TraditionalForm]]],
 ". \n\nNote:  The root found in this example is a machine precision number. \
This is due to use of the default setting \
(PrecisionGoal\[RuleDelayed]$MachinePrecision) in which case RootSearch \
applies N[roots] just before the roots are returned."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"x", "-", "\[Pi]"}], "]"}], "\[Equal]", 
     RowBox[{"1", "-", "\[Pi]", "+", "x"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "4"}], "}"}], ",", 
    RowBox[{"InitialPrecision", "\[Rule]", "18"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\($MinPrecision :: precset\\), \\\"MessageName\\\
\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "3.141592653589793`"}], "}"}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
The next input shows that the approximate value of the double root is very \
close to the exact machine number used for \[Pi].\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "-", "\[Pi]"}], "/.", "soln"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", "0.`", "}"}]], "Output"]
}, Open  ]],

Cell["\<\
In some pathological cases we have to avoid use of machine precision numbers \
to get reliable results. The next cell gives one such example.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 0.5}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"expr", "=", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"1.1", "\[InvisibleSpace]", "+", "x"}], "]"}], "-", 
    RowBox[{"Sin", "[", 
     RowBox[{"1.71", "*", " ", "x"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"big", "=", 
   RowBox[{"10", "^", "12"}]}], ";"}], "\n", 
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{"expr", "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "big", ",", 
      RowBox[{"big", "+", "20"}]}], "}"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000006691`*^12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000029875`*^12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000053062`*^12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000076246`*^12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000082247`*^12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000099431`*^12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000122617`*^12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000145802`*^12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000168987`*^12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000170741`*^12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0000000000192172`*^12"}], "}"}]}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "/.", "soln"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.000022396765213095193`"}], ",", "0.00014837635934333848`", 
   ",", "0.00009222740794267992`", ",", 
   RowBox[{"-", "6.211634213659778`*^-7"}], ",", "0.0000162467761855023`", 
   ",", "0.000058044322441053176`", ",", "0.00015912554774683008`", ",", 
   RowBox[{"-", "0.000043655219661764555`"}], ",", 
   RowBox[{"-", "2.9796356315614503`*^-6"}], ",", 
   RowBox[{"-", "9.46213801300555`*^-6"}], ",", 
   RowBox[{"-", "0.00010487800289793459`"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
In the previous cell we see that the roots found don't solve the equation \
very well.  To get better results we must first modify our expression as in \
the next cell  to make sure it's free of machine precision numbers.  In some \
cases infinite precision is very time consuming and it would be better to use \
something like (num_Real\[RuleDelayed]SetPrecision[num,70]).\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "=", 
  RowBox[{"expr", "/.", 
   RowBox[{"num_Real", "\[RuleDelayed]", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{"num", ",", "\[Infinity]"}], "]"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"1925288840700887", " ", "x"}], "1125899906842624"], "]"}]}], 
  "+", 
  RowBox[{"Sin", "[", 
   RowBox[{
    FractionBox["2476979795053773", "2251799813685248"], "+", "x"}], 
   "]"}]}]], "Output"]
}, Open  ]],

Cell["\<\
In the next two cells we see that using values for (x) with 18 digits of \
precision gives a value for (expr) with less than 5 digits of precision. It \
seems we are better off using values for (x) with 28 digits of precision.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"expr", "/.", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"big", "+", "10"}], ",", "18"}], "]"}]}]}], "//", 
  "InputForm"}]], "Input"],

Cell["-0.09071979895609731242056071284170119597`4.743779769119613", "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"expr", "/.", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"big", "+", "10"}], ",", "28"}], "]"}]}]}], "//", 
  "InputForm"}]], "Input"],

Cell["-0.09071979895609731242056071284170119589`14.743779769119614", "Output"]
}, Open  ]],

Cell["\<\
In the next cell RootSearch does all the work with arbitrary precision and \
gives a good approximation of the roots.  In some cases you can get good \
results with a setting for InitialPrecision that is a few digits less than \
the setting of PrecisionGoal. But for best reliability I recommend you always \
use (InitialPrecision\[Rule]InitP, PrecisionGoal\[Rule]GoalP) with (InitP\
\[LessEqual]GoalP).\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{"expr", "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "big", ",", 
      RowBox[{"big", "+", "20"}]}], "}"}], ",", 
    RowBox[{"InitialPrecision", "\[Rule]", "28"}], ",", 
    RowBox[{"PrecisionGoal", "\[Rule]", "28"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\($MinPrecision :: precset\\), \\\"MessageName\\\
\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "x", "\[Rule]", 
     "1.00000000000066906715117704975375528253779464751625`28.*^12"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "x", "\[Rule]", 
     "1.00000000000298758571471195254316325775222239539668`28.*^12"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "x", "\[Rule]", 
     "1.00000000000530610427824685533257123299900925122248`28.*^12"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "x", "\[Rule]", 
     "1.00000000000762462284178175812197920824539634576771`28.*^12"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "x", "\[Rule]", 
     "1.00000000000822466917606482476372612128049159719591`28.*^12"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "x", "\[Rule]", 
     "1.00000000000994314140531666091138718349258298365682`28.*^12"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "x", "\[Rule]", 
     "1.00000000001226165996885156370079515873936981991927`28.*^12"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "x", "\[Rule]", 
     "1.00000000001458017853238646649020313398564224800954`28.*^12"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "x", "\[Rule]", 
     "1.0000000000168986970959213692796111092329397993729`28.*^12"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "x", "\[Rule]", 
     "1.00000000001707422594674029911770457293057955628753`28.*^12"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "x", "\[Rule]", 
     "1.0000000000192172156594562720690190844797305059977`28.*^12"}], "}"}]}],
   "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "/.", "soln"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0``15.920265280994371", ",", "0``15.585343819870417", ",", 
   "0``15.632320922348821", ",", "0``16.241906976207968", ",", 
   "0``15.705857529378278", ",", "0``15.808940739848667", ",", 
   "0``15.571159048457488", ",", "0``15.678200033852193", ",", 
   "0``16.772734934987717", ",", "0``16.194845226530877", ",", 
   "0``15.728513383760172"}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RootTest", "Subsection"],

Cell["\<\
Often times we can find a value where a function is 'very close' to zero and \
we say it is a root if we can't find a near by value where the function is \
closer to zero.  However, it could be that the function isn't zero at any \
point near the alleged root. How does one decide if a suspected root actually \
is a root? The RootTest option allows a user to control what is considered a \
root, and causes RootSearch to only return potential roots that meet the \
specified condition. The next input displays the RootTest usage message.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RootTest"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"RootTest is an option for RootSearch which determines whether \
specific values are roots of an equation. Once the core algorithm for \
RootSearch[lhs==rhs,{x,xmin,xmax}] is finished a list of points \
{{x1,y1},{x2,y2}, ...} is effectively made where each xi is a likely root and \
yi is the value of (lhs-rhs) when (x=xi). Only the likely roots for which \
RootTest is True are returned.  The RootTest setting should be a function of \
one or two arguments where xi is the first argument and yi is the second \
argument.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3569557631-1967172"]
}, Open  ]],

Cell[TextData[{
 "The function ",
 StyleBox["f7[x]", "Input"],
 " defined in the next cell can demonstrate the utility of the RootTest \
option.  In this case ",
 StyleBox["f7[x]", "Input"],
 " changes sign at ",
 StyleBox["(x=\[MediumSpace]\[Pi]/2)\[MediumSpace]", "Input"],
 "and ",
 StyleBox["(x=\[MediumSpace]-\[Pi]/2)", "Input"],
 " and the plot is not continuous at those points. In fact the equation ",
 StyleBox["(f7[x]\[Equal]0)\[MediumSpace]", "Input"],
 "has no real roots."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f7", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"f7", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", "x", "]"}], "<", 
      RowBox[{"\[Pi]", "/", "2"}]}], ",", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "-", "2.55"}], ",", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "-", "2.35"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f7", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
4P99v4b///36/wDmxaCx
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-2, 2}, {-2.549999905222681, 1.6499996734693942`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "In the next input RootSearch says ",
 StyleBox["f7[x]", "Input"],
 " has a roots at (x= -1.5708) and (x=1.5708).  The RootTest setting in this \
example keeps any potential root where ",
 StyleBox["f7[x]", "Input"],
 " is less than 0.1."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RootSearch", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f7", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"RootTest", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", "#2", "]"}], "<", "0.1"}], "&"}], ")"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.5707963267948741`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.5707963267948741`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "In the next input RootSearch tells us no roots were found. In this case the \
RootSearch algorithm converged on the same values as the previous example, \
but the roots were discarded because of the RootTest setting. With the \
setting in this example only potential roots for which ",
 StyleBox["(Abs[f7[x]]<0.0001)", "Input"],
 " are returned."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RootSearch", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f7", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"RootTest", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", "#2", "]"}], "<", "0.0001"}], "&"}], ")"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output"]
}, Open  ]],

Cell["\<\
The RootSearch setting in the next input causes any potential root to be \
accepted. Notice in this case the RootTest setting isn't simply True, it's a \
function that always returns True.  This setting is useful if you think the \
derivative of (lhs-rhs) is very steep at some of the roots you are looking \
for.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RootSearch", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f7", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"RootTest", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"True", "&"}], ")"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.5707963267948741`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.5707963267948741`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "By using the setting RootTest\[Rule](True&) you are assured that every \
potential root that RootSearch converged on is returned.  However, you must \
keep in mind that some of the roots returned may not be roots at all. For \
example in the next cell RootSearch tells us ",
 Cell[BoxData[
  FormBox[
   RowBox[{"ArcCot", "[", 
    RowBox[{"x", "-", 
     RowBox[{"1", "/", "3"}]}], "]"}], TraditionalForm]]],
 " has a root at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", "\[Rule]", "0.333333"}], ")"}], TraditionalForm]]],
 " which is clearly not a root."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RootSearch", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ArcCot", "[", 
     RowBox[{"x", "-", 
      RowBox[{"1", "/", "3"}]}], "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"RootTest", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"True", "&"}], ")"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "0.3333333333333333`"}], "}"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The default setting for -- RootTest", "Subsubsection"],

Cell["The next input displays the default RootTest setting.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", 
  RowBox[{"RootSearch", ",", "RootTest"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"RootTest", "\[RuleDelayed]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", "#2", "]"}], "\[LessEqual]", 
      RowBox[{
       SuperscriptBox["10", "5"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Abs", "[", "#1", "]"}], "+", "$MinMachineNumber"}], ")"}], 
       " ", "$MachineEpsilon"}]}], "&"}], ")"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
When the default setting (PrecisionGoal\[RuleDelayed]$MachinePrecision) is \
used RootSearch returns each root with an error of less than 1 Ulp (the \
distance between adjacent machine numbers).  1 Ulp at a machine number (x) \
satisfies the following inequality.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ulp", "[", "x", "]"}], "\[LessEqual]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], "+", "$MinMachineNumber"}], ")"}], 
   "$MachineEpsilon"}]}]], "Input",
 Evaluatable->False],

Cell[TextData[{
 "So if ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"f", "'"}], " ", "[", "x", "]"}], "]"}], "<", 
      SuperscriptBox["10", "5"]}], ")"}], "Input"], TraditionalForm]]],
 " at a root, then the value of f[x] at the approximate root will satisfy the \
following inequality which is used in the default RootTest setting."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Abs", "[", 
   RowBox[{"f", "[", "x", "]"}], "]"}], "\[LessEqual]", 
  RowBox[{
   SuperscriptBox["10", "5"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], "+", "$MinMachineNumber"}], ")"}], 
   "$MachineEpsilon"}]}]], "Input",
 Evaluatable->False],

Cell["\<\
The default RootTest is an implementation of this inequality, and it normally \
gives good results.\
\>", "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MaxBrentSteps", "Subsection"],

Cell["The next input displays the MaxBrentSteps usage message.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MaxBrentSteps"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"MaxBrentSteps is an option for RootSearch which specifies the \
maximum number of steps the algorithm should take when attempting to find a \
specific root using Brent's method.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3569557632-5798462"]
}, Open  ]],

Cell[TextData[{
 "Notice Brent's method is sometimes used by the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " FindRoot function and by the RootSearch function.  The default setting \
(MaxBrentSteps\[Rule]150) is a little more than sufficient for even the most \
difficult problems I tried.  RootSearch should be very robust with this \
default setting.  In the next cell I use the setting \
(MaxBrentSteps\[Rule]100) and RootSearch doesn't find the multiple roots in \
the given interval.  Since Abs'[x] is not defined RootSearch can not use a \
trick discussed above to ensure rapid convergence at the multiple roots."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", 
       RowBox[{"1", "/", "2"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", "x", "]"}], 
     RowBox[{"Abs", "[", 
      RowBox[{"Cos", "[", "x", "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "8"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"RootSearch", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", 
       RowBox[{"1", "/", "2"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", "x", "]"}], 
     RowBox[{"Abs", "[", 
      RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "8"}], "}"}], ",", 
   RowBox[{"MaxBrentSteps", "\[Rule]", "100"}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
F7e3KYDfV/j2u0El9j8x9gsp
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 8}, {-2.7312107500856757`, 5.825889403307764}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "0.5`"}], "}"}], "}"}]], "Output"]
}, Open  ]],

Cell["The next cell finds all the roots.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RootSearch", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", 
       RowBox[{"1", "/", "2"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", "x", "]"}], 
     RowBox[{"Abs", "[", 
      RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "8"}], "}"}], ",", 
   RowBox[{"MaxBrentSteps", "\[Rule]", "150"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.5707963267948966`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "4.71238898038469`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "7.853981633974483`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MaxSecantSteps", "Subsection"],

Cell["The next input displays the MaxSecantSteps usage message.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MaxSecantSteps"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"MaxSecantSteps is an option for RootSearch which specifies the \
maximum number of steps the algorithm should take when attempting to find a \
specific root using a modified secant method.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellTags->"Info3569557633-6258180"]
}, Open  ]],

Cell["\<\
The default setting (MaxSecantSteps\[Rule]90) is a little more than \
sufficient for even the most difficult problems I tried. RootSearch should \
work very well with this default setting. In the next input I use the setting \
(MaxSecantSteps\[Rule]8) and RootSearch doesn't find the root at 1.49999.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f2", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f2", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "<", 
     RowBox[{"3", "/", "2"}]}], ",", 
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"3", "/", "2"}], "-", "x"}]], "-", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "4"}], " ", "x"}], "]"}]}], ",", 
    RowBox[{"2", "*", " ", "x", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "x"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"f2", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f2", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "25"}], ",", "25"}], "}"}], ",", 
    RowBox[{"MaxSecantSteps", "\[Rule]", "8"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwdl3k4VP/7xmUvKZVKi/JJRSRUiiz3tCsqWYqKCkkShSTRnlDKLmuyR1Gk
bHWQJRIytqwzGMwcKWFmIvzO93f+Odfrus51zvs8z30/y3/WzsbnBAUEBGxn
CQj8737tQRprO1FNCPz/9ZuYO/zp0yz5amLzUvUfVcnDxMwKo48hFyuJ6Wev
TVOF2ETM17HNArsriWe5WhoOOYOE5o3INMfllcSuaeO+CJtBwqWtJ2RvVQVR
P7soVL18gGA9u+rAW19BFP+wfXskoJ/4ujh66cmeMuKmzaWwMrU+ImJ+/5U1
FqWEtH/aetrdbmIr4T/wRK2UiPHcL+830UXUO6laToqVEq1a/U99XbuIObUe
+o3vS4i5rpPyqec7Ce/HEqt9pEuIf6X51gfN24mKhdbP6M8JotU8c4fdiRbi
tCjf0DqggMiTnOIr5NURr8Km2HTdAkLq8PlPD1pqiYm1Qg/3DucTg9G6i+bz
vxGhu+eVKB7JJ6RaL6bF6dQQX26v1fgllUcUTx8K8qN/ITZPGsl6heYSitet
Ek23lxIiv1/+DIt+Qwjcs4lR0UgljG9l+YsZviEYgq2p5bpJBGQdjvzhZxE0
mcKoMwdfEG4nbn/OK8gkbvuf+rekO5zobHyVsVfvFRX/3bme9PV4UyXidXpv
KkETirULd0jBaztnrfWpUUQ8vcIpcVExxmTiUroPRRKa+Y2r9EqKofO1ZlHk
WAQh8M+jpelSCWpUlYYldoUR/F9K5bPKStE6UrW3N/8pEXj0Wvdl23JkbnRQ
HzvoRnwZKE2sd6/GMaMCuVd3AhHYM2SsNv4d8+Ie5fxpC4K4Xl2whG4DKshT
+7S2huByYoHO9fsN2PZw5mJFfxiOvSiVnreQjqWf9nxgGETDdo5dmIpiI4bC
BlLmSCSiSFf5DEFrxishF100vYat6cSavvVtCN4+pGrmngnaggqTdVZt8Lho
t+bi0ixsVue/WxzWhoQLr+993fgGUs+lnokItuPS9xf2PKe3cDFRyN7Y2g7h
F/6bj4zmYP2kwYafVzuxhXaqYnoyD3ctvBf36jCw/kQk4WeYjyznZn6DCQMy
bs150rH5MHMQoMU7MDCdapShpFeAxgTjJHoEA9Xz9wYeu10IM2dRm4TfDFh3
q5zIFP4EhrbCP6EYJvSJGW6mTwkmhndo/mrrwXPdG9LHsksgWNeW6vyrB9xC
rvpUZwkKUEz7JtSLpLyfjgYapSi5m5gqt7EXAtntPQO9pVjd8NNQ5UYv8pM+
1MrtLIONecEukUV9UPJ3TgmerECaUftwpxILd8TJz1oKlai/4vLZXJuFVh87
JsO4Es2vs2XeG7Dgc89ypWp6JZKWbGXKOLLQ42UQ/NX8C3L3f1hzL4OFKGeF
m8Lvq+AmEXxLYl0/JMy6zdwv18DlkA+XLTQA80Kv5Ueja/C7pyODkBpAyn/L
u5UravDe5qq+t+wAaMOm9swV37DSOSfnzbYBuD2s9jSs/IZ0B7WsyfMD6MrP
fb5mVR1Y8s8idSoGoCxnYjulXwfr1r6puO8D8PD5rdjqWoeWmEkFsmMAi0yU
swOq6tBxNBc7Rwew1t3I2mtHPbg9qqEDqwZhMb/CbYBVD85okYSGyyBul0q3
mE7Wo7riVDfNaxApV220SqW+o3TQVk3TZxBj7QLTMdrfod8TmMOOHMSTNO2H
xkHfYeL0Vfpk8SBKd76N/KjTAOmLi+8HzGZjo1vMp5AQOjzKQ7Z2BLAxZi7p
/jSVjviNourCYWxKpzdVHhXSUXVIhbcyhg0DsTMxd3vpcJ84p/hfOhsOUfKe
V7Y04v03WSn3cjZeFqdrHKFTOi9dqXn2LxuXk1f8PDjQCJnefRJxM2xo+j9O
2jfZiJkhrY81Ihx8MXFapCffhAc+FTMzCzgY7Fcf2ejahOvdI9XEBg7WS+a/
mrOoGUZPjIOyj3EwPLLBVlShGQUlHRzpUxy8b45aIajdjAebBOUdznKwN97L
/691Mz46Gjv+vMiB7Raa/WB2M94eV5WwuM1BokWlfIVxC9Z2Lvf6nsKBg55m
e4ldCw6u9P1sn8HBZvmXwR89W1A2ndM0msVB6ZD/rNyEFkxUfw5m5XHQc+tw
d+KfFrzK1+BpVnMgl9IUdSe4FZvIRIcMDgfhQrlrNqW1Iri5paJ1mAPJs6Hp
bR9bIb5O9wv/DwcTK0wKtrBbEZgvOSU1yUFTUP0PFn7g64OmicQ5JPy9v8oc
/PkDczJ6T1krkBBoT4/nCrah8dG+lBIlEtc0/RUTZdoQLWoVKr2JhO2ovua/
3W04C9/osK0kcKHieGZUG1bVqU2K7CQxZloSvlC/Hcf8bPpfHSfhkB2/irBs
h+NSnyuHTpBgzr+dctG1HUNPTz/qOUWitlrvfVlcOwojRxI4Z0m8pBU1uY+3
43nE2V7XiyTk4qIt5SU68H57uF3BJRLhk56sOrkOPFD+xxp3JnH/vda4omEH
cs1fzTN0I2G18YN0e0IH2kRyPNy9SDT6hcc8zOvAHFnJI3Y3SRgMXF27tbYD
GZtM/A1uk9BM2Lo14G8HUkwSrLn3SCySyTaBUScmwk0ma/2p+FwNaifPdUIx
J/TExcdUfOiXbZ7d6ESt98+7UwEkhgNUXUdSOuFfnHFaKIjEF6HXwYlTndhz
kB8VHk6CEZzp3LWgC5aBVuU1EST4/70xXLa+CyoV7qcmnpFQpOWIPj3cBRnP
LK52NAla3bveKusuePq8nGsUQ8Lc6n2x8LUu1HwUzz0ZS+KhV76n5/MujGau
7rF4TiJOovB4bk4XntMNrxvGk3gfVbT1d2UX+EuqK7e9INGfRwyf+92FYQOZ
rD8JJKb3l3yNF+5G67l/FmWJJJa0lKa1y3Tj3tzjjIAkEvvGy62P7uyGzPEF
ieIpVDzvV+KxWTf6PsiP5FPsvqhqZeWFbgjpLNSzSSWRol7TrBPcjel0O15s
GolPxd9yrqV0o/Sd3FXVlySaj9QFZhd0Y1D7tHQ+xSJODQcVe7tR9ifox7t0
Eiun6Ao2vG5cOu8tpZBBYnmFg2CdCAMLZtr9gyhOCSAvD81nYG7l3KNjFG82
c+yevZyBQHebi0deUd9b+fOQwloG1LwUexIoPth3qWjPJgYcJSI/DlPcnDGs
ZK3JgJzSgMiW1ySsXZ0jb+1ioOej1mdniod3/BaLNWTALPLVVBLFnoJX3AuO
UX3Hz+hjA8Wi1SN9LWcYuGCtPOcvxcFBLibjVN8yltQcWppJYpXFaMnCqwxE
htpdVKU4Xc5NTe0WAwbqMU9B8bbBsbhDfgx0H885o09xSdZVyYshVB8sv9F/
gGLDa9wbvrEMFPkXKO6huFXvGic5lYFDK5VUt1NsK8o3//yWgYyTnrPkKf79
zaOSUchAbLJRqhjFXmF/NabLGbDo2q/Ios4nbumZtKKegWHv348KKQ5dO7lQ
q42B+Jj6H/4Uyw3duHOsjwGtGZtlJhS/yvn3y3WYgf3yK42lKda84W0VxGdg
t8GZR7VU/Mp2TddkCjLxxj+g5g7FRnNuadfMZUKxgbtyE8Ud32despcwcWyy
7x6dyo995G0Zsf+Y6GoMF3eh+Lbi3fGdGkzE9s7zjaLyPfe3oO1pMHGFLRe0
luJnH+41eB1gYo/5k8ZUSh9v9j3I+mDJRFVNyvooSk8680RXNZ1ngrn6yO7Z
FH9p8nn85woTrwIOvb9C6a/b1veCig8TvuKdBZsofZba02jyQUzk5rkUuiVT
+nHkL1lGzQ3Ri5Tn5FD6dnSzLxPOZqL6keE7GUr/Rh5y0RNFTHS8ypejUf7Y
4tV65XclE/z4o1OnKf9M3NNf3dHJxEIhb0U/ym+dDwW43weZ8NmW+TA4jkTx
o7yaylEmxgb2eoT+z58hip45s3vgIHFi013Kz9KJ4k3+Gj1ovry9XuR//k8p
zrhN60Fr/ZLYxjAS7eked90NehDldlM7JpREQvagqvXZHpxZIDV3STAJ1dIv
/loBPbA3+Ex/R9Wfg0xf2mBfDw7IS4ckU/VLhUVb2kXNPZdKhkRFbpGQYvN/
0id6ILs1+bOlN4mW3/bRhFQvmsT+bZm8TulJ4AA3XKcXd5XLcvpdSNxaPfvV
3tBeFK9Zr+hjQ/lDvuSu9vNeSHsl2XhT9XifwnUL9fReXErcbOp0msqfKltU
trgXoydknHRPkojSqzo7RvYidK/gtiBjEu8s/ZYm7u5D6oFZ3tI0EmHts1vP
He5D/o31e3N1qfph4f9M0aIPgn05J4y0Kb2ZPVqW6dSHlnWce1e3kSg0DFiR
H9mHj9dn23ltpPKpHbS67lcfbqS/FL2zlET9skiFyWgWJlUN2b5sDt5GLBv8
mMICNFYf8+7nIHhxVNrttywE5+zOcuzlwHRB9AbRShakrkNTp5ODFvFY5QV/
WLiw1Xf183oOunjxqgr6/fBdnT597T0HZFPadpOxftj7KpkF3+QgxrFgjeV0
P/h1t9Yr3+DgsFCN5HnxAdQ/JyaJaxy8UfvV67lyAAL6Hh87L3Pg/kgjMGHP
AGxPCvxkW3MguLN0cCR0APHh5uf27+Ng+av2yECNQUgbh0wpzuHgwN15/765
syGkGqE++yEbxmbHj7y5w0art4aixV02TijGJwQ/ZoNc7Loi2ZsNx1r1A8cT
2HBxdhdQd2MjcLlZOOMbG7Krp2ZkzrLRkh2tNrqWg8uqAzHKO9g416t4TobO
wfHdF0/bswdxZ8/uWmvVIbzNc10frjMIxo5Pe0rzh9G4XefEr4Z+HG3NWJIZ
/RtK6UXztcDC6lWMBb7jIyjN6TiceYian29uP71fcxS1hZqhITuYyLjuG/hJ
dxTfXTftG1Kj6sDVHyUau0cxjR0FegpMvHa8sXbt4VFsWqP9uX4REydOEmwB
21Ekn6Ubpg0x8E5zv1vB01H0C1+7upKqg+dHj/mpDIwiPr1aO2KkG7X27jmL
wsdQrNNlHqLWCY8XGRZXosdwyeqlZO2yTqxpY8zUxo9hncnky3HBTrgbGBj6
Z4zhvFEzOaepA6s2ybEESsagUrc4S9+jA06jVUuGyTF0PXD2HShox7ybsp5f
do5jIult8zbVNuS9N5Zbv38cEV6premL22D962HFPcNxXPU+lSz87wfen/mz
EMfHYfphr5P9lx+w2l2Zkes4jkLVQwsHT/9ApviVzoSIcYT4uXzw8mvF4ZAy
mvfPcaQftRzXLGvGGfNdXjf/jOOJX/as12nNcJEt/nCLN472iDvB04+bEZFa
uOnuLC667Tbqa5o1g1GYvfLhYi44S+ff5vU2wbUvnh+oy4XgWxxbN9EIn5er
tgbv4uK7npueakcjnjnFOIfs5yJKwH2l5KdGFPEj+sOOcnHXfknBzjuNEJV8
2hh1josInTZtDxHqeQ3vN0kBXMhqplcZC9ORPjFBJgdzkVi+68fW3gYUER4K
qRFcOFf8+dJe0gDmAbe4ly+4OJ0oaeZ6swFKVhcfZ+ZyMavAczBx7DuKfCzs
8zq5OCKV1ZpDr0etQUtifg8XA7Oj0rZk1oMhZdZdMMDFPrfNXEvfeohEGx37
OMLF16sbKtK063E4a/+eUhEeujeoq8dr14HZoiFXo8LDQb+xMCdqT1qtXfdU
awsPeqE9MVQngmWc/UyKJg9XOBUu+9q+4odtdNed3Ty4bXhi92nRV3wfEYjd
bsGDyVFb2Si3Ksw3i5qbbMXDL16WxgvxKhzK2+K10JYHhcbSO/VRX1B10+7k
TyceRmJI5V35lSiRqFmWeJ+Ha6efb1zeXo4Zp3N+Uv48sB6+UF5sWQ7dhmm+
91MeBi3eHpftKEP+M/VW8yge9nQLCl2p/wzeZPX+iuc8JM/+c2j73s/QOG37
YUsyD/Z7HxtP5Zbi7bqI8HlveDiWv8BC2L8Ev3zVRL1yeTino8y0GCqGylDV
VXYB9X/6ccl1+sV4mf3PtKychzP1HoG0to8YWBxepv6VB8kGK9fldkVYd111
6/N6HsL8D57W7irAC1gv8mznIUl3qfWa+x/QnTB5d4DBg/5Nb7v8lFzIiob9
Me3nQfD7xDK72BycvLDJupTk4abMB1GaxVtE1lR+Vx3hYdmf6Yrs26/Ronp2
ZyyXh6MVwntsd6RiccjEmzn/eNAaed5Zrx8LE26InMcsPgrL9d5NObAQZKES
yBLlwzw6QiTInoW6oooZ47l8OAllPJC3Y0FS7oxz8QI+krYc1si1YcGvP/hw
9Eo+0uzD1zdbUfu3K3/u0c18hOw3s59nxgLRHOT1aTsfSmcWeEUZszClpTyk
rMvHw3nc8nVGLFwXsPoqqs/HzQKvGS1qP78S8NmvyJKPaiM9OYudLJxNfSKq
6MeH3Wvxby4qLIhHXJbQesKH7qHberLKLGT6GEsdDOHjAl9bolKRhYlzS5Y7
xvJxy2d+vsxaFjVPxam8ectHlIiIx7vlLFS8eG2q2Uadb+lfqVoxFpRiahL0
lf9i21K2xBNmH8YC5+DCt7+okLz+1zqkD1oFYW/2S0yiMm9h8fOxXjg4iW/Y
YvsPi5Mlr8/a1YssnbhRoZQpVK+av1s/ogfMsBXlTMEZLPdjPYlsZyJE2MrN
eK0ArWPhwr7jykzM68pNECwToKXvU9paepMBAe87plpXZtHs7Q3XVPt1YzLN
KqtnoSBNzO7U12VbunApKitgYakgbc+yPvmZ8g7kKfuKL3ASovmw+4V2nG/H
3IMuG+/OE6ZlHvOvbFNoQ4tKPf16kTCtWbuweqy5FRlxWNtnJUIL/3l2Xmdy
C8yzti2QnRahzUoa85C434wbD17c6UgXpUmY5kceN21C2qBs9DxDMVpST8gJ
vd2NuB/74EzXYTEaO2ToXZBeI84Y/1yXeVSMNqMz2cLSasTSoqI3h46L0fSa
TD0C1aj69vRkxWNrMVr5gYw1v2QbYbstcmTOdYo3L5Vv4NMhd19aXyxFjLb6
Ygx3UxYd/zS9JFvSxGj5ay1cotPpaP3Z25CSIUbL3Wb/QTyFjqfHcyz3vRWj
Gab6xbJi6JhWMnZ9UCRG+5u5oS3Nn07Ns0/jhOhitMiTokvN7OjI8+HZ0JvE
aFtX/beh9iwdodqnNyS2itGYm3OE9S3pMEje9G5XlxjtwN9dMnqmdBR4fKu6
wxajVbA2v92yi45wFY2nR4fEaNfblObn6NJxpSfG9L9fYjTXhoRtW7ToUDR0
7C4eo96HxT0aanQIz2pMCuSJ0aaypOzylOlg5Go7nJkQo9XKPMnRVqCjyCFR
VW1KjPYlL6CaWENHxGqJ8ZkZMZp57vyMPavo+D/VLmtx
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-1, 3}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"-", "0.0552005647310447`"}]}], "}"}], "}"}]], "Output"]
}, Open  ]],

Cell["In the next cell RootSearch finds both roots.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f2", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "25"}], ",", "25"}], "}"}], ",", 
    RowBox[{"MaxSecantSteps", "\[Rule]", "90"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.0552005647310447`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.4999938554856136`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["InitialSamples", "Subsection"],

Cell["The next input displays the InitialSamples usage message.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "InitialSamples"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"InitialSamples is an option for RootSearch which specifies the \
number of nearly equally spaced samples that should be taken before root \
finding methods are used to converge on roots.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellTags->"Info3569557633-3022385"]
}, Open  ]],

Cell["\<\
The setting (InitialSamples\[Rule]300) is used by default, and this allows a \
reasonable assurance that all roots have been found without spending a long \
time sampling the function.  The next input demonstrates what can happen if a \
small setting for this option is used. In this example RootSearch finds 5 \
roots when there are actually 21 roots.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "x"}], "]"}], "-", 
     FractionBox[
      RowBox[{"x", "+", "1"}], "8"]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "x"}], "]"}], "\[Equal]", 
     FractionBox[
      RowBox[{"x", "+", "1"}], "8"]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"InitialSamples", "\[Rule]", "22"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwUV3c4Ft4XR1ZW9nit16uEsiJU6pAySpJKg0qSSvI1sqUSkiRJVpKQkCSj
hNwrW/bee8/Xa+/f+/vrPuc5937O+Zxzn3s/R8LiP+PbdDQ0NAZMNDT/Xx+N
nqFsb0viQG1GETajNhjx4F/s3JDEZPPlet4jrWDI2bv8a1USb7h6hX+UawHi
IbvN/+YlsSVZ1atNpgn8q9VpDMiSOOyCokaDciPM3aTdIT0tiSMKk9SGTzbA
34AQ5r4RSbw//tWrPu862Cduypo/KIn1yjp4+MxqITRTkiOiTxJfWJNd/1RU
Dbe7sniMOiQxcVJDwaisEmrsHvHvb6XGM6j3671VAaoMOkLMTZIYmyXWP+Mu
B2b5VjFcLYl3j/CNlSeWgP3fjxLRlZI4q8jQuTCwGDpM7u52LZPEQz1e/3n5
FsHxScW9F4olcbr5Pb/db/7C18erMoqFkljzbOmz5u+FwMv7dz9bAZVvLrtW
ej8Gz6QAhbFcScyb9TO+TgrDsMb5A8W/JPGTp81KH7cKwLBe+GBsliT2XzGT
9Gv5A79uD6l5/qDiLW5veTTnA3Et9fDlNEl8d7glLnY9D/yDnI6qfJXEbTpy
g+z6eTBHOqbJmUT1p/j5tf7Jhau/GLWnEiTxmH/IcdarufD3dO3J8k9U/51d
uemiubCvL1wvIUYSm0d98KhgzoXQh+ann7yXxMytT2nPCefCJrOMoVkENZ8P
lzI0LuaC1Yc5I/V31H5ezxzw+JkLNUq553lDqPzFs1qXj+WBWqm3CTlIEpcr
+FS+ncmD2Kunr1S9lMTq9uVT+0vygXmWxyzJXxLHum8+iPr7B+yfdV338ZXE
K38Ln34bKYAOgc83zb2p9ZnzzYwQxKCd+sBS47Ek7uvfk7NYhyFVU/WOoCeV
b9lhvzPR1Po2b91bcJXEqfbuY57uf+HRvTKbOidq/+9o/712vwhGNl//l+og
iVXcPPnKbIvBMOSyg/9/kjiUMsz8yqcEiHnjLpr3qPV95WtgP1IGL85muItY
SeLgCLd+mQMVQBl0f7RiIYnN9Mq+O76uhCI2tmfpZpL4su3FJ/WPqmH/pybf
wCtU/HQHCWsO6v07+MH/rokkJp07n1hzqQ6srssHEY2ofOo4WMy5GqCGshS8
YfB//qlTu9YaQO05etumL4kT+G/pPZpoBOZ0o8hgbUk8sT5nMN/fDF9pHRNo
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
SqFUehsnk9wg/h/iISRO
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-10, 10}, {-2.2544648090708534`, 2.004492100363625}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "8.348289378299722`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "8.128931534118271`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "5.353916539697934`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "3.8363831890811366`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "3.2116177756546436`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.7919019607177706`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.032351189053103635`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.730877103530479`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3.2828240626757283`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3.767387062972021`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "5.272491509475395`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
In the next cell RootSearch finds all 21 roots with 300 initial samples.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"soln", "=", 
  RowBox[{"RootSearch", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "x"}], "]"}], "\[Equal]", 
     FractionBox[
      RowBox[{"x", "+", "1"}], "8"]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"InitialSamples", "\[Rule]", "300"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "soln", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$MinPrecision", "::", "precset"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot set \[NoBreak]\\!\\($MinPrecision\\)\[NoBreak] to \
\[NoBreak]\\!\\(-\[Infinity]\\)\[NoBreak]; value must be a non-negative \
number or Infinity. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$MinPrecision/precset\\\", ButtonNote -> \
\\\"$MinPrecision::precset\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "8.348289378299722`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "8.128931534118271`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "6.862951194089526`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "6.471470625613025`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "5.353916539697934`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "4.837462268522024`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "3.8363831890811366`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "3.2116177756546436`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "2.3149160596763254`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.5892263387762744`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.7919019607177706`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.032351189053103635`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.730877103530479`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.6553816023295524`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2.251554720739636`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3.2828240626757283`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3.767387062972021`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "4.92068856358791`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "5.272491509475395`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "6.596105432790534`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "6.7398184613474434`"}], "}"}]}], "}"}]], "Output"],

Cell[BoxData["21"], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The RootSearch Algorithm", "Section"],

Cell[TextData[{
 "When given  RootSearch[lhs==rhs, {x,xmin,xmax}]  the algorithm starts by \
determining if  D[lhs-rhs, x] can be computed.  When the derivative can be \
computed a routine called SearchForRootsU is used.  Otherwise the routine \
SearchForRootsF is used.\n\nThe first thing that happens in SearchForRootsU \
and SearchForRootsF is that they make a list of points where \nf[x_] \
:=(lhs-rhs) is sampled.  Next SearchForRootsU or  SearchForRootsF determines \
that there may be roots between certain samples and appropriate algorithms \
are used to narrow the approximation of each potential root. \n\nOnce \
SearchForRootsU or SearchForRootsF is finished the list of potential roots is \
screened and only those that pass the test specified by the setting of the \
RootTest option are returned.  Details are discussed in the sections that \
follow.  \n\nBrent's root finding algorithm is often used by RootSearch.  \
Details of Brent's method can be found in section 9.3 of Numerical Recipes in \
C ",
 ButtonBox["[Press, Teukolsky, Vetterling, Flannery 1994]",
  BaseStyle->"Hyperlink",
  ButtonData:>"Numerical Recipes"],
 ".  Brent's method was originally published in ",
 ButtonBox["[Brent 1971]",
  BaseStyle->"Hyperlink",
  ButtonData:>"Brent's paper"],
 ".  Brent's method is very robust and efficient and theorems supporting this \
can be found in ",
 ButtonBox["[Brent 1973]",
  BaseStyle->"Hyperlink",
  ButtonData:>"Brent's book"],
 ".\n\nI developed the GoldenSecant method for use in RootSearch but never \
had anything about it published. I am puzzled about why an algorithm similar \
to GoldenSecant has never been published.  My GoldenSecant method uses the \
well known secant method which is presented in section 9.2 of Numerical \
Recipes in C ",
 ButtonBox["[Press, Teukolsky, Vetterling, Flannery 1994]",
  BaseStyle->"Hyperlink",
  ButtonData:>"Numerical Recipes"],
 ".  My GoldenSecant method also uses estimates based on the Golden-Section \
find minimum algorithm which is presented in section 10.1 of Numerical \
Recipes in C ",
 ButtonBox["[Press, Teukolsky, Vetterling, Flannery 1994]",
  BaseStyle->"Hyperlink",
  ButtonData:>"Numerical Recipes"],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 "Determine if ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can compute the derivative of (lhs-rhs)"
}], "Subsection"],

Cell[TextData[{
 "When given RootSearch[ lhs==rhs, { x, xmin, xmax}] we are searching for \
roots of  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "=", 
    RowBox[{"(", 
     RowBox[{"lhs", "-", "rhs"}], ")"}]}], TraditionalForm]]],
 ".  Popular root finding methods such as Newton's method, secant method, and \
Brent's method converge slowly on a multiple root of f[x].  However, we have \
a very effective trick for efficiently converging on multiple roots.  If \
derivatives of f[x] exist at and near a root (x=x0) of f[x]. Then (x=x0) is a \
first order root of   ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "[", "x_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], "\[Equal]", "0"}], ",", "0", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "'"}], "[", "x", "]"}], "/", 
       RowBox[{"f", "[", "x", "]"}]}]}], "]"}]}], TraditionalForm]]],
 ".  Notice this trick doesn't require that we know the order of the root, or \
even if the root is a multiple root.  Since this trick is so effective we \
will look for roots of u[x] instead of roots of f[x], but this requires that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " knows how to compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", " ", "x"}], "]"}], 
   TraditionalForm]]],
 ".  \nSometimes (lhs-rhs) involves functions such as Abs[x] which ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can't compute the derivative of, the RootSearch algorithm automatically \
detects this condition and in that case it finds roots of f[x].  "
}], "Text"],

Cell[TextData[{
 "When ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", " ", "x"}], "]"}], 
   TraditionalForm]]],
 "  RootSearch uses a function in the package called SearchForRootsU which \
finds roots of u[x] defined above.  When ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can't compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", " ", "x"}], "]"}], 
   TraditionalForm]]],
 " RootSearch uses a function in the package called SearchForRootsF which \
finds roots of f[x]. \n\nI discovered on my own that if f[x] is well behaved \
any roots of u[x] above are simple roots.  After making my discovery I found  \
",
 ButtonBox["http://mathworld.wolfram.com/SchroedersMethod.html",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://mathworld.wolfram.com/SchroedersMethod.html"], None}],
 "  which references [",
 ButtonBox["Stewart 1993",
  BaseStyle->"Hyperlink",
  ButtonData:>"Stewart 1993"],
 "] and in that paper Ernst Schr\[ODoubleDot]der is credited with publishing \
this property of u[x] in 1870."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a list of initial Samples", "Subsection"],

Cell["\<\
The first thing done by SearchForRootsU and SearchForRootsF is that they make \
a list of points between xmin, and xmax where f[x] is sampled.   The end \
points (xmin and xmax) are included in the list of sample points.  The number \
of points in the list is determined by the option InitialSamples, and the \
samples are nearly equally spaced with a bit of noise added.  The noise is \
added to reduce the chance that details are missed if f[x] is periodic.  If  \
( xmin < 0 < xmax ) the value 0 is added to the list without noise, and no \
noise is added to the points at xmin, and xmax.  Depending on the settings of \
the options InitialPrecision and PrecisionGoal the list of points may be \
converted to arbitrary precision numbers.  Once a list of points is made f[x] \
is sampled at each point in the list.  It may turn out that f[x] evaluates to \
a complex number, and in that case the complex number is converted to a real \
number that normally allows efficient convergence to a root.  For details on \
this conversion see the definition of MakeReal in the package and the \
associated comments in the code. 
Evaluating u[x] is more time consuming than evaluation f[x], so only f[x] is \
evaluated at each initial sample.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SearchForRootsU", "Subsection"],

Cell["\<\
SearchForRootsU collects potentially five sets of roots as described below \
and returns  Flatten[{soln1, soln2, soln3, soln4, soln5}].  This scheme only \
requires computing u[x] where u[x] changes sign.

soln1 = ( Points where the initial samples turn out to be roots of f[x]. )
soln2 = ( Roots found using Brent's method on u[x] where f[x] and u[x] both \
change sign. )
soln3 = ( Roots found using Brent's method on f[x] where f[x] changes sign \
but u[x] doesn't change sign. )
soln4 = ( Roots found using Brent's method on u[x] where there are \
consecutive initial samples x1, x2, x3 meeting conditions 1, 2, 3 below and \
either condition (4.a) or (4.b) is also true.)
soln5 = ( Roots found using the GoldenSecant method on f[x] where there are \
consecutive initial samples x1, x2, x3 meeting conditions 1, 2, 3 below and \
neither conditions (4.a) or (4.b) are true. ) 

The sections that follow discuss finding solutions (soln2, soln3, soln4, \
soln5) in greater detail.  

Conditions used for soln4 and soln5:
(1)   x1<x2<x3 
(2)   f[x1]], f[x2], f[x3] are (all positive) or (all negative).
(3)   ( Abs[f[x2]] < Abs[f[x1]] )  and  ( Abs[f[x2]] < Abs[f[x3]] ).
(4.a)   u[x] is positive or negative at x1 and u[x] has opposite sign at x2 \
and x3.
(4.b)   u[x] is positive or negative at x3 and u[x] has opposite sign at x1 \
and x2.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Soln2", "Subsubsection"],

Cell["\<\
Below we have an example where f[x] has a third order root at (x=\[Pi]).  \
Once f[x] is sampled at 
(x1 = 3.05) and (x2 = 3.2) we could use Brent's method on f[x] to converge on \
the root.  However, from the plots made below it's easy to see that \
converging on a root of u[x] is much easier. In this case Brent's method is \
used to converge on the root of u[x]  at (x=\[Pi]).\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "+", "x", "-", "\[Pi]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], "/", 
       RowBox[{
        RowBox[{"f", "'"}], "[", "x", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"3.05", ",", "3.2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f1", ",", "f2", ",", "u1", ",", "u2"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "x1", "]"}], ",", 
      RowBox[{"f", "[", "x2", "]"}], ",", 
      RowBox[{"u", "[", "x1", "]"}], ",", 
      RowBox[{"u", "[", "x2", "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "2.8", ",", "3.3"}], "}"}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", " ", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"x1", ",", "f1"}], "}"}], "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"x2", ",", "f2"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Text", "[", 
        RowBox[{"\"\<f[x]\>\"", ",", 
         RowBox[{"Offset", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"24", ",", "18"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x2", ",", "f2"}], "}"}]}], "]"}]}], "]"}]}], "}"}]}]}], 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"u", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2.8", ",", "3.3"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", " ", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "u1"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x2", ",", "u2"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<u[x]\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"40", ",", "32"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x2", ",", "f2"}], "}"}]}], "]"}]}], "]"}]}], "}"}]}]}], 
  "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw12Hk8VN0fB/CxZCtRiEpMRJayZSnLuWNNkpCoHpWIbMkeUka0KNmjIimS
EFpsxbnyqJCkUhFJsisGJY/Eb865fn95vV+f7/meZc69g7XOx2xdOWk02mMO
Gg39DOB8dsTNjYdBU0h4Yit4gmyW731VhsxK8eTnPkEqbefS5D3Cds8j7dqZ
MLIn2ZCWh0x3kNMdDCNt5eCVIXe2+dJ3G/8bRmqYlzd4e7Gd8erV49AwknXp
rnKAL6pfHaY/GEr6rIwbiwhj+3Hs3ZMvQ0iJu8+2WiSwXWSVonYqmHTxlP51
K4ft4U2RjaGB5F1pgeDLFWxb3aiyyPQnM3e4vNjczHYjea7jiS+pea/rqGcP
27PTs59UfcjQM/W9ltNsezfcCfnqSVbaGKs2CPIyaO4f62u6j5DXdnY3v1vL
dvc1A61trqTS8xEQr8M23/rfjfedyX98VnK3b2f78OjDpaFO5DmBtoyqg2y3
BTb8GncknaUX8dgEsV3vu1Jzdg/5xdWuLiCGbeui5bdv7iYF5Jbv2nqDbZat
fOZeW1Ktzan00SO2S6pEv49ZkdNVb7xL6tlm/vrFJ2tB+qy6/9Oxi23hLPLY
GVPy7N0Hb9Im2M7yVl9fZUha3peJiOLjY9BqtCamd+mTS+/J0vil2HaCRVts
tEm/T2YfJDWQL6XHx6iTAmu/DgYgM25lRgSrk7eOnPjTiNwdF3jSRZ18+7OY
HroJ9fsefctAndQUWun1XpNt5t2CxAk1csp4ZP6SDhp/rmT+gBoZdi9ecV4f
1fPKjkWpkFHMtvCvW9mmhb0LP6BE9ux8Ua9hjuodfgsaKpEM6TLRaGSaFG+p
rBI5V51cKL8NuanBZEiRDPtj1ellgepdfnsEKZK+wc/0pixRrvnm30QF0tH7
wYyALZpP3Sv8kzypvSc2RNMR5QYnNufLkq5eDcrRyAxW58kkWTLlFM+Xdziv
2fchTJYcz2GaBuxH+5m8WLNdliwcD1z+4ACy44+QURlS5uL+QtVDyCXj/joy
pCBU6VZyQ36oZP+RTuq/8UoOQ6ZdUWQ9pZOevXlmjciMk1YZhXSyXkD2nscR
lJ8ZUTpNJ087iIfluaNcJp2uQienWfMi8l4oj1NqXi5N9sq+2brWF/Wv1th9
TZKcYu2Ex7Gz2h75SpK8sFmzGXvLuP5WSVJpT9PaE354/crPf64mfWNf/Gn1
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{2.8000000000000003`, 0},
  Epilog->{
    PointSize[0.02], 
    PointBox[{3.05, -0.0001280113573560726}], 
    PointBox[{3.2, 0.00003320298262687871}], 
    InsetBox[
     FormBox["\"f[x]\"", TraditionalForm], 
     Offset[{24, 18}, {3.2, 0.00003320298262687871}]]},
  Method->{},
  PlotRange->{{2.8, 3.3}, {-0.006604502844320237, 0.0006616521392008856}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVzHs01HkcxvGJmt+l6+mo3A7RXTVJo43o+0HSwZzMKEVk1q1IplKRRErR
yW0xaAqTUPOTQlNDO+ObiorYhtahyxRrKbnM6cTKpnb2j+e8z+ufxyJIJAjV
Y7FYPN3+b7Re4/6wMDZcmtR0+bqocNvyvtb7OqcKG9eNIxW28tDnEvvZIMli
Xcx2UOHeHCfWTZ2/c445t9iqsGBZfcGnAzortqsdVqqwzXbF88iDbAhyCt+3
eLYKa9Nlq6MPs0HaKOF+6lTiKKOM0cQ4NoSIfBqSIpTYUNbo5p7FhnsWXCtx
4u84OMJ8rKSUDbyHYZzA0gdYZk6fENeyYcMraMhvrcNFvOCnm9rYUJDAkTzs
q8XcSs2hiF42TL6YG5s7sxafPP+sz3OCDf7wLMl/sQLX8V3WPZ9NwG8t3lez
7O5jyY4PbR0WBAz0ez4OCbqHrZo+b8n8hYBA2xOZ1ifleG+U0fRuDwJM0jKK
84rv4hS666oykAAfsmN1QHMNDjKfweYfJ2AXfz7L7K9q/D5055PoiwQctWvD
opnVmF4239utmIDCK5mDKosqbN0lvCeXE8Bf++F7e+xtPKFUR1Y9IyC4SSi2
b72Fo4yrv/prCBiOW3StcIrBF2Q16vwvBIQ0bNIQPBn2rLZMPEeS8KXFKV8U
ewPPqVzCosxIGJhW2pF0qwwfeb2t09SGBLskUVzaz+v43Jmu+B43EhTS6ZG5
nBK8cU9aLNefBL95896mxUtx3xK1m8VhErpWWPSg8kLsdCB5oP48CUd4/Y4B
MyUYaXzfDl4moYozPH3r7Tw89KLw2tM7JBxqvWRgTuXg3DtH7bc0kiAcMm5w
HMzA7x6Hr3TpJuFVp6ui3DEV/+n1R//ECAlfv2vX97OScNTc3ZMO+hTM6OmW
axOOYb1Hoh7jRRRUT1ayuNMCsOvweIFsDQWKN1nZwaf80Sp3aVkTUNBrn39f
nHIMKc1rz+b6UOBgMmGQkJqEtMu/yLURFMS8L+HPEaQic0vVg/4EClrniqIr
v2WgKfF4VnouBW8Nw/V7DXNQ/GaB8tFNCg6PjvSHxuQhxte09mY9BUK/ioEN
ZhLUcTAmZeUrCnYa+PiZyQtR4Z2vFRs/UmA6EsnZekGKFkZ+kI5NUWCkln6W
+ZQga7+RQef5NAjSbIr4ZClydUgnrZbToNDafb5UXYaofMl4w2Yaqupq3usn
3kBRS5rtPu7QucP7ev1aGaKNY2ycvWjotCyxdbaVofJ5S1df1Zm7RdTc6CBD
76ZOm3rxadi75uK/LzxkyLNr/U+FgAaly8tTb8JlaFX65Scpu2hIzheMTZTJ
UN/4gR0r9tJw8niQ2taMQWeGF2xP0nnfyx/yumUMMul7BG90fjDN5orjWgYJ
1KY2mf40NOUEilwdGNRQ8dLgnwAaApqHNu7yY1CRcNPrJiENY+0nXI7nMch+
99/ti3+lwXpBt9e3QgZ18rJb4nQWL9IIT5cxaPbmISUniAYPXkfqeTmD4hdI
i/OCaWhYmDghbmeQ4SxegVbnAcNZJsavGXRXbzLLPYSGbUonKOph0OCo99kf
Oq9bymSXaxl0oZ91ak8oDU5RGmw1wSDLd5XRNTobhdaP3v7JoPoOv8hZYbq/
GnfLDUQF8m0mQsN0jtyavFsxpwL9B3HhO20=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{2.8000000000000003`, 0},
  Epilog->{
    PointSize[0.02], 
    PointBox[{3.05, -0.030539424759616865`}], 
    PointBox[{3.2, 0.019471329649623184`}], 
    InsetBox[
     FormBox["\"u[x]\"", TraditionalForm], 
     Offset[{40, 32}, {3.2, 0.00003320298262687871}]]},
  Method->{},
  PlotRange->{{2.8, 3.3}, {-0.11430894417478947`, 0.05284665053671564}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Soln3", "Subsubsection"],

Cell["\<\
It's possible that samples are found where f[x] changes sign, but u[x] \
doesn't change sign.  The next cell makes a graphic where that is the case.  \
When that happens we use Brent's method to converge on a root of f[x].  In \
this case Brent's method can't converge quickly on a multiple root, but at \
least it's guaranteed to converge if given enough iterations.  When Brent's \
method is used to converge on a first order root, it normally converges very \
quickly.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], "+", "0.995"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"UnitStep", "[", 
        RowBox[{"x", "-", "\[Pi]"}], "]"}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], "-", "1.1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"UnitStep", "[", 
        RowBox[{"\[Pi]", "-", "x"}], "]"}]}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], "/", 
       RowBox[{
        RowBox[{"f", "'"}], "[", "x", "]"}]}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x0", ",", "x1"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"2.2", ",", "3.6"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f0", ",", "f1", ",", "u0", ",", "u1"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "x0", "]"}], ",", 
      RowBox[{"f", "[", "x1", "]"}], ",", 
      RowBox[{"u", "[", "x0", "]"}], ",", 
      RowBox[{"u", "[", "x1", "]"}]}], "}"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", " ", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"x0", ",", "f0"}], "}"}], "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"x1", ",", "f1"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Text", "[", 
        RowBox[{"\"\<f[x]\>\"", ",", 
         RowBox[{"Offset", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"18", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.0", ",", 
             RowBox[{"f", "[", "1.0", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
      "}"}]}]}], "]"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"u", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "1"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", " ", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x0", ",", "u0"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "u1"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<u[x]\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"18", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.0", ",", 
            RowBox[{"u", "[", "1.0", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
     "}"}]}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
f70j8gYN/x9YeFUX
      "]], LineBox[CompressedData["
1:eJwV03tYTFsfB/CNxNoz4zTtU0iSkZK3SIVK9KNcTinUiUqS6SpJohMKU06F
0TRd6KqQ3Dql45RStHYXMrogySt5qThOo15daUrmXe8f+1nP51nPs9Zea32/
84UHnP0mUxQlIt//x4ObvWxsFiL4e7u5oLGRYleoZB1apY/Ayvh+QQOxdZfH
61xDBF5D1voyYltWy0bFGIGnIM7kIbF9TvvVQBMER0LTn2DirVGZdJMZgkVt
h4fLiXd4eIQuW4lAQ6JdVEzsZaHVdt4Kga5G0rdrxH6a7avGViNwW9z6LIs4
eDjjstdaBJOffrJMJA5rcZ9Wa4fg/IZm02jio8Wz9xtsQlChebbyILFI8rpF
7IDAcZpOqzdxXHCGRb8TAg9BQpQTceqi2Sr3XBFMcaCPLyT29NK/3u2GYGGW
i1CNWC/VzH6GJwJJX4fqWAPFligdpT5CBBubHyTIiKOW7zST+CGoHdYOvU1s
ty+wrTwQQbtjAz+VuLUtRnvGAQSd/fop7sTZXCm2CEPwX9+3YVbEvusuCn3C
ETzbPcLXIh4uLLtRHongrb+X5OUTimVie819TiMI0L0tWk3cXqF4lSBGUPKc
9vyZ+Eq/amS5BMGKuV+/9sgo1tRzfjXvPIKEDRf2JRE7m213LL+MIHZl7dbn
jylWa69Pf9dVBN9uexvmEHflhKbwbpD79HlcvZc4jBa/FhYhCIuZaTpRT7HJ
ndiPV4ngz65rfA1ij5lN0y2qEKRy43tePaJYgWN7gbAagVH2kegM4jvlwwNl
9QiyrcoGZhG3JBqeELaS8yewrdMfUmzmwxXzE14heJG7qai6jmKF47Z1Ze0I
Tj1Zvuko8aC/F83rRGA/HvzgQy3F8tekXCjrQ8DcTS/6o4Zi/33okmVXP4IJ
reRzO4kv3Szs4A4jcH229V+I2ETjsUA4hgD/2FbgXU3y1vu9iDuNhuA5r+9S
LMVKM/3r9+jS8OWFw/SpDyg24reYQ1ELaNhx7obi8n2SP+eceWn6NBjt17q3
mtiIbotoNKIhZ8WxKwcrKVZ2dP2ilZY0iN6/0W24R7GT3fXOcJ1p8P/Fqd2O
7NBjDssNXGnoiA4vaS6l2Gdqnp1r3WgIGSnftYM493GKZYQXDYOZHXP9Skh/
LKbIO4NocLLL2B52h2LDZ3bZl52iIf96UoVLEcnj0MTX53E0BCDHxCeFJF9P
Z+f1nqEBXXI3B2L1+G3j86U03Oq998XgD4ot+soWnMumoSi+x7jnJsX+8zKX
KyylYWr5kjem+eT9Unc1cz/RMOapyOrOpFjtv+g5++Q0fGwyLl1I/O55WYCs
jwZQOgT7Z5B8/qQ+KW6YBklcU0l3GsWGnH1kppzEAcOZt+40pVJsjGhpxoA2
B9Qcq0S7JRR7M3iSb5szB445NQZFikhfxUXF5ts5oNN4Iz7pJMUuubVzItmd
A14bFm68doLk5VPphS3eHLgO+UUNURR7Xxgke7yfAyHrvfVUj5L7c3uxpPI0
BzrVY59ZHqTYUbt8RW4VB4JybfwvepP+VeaeqqvmwLs9xrLM3eSFTTN5PXUc
GKj7m0rzothp8xLnmzZw4Ns3zy9iT4rVVBz5pe4VWW+krjHAjWLNCjdn/NPP
gWbxmcJPW8j5NIYtli3ggqatyAStodjuj+uO1MRzQd1YpPNWk2LX5TZfWSzm
wgcrH81wDZI/N4+mZAkXtDdo3ef8TPLTcFDgc54LW0tp9eV80tfiS41T8riw
gFr6JYJD+hD5Q3d9FReQqrXzcaUS1/ArZPXDXDDVuqbIa1biK6uXzWnawwMX
kH+08SPzTvSpcV8e/G7UWD1VqMRdu7vlhoE8mJVXfkDmpcQLYs5XxIXw4EHE
A1t7NyW++kjhDpE80Jp4177MQYnzt9Sk/5XKg9r4QcsMEyW+scdFM7OeB+vV
YkMbFT9wYWw4P8B4BhwL0vi9O/YHjnf1cZgyMgOEDK/TSDyBl3dcvhnf9BPU
JRo9PeHxHacbZhU2OaiBuTib+VUwjk+yCekO99SgxVf/9fZSBXac45r/RI8P
ydyla3tWjuK1IfU7+Wf48EYtZ69p7Vecqy3UaxzhQ9rJuZL/6I5gvdrrF5x2
qkPkKXk0nTSEpcY1i1uq1MEmS/jSRmUQ+w+pPJctZkC62a628td+LPxzUPdM
IgOdg7lqEWf7cHCMy3f7JAZ++7Am8nJUHw53KXnFTWFgGncB1RTSh0+PhEuk
FxgoHg3wMXDpw0WWivG0iwxkT01p75nThxXVyrZrBQzQWxe9v17Yi6Ut3IS6
egYsFDWdWi2fcWbe/sA4GQNV8ZH399d9xnmHm203NTAQtidEtebuZ3xXUzrW
0MyAfaB0MCTrM+7wYAJfvGTAelFqeLvvZ2zQPdu2q5uBZDftw2Pf5Nik5JjO
1Y8MhEjDT/jJ5dgq9o3C7xMDp/3nClo65HizwcXiHjkDK8QvbIqr5Thsn67O
wAD5v1iBjkgsx1HW0Yo7Qwy4562yHj0ux7G8rtbDIwx07JNODwuV4/TbeeLR
UQZ2Be+6G+Qqx1dEKgEVYwxEc3gXezbKccE2v3VR3xnQEwRYB1nJcYng0dw1
P8h+UtW0XiM5rhrSVyiVDMx6H3s7dJ4c/w8KBr4d
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Epilog->{
    PointSize[0.02], 
    PointBox[{2.2, 0.4064988827446542}], 
    PointBox[{3.6, -1.996758416334147}], 
    InsetBox[
     FormBox["\"f[x]\"", TraditionalForm], 
     Offset[{18, 0}, {1., 1.5353023058681399`}]]},
  Method->{},
  PlotRange->{{0, 5}, {-2.0999987289641124`, 1.9949999999999948`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
P1DM6lk=
     "]], LineBox[CompressedData["
1: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
yw13lKDq/rmKsTEG2FMNOrqtJOhfu4HKMg==
     "]], 
    LineBox[{{3.1403564132567894`, 1.}, {3.1403583949663276`, -5.}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Epilog->{
    PointSize[0.02], 
    PointBox[{2.2, -0.5027837858328451}], 
    PointBox[{3.6, -4.5122399351021665`}], 
    InsetBox[
     FormBox["\"u[x]\"", TraditionalForm], 
     Offset[{18, 0}, {1., -1.8245457461835615`}]]},
  Method->{},
  PlotRange->{{0, 5}, {-5, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Soln4", "Subsubsection"],

Cell["\<\
In other cases samples are found where f[x] doesn't change sign, but  f[x]  \
has a local extremum and u[x] changes sign at the local extremum.  An example \
illustrating that case is shown with the graphic made below.  In this case \
Brent's method is used to converge on a root of u[x].\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{"Sin", "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], "/", 
       RowBox[{
        RowBox[{"f", "'"}], "[", "x", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.8", ",", "2.0", ",", "2.3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f1", ",", "f2", ",", "f3", ",", "u1", ",", "u2", ",", "u3"}], 
     "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "x1", "]"}], ",", 
      RowBox[{"f", "[", "x2", "]"}], ",", 
      RowBox[{"f", "[", "x3", "]"}], ",", 
      RowBox[{"u", "[", "x1", "]"}], ",", 
      RowBox[{"u", "[", "x2", "]"}], ",", 
      RowBox[{"u", "[", "x3", "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", " ", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"x1", ",", "f1"}], "}"}], "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"x2", ",", "f2"}], "}"}], "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"x3", ",", "f3"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Text", "[", 
        RowBox[{"\"\<f[x]\>\"", ",", 
         RowBox[{"Offset", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"30", ",", "16"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x3", ",", "f3"}], "}"}]}], "]"}]}], "]"}]}], "}"}]}]}], 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"u", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", " ", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "u1"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x2", ",", "u2"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x3", ",", "u3"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<u[x]\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"35", ",", "8"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x3", ",", "u3"}], "}"}]}], "]"}]}], "]"}]}], "}"}]}]}], 
  "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Epilog->{
    PointSize[0.02], 
    PointBox[{0.8, 0.2826439091004772}], 
    PointBox[{2., 0.09070257317431829}], 
    PointBox[{2.3, 0.25429478782327974`}], 
    InsetBox[
     FormBox["\"f[x]\"", TraditionalForm], 
     Offset[{30, 16}, {2.3, 0.25429478782327974`}]]},
  Method->{},
  PlotRange->{{0, 3}, {0., 0.9999999387755102}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVxX081HccAPDz+I1lZelSaHm6RNupZVGrzzclk+eVZylCkqds81TkOenO
cGWhVMMryquWml4R3xCdx2pElqcT6n4/HLk8HW7bH+/XW9sn9Cc/WQaDYfuf
/5+zDrnuEBq2t9tLe0AqFZFU380GL1l2YDTqxo6cE5G2ieFALssLNA7/YDE5
KSKTD/dzglghENlfWvNBICKJzGlNT1YcHGZOvqLrRaTlxaGRw6wMMNaWrbJM
E5HQmxFN9qwCEN8XL/74lYjUcjhVtqx74PhDTYSF0QRRUAxHwkACrVLVB4XW
Y8TqvHfKX84voEi+Qf6PQoo8jvbrK37dDsGNUSPD64Skx/00OzyyA7Y45mTm
x30gqpZc/1rcDV0J9PNo1VGyutOvfKfHO1j7zvD0zpxhorspqDTFZwBME53u
tBq/J6Z9wS37sgXgMp+cd0wkILUL8Tad+e/hkSZ3Y2bBIAkgfH5N4gjk5E9b
qPf2k9wTtzesPf4BCi7zq+t/7yXfuApmlv2EYOPiED++/R/SP23fjq1ouDCg
X2eu8JZ8GlhvzHQahygnGlIr3pDMuzEnXVxEYKf5pkgU10FYq1bYRuVPwi7l
nUmOka9JRVj83YwbU2Cvs8pDKa+ddOrzkGP2JxizSrMNKmgmekkdBkdzp0Em
cfZ4oUcjMXMY2HEjXwxulu5VWaZ1pC8sZS+X8xmmSvwcLJufknIzN5WGrBmw
0zqqIeY8IkznFz0lKbNwEZXsr2ouJTDEyKr7ZQ5eYutJ+vYVkssMUGFFzQPT
FLkPpadAYsGpCyaBC2B97Izaz6lFcL39amNGmAQ6dQ2sXp4rh9gQ3qRW+CLU
2bKagnMrgfY2UHfzWYLgwJZ5c41auLREyff7L8ObFKXmrgMNUDlmKfrSXQri
gbg/K7Y1QZe+6dAuPQY2L8sw3Mdsg4AtJ9i8YgbmDWYru9x/BbXOHmf3bZTB
8t4T2XKP/4bvXKlStVsyuKUjXHJN3AlBSQe792jI4qI6XoXeum5I81+xIMOT
xfkTn83O7+qBai1vKaUmh7WDHTwf5L2DJ8upcoYZcvhmlnBbkqAP2h/up7iq
8thVoyC81WQQGjb5N3Ky5fHKhiwFz/MCSH7sdEugrIATRtt4W6uHwFOn18uD
q4BLeL1SX51hkFSwNYyQIlav+nZMJXYEzskJW6/EKeIh581X8/tHgaln5q3P
QDj5i8r3B0I/QmSIs1g5GuGmz0EqizNC0Pzel886i3D0FMtCsiSEZ0tnrpnH
IrzETF+UyFOgzOUeiElAWH1h+7jMGgoK7j6/LLyIsNW2KOprNgWNH7eb8PMQ
Fh6JmS86SYHaiVURKU8RNj21tfhtDwVPDLUO3apBmD0ra64koMDrk+HG6mcI
t6RyInZ/pKAk4WCj+DnCe5K7S4tmKNh9M5bp24ZwRvZe+/Q1NPj00RXm/Qhz
wn0OFtrSgIrn070GES42lTwdP0JDWRA6FjOE8AajuW4zTxpmJDqofBRhS0+P
5a5AGtI3uLtoixB+aHdJVz+NBvbQSaM9Uwj3xit2nvuNhs7SX6Wu0wivnj/N
7sqhYaNZ1u3MWYRtFc0pbjEN9YwbZ8vmEXaTuFmPldEQwC+z50sQNp69427z
iIaVmZW6w0sIm4wqrb9XRcMDF/6sVIrwyh02F1TrafgXulZnSQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Epilog->{
    PointSize[0.02], 
    PointBox[{0.8, -0.4056856426218758}], 
    PointBox[{2., 0.21795809846086195`}], 
    PointBox[{2.3, 0.3816658257261226}], 
    InsetBox[
     FormBox["\"u[x]\"", TraditionalForm], 
     Offset[{35, 8}, {2.3, 0.3816658257261226}]]},
  Method->{},
  PlotRange->{{0, 3}, {-0.9999999387755122, 0.8675620691807366}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Soln5", "Subsubsection"],

Cell["\<\
It's also possible that samples are found where f[x] has a local extremum and \
neither f[x] or u[x] change sign.  In that case Brent's method can't be used \
on either f[x] or u[x].  What we need here is a method of converging on the \
local extrema of f[x], and we want to efficiently converge in the event the \
local extrema is at a root of f[x].  

In this case RootSearch uses an algorithm I call GoldenSecant.  The idea is \
that a secant step is used on most iterations, but a GoldenSection find \
minimum step is taken when a secant step would be poor choice. 

The next cell makes a graphic for a situation where my GoldenSecant method is \
useful.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "<", 
      RowBox[{"3", "/", "2"}]}], ",", 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"3", "/", "2"}], "-", "x"}]], "-", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "4"}], " ", "x"}], "]"}]}], ",", 
     RowBox[{"2", "*", " ", "x", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "x"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], "/", 
       RowBox[{
        RowBox[{"f", "'"}], "[", "x", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xa", ",", "xb", ",", "xc"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.9", ",", "1.4", ",", "2.0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fa", ",", "fb", ",", "fc", ",", "ua", ",", "ub", ",", "uc"}], 
    "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "xa", "]"}], ",", 
     RowBox[{"f", "[", "xb", "]"}], ",", 
     RowBox[{"f", "[", "xc", "]"}], ",", 
     RowBox[{"u", "[", "xa", "]"}], ",", 
     RowBox[{"u", "[", "xb", "]"}], ",", 
     RowBox[{"u", "[", "xc", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.7", ",", "3"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", " ", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"xa", ",", "fa"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"xb", ",", "fb"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"xc", ",", "fc"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<f[x]\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"30", ",", "16"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x3", ",", "f3"}], "}"}]}], "]"}]}], "]"}]}], "}"}]}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"PlotPoints", "\[Rule]", "700"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"u", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.7", ",", "3"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", " ", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"xa", ",", "ua"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"xb", ",", "ub"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"xc", ",", "uc"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<f[x]\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"30", ",", "16"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x3", ",", "f3"}], "}"}]}], "]"}]}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
jLKjr9NeTmPe575rm2+zceVT/aJ776dxqWbgv53ubJQOd6Q5f5nGkfED6nlX
2Li6p7vTsWAaWWF7ajMusKn3Nndyu5Lar/bwEXlbNuZYrv9owZtGWOs5l8jj
bJxJa0vd0DeN5tG1T6It2XjjqsJeOz2NqJi60Pl72ZCJ1dityKSRqUea70R2
slFkHJCzehaNaM78Fn7ckDofGt56S6RpZIFp5q6GTWyceOZ076ksjehr75Gt
02bD8avG2ZeLaWS/wHuOviaVh12TuKYqjYgvOlO0QoUNOUuV72GaNKJVs85z
nSIbXhPaM4O1aWTxnF/bYuezqeciFklvopE134/oRMxhQ2qmRJaiAY0YTPYa
00TZKNd0uiBmTCOZovM23qKzqffz8i4Pcxrxr9x82Ge8CdJkYtTDgkYKlJQ+
Dw40UXOVfNkMaxo5vCbHiNvVhN3W5Z8v2tCITsyZjKHmJtzS27P6lD2NJGlE
+F1saILlx5+X2RdpxKSY7ePAasKbElGj9qs0Eh97il9e1IRHblvbXdxpROJ9
5pOMgibkOUg/bvemkbt7bqkVZDfhzJzYCt49Gvnqf2L35vQmfMCmprPBNPJn
mVDEmsQm2Cs+cr0aRiMDQfdeBsc24bSh57IzEVT9PjnRMq+bIDxo+6ThHY3U
v6eVyj1vwsIDC8LZ8TQiLRZScvdREyoMci+cS6aRso59na73m/D3soB51Rca
WagjLfTApwkbDwpn/c2hEWaaisJsjyaY5gtPmBbSSMvcXwazXJpQ1lZUcLCY
Rup2OdxxvtiEUFP1SH0WdX6j33cy7JpA33LLKLmeRlTLdQ0lTzahqSnCI5FH
I2vjNnbfOdyEk+Jfbm3opJHk69u9vPZRefU+lTHtp5G/c80D23Y24YH0nM9b
RmlkYwsn+8JWqt88D+XP0zTCzlxU4LKlCenKacu+MQXI5hqXK93rmhAv3dFj
OkuAPEp+3ste2QTO1o8/vkgJkKgdT5zGVJvgt3zLymRZAdIlxWPdWNyEytAf
J3UWCxCtnhutN2WbEJI+b/lWVQEiXGEw3StJWWF8fPVKAXL0Tx28ZlJ5SNSE
vdMWIEO+j2eFCjZhX6LHz6hNAmR4F2OD5lgjJDmLf2gZCJD9OXv3anQ1Qnyf
RdFTIwHSsb3S7XJDIzyu7rN9YC5ATGXXvQoqakSI6s6iWRYC5Fmg59WE7EYo
3p35Y561AJG9cOLtu0+NMHP57htlI0Ac1V6dePG6EZkxUocW2AuQHzHR6vUh
jXh5f3n6XEcB0s3q/zng0wiVqfWtYVcFiLKTxjvRa41Yoij5JtZdgKQcls4c
tWvEEW+3C09vU3kY8hVXWzVis3OzsLQ/tZ9sq+3ZXY14sEB61fyHVH4OgZev
ohF+OzYvexMmQJQmzqz3Xd2I7PQxpTkRAiTLK6S/cWkjzjW6p4lECZCd8cpD
EnOp+gKm5/nFC5B9A8v26Qk34lb/NuajZAESenjY3oTfAJ/QJQyPDAHiFbAt
7Xl7A1b95P8ayBEg5yVLx3tqG2AaH6I0UChAJHZM+sn+aYC4/EoT12IB8vhX
XJ3htwbMKTnsxqkUIGbiXlMpCQ24vc5cv6JegISYsSYYkQ2IUKFGe54AaWn1
2G/2qAErfw31W3QKkIIH7nTn2w04Mfa2sbVPgKS+aisNu9qAiv+6qg/wBQht
do+VsH0DMgJHbXZPCxD3yd3lZlYN2KEvkFEuRCcfkxZPPtrVgO1viiO5YnRy
1HxGYBqo/U3WPimRopN1WliydHUD7G4EWe6QpZNtkac67yxtQM7xtDjjxXTi
9PReTpF0A76VVP2sUKET9/abD+cIN2Dcy38YmnRyXTSkPWy0HrEdMxK1tekk
UqOxR6CzHrQ6j41JG+mEk5l48VR9PQrdv+3L1KeTByn0Fe/+1qPkdJDrOyM6
kV8WH7Mqqx7u1UcdFpjTybsbastSPtXj5dRg3zwLOhlToLnLvq7HmQ9ees+P
0InOrfSAayH1iJCsW/zBhk7iHt0RS/epx8LP+eIv7an1z81aq+dSjw2d7wsX
ONIJs/G4d659Pf4UHZZWcKGTYJEdQ0pH6iFEBNXeu9NJ7AqzHbfM6nF9gJjJ
3qYT38H0NBV9ar9DWwWl/Olk0e1f/Lg19RgxNvR+GEwnd33gr65cj/Ee0ccR
YXSymlXm6S9Tjy2Vp1L8I+hk9rexeu0Z9VA2+hJBj6ITP02zEdZ4HTwdqhYx
PtDJfPkN6lbddbil0HvqXjKdjMjYlVU31iFP6tmXwS90Uvz63I4XpXW4mi7+
qi2HThTPRAduzatDadeNfacK6UQ1cTKpOaUO4SWJj88V00lB/BZD26g6SOrz
3k5V0gn7gIF1cxi13lBUrkM9nfzxjVsQ5V+HjsPaF+14dDJXxXZ6l3sdkk0z
Ono66ETo2MmS7ot1GOwTHZrqo5MDRvJ2F0/WwbG6W6yHTyfGlRM9G/fX4dHO
X72npukkIFwufXJ7HdQdL5yyZTJIFt9T6s36OpxdKvF2SIxBLk4pHTVQrwNX
xnDwmBSDGFQM9KgoUPVnosxClkEMZeVL+yXqcLpP242lyCDmD+/Skhh1cKgc
+MxRYRCbCYNlVkO1SJ7ayvijySABX3ks49ZavPoUNJ9oMwgz7oTqyppa0Be8
y9yyiUFKcjU3jf+qhcjMlFU/9BnkG+vGw4zMWtz8cG9NtRGDtKnbHjj9sRYb
Ho8Y/DJnkL5lUk4HXtUiVPSI4jYLBhnmdCzd+KgWdqvu+O+0ZhDthCjxGT61
YLMTftTaMAg9X3PVL5daPK48N8vYnkFoJHW49L9aZN/o4xk4Msjy2gs/86xr
8eDjed8fVxnkcp2PfMzuWpQ9Ss4od2eQc779K64Z1GJ/ZsBU9m0GiZLUUHug
XYvrjjZiuv4MIhwy+C9UtRYy1bTY9Q8Z5IEuc5u/bC0sfj2emxfGIKxlNgKX
Z9WCRcv114hgkN3m8v3htFr8aksOWRLFIP2aP4zS+mtgYxVp/zKeQfKiT5rk
NNfggufBkuhkKg/21ZOfWTXI6IwwDMpgkFst9tNDhTV439R8i5HLINPfIj2X
fq2BpG/fXtpPBjmZcGlsy4cayH0Z+eddzCBHDmQMG7+qQdjL73KPWQyS+K0r
bOvDGlgUqlj4NDCI2RsRb+/bNfh8w+sIrZmq1+W7WrJLDQJ4UYOCXdTx39JH
yu1rIMrKtwjqp/JMCG7mWNfgu5hrwRSfQQo/qbRr76nBwOBQ4fA0g+xSUj/g
YliD/LP2j68wBUmA6q+9sTo1mB0QNXRrliCxNuBf/Lu8Bo/4LsfPSwuShSr7
D6+Tq0F299YnXFlBYpd3VvieeA2OP6o+zl0sSLK+Kn0pE6jB24Izw/aqgkT+
9YxCkaFqrMCd0DJNQdKmNaPkZls1lpy9/OuHtiC5sO5zbndNNb7JHfqpv0mQ
qI7YGW77W43iW0KWxgaChNN00C4oqxq3neOSa4wEiV7mvsSfidVwjWuVNzYX
JOfuH/iw7V01eA875m+1ECSJa/10Up9Uo1+kraHgiCApk1gvKeVfjcsr32tX
2QiSxy6162zcq6H9hBn2w16QzPXsPzp6sRrP7lv+3OxI1SeYzHA5VQ3ndc53
iYsg0Zk40tRjUY1h23vzf7sLkqdeQj93mVQjuWld4rrbgqRKurSub0s12mZE
N6j7C5LZA5OS91ZXIytzbmVssCAxsM7xEFeqhpiysXVKmCDZhPuld2Sq8bhY
cjA8gsqTvTHcSLQa+czK/ZJRgqSzt+1H72QV7P8d2yHxQZBorOvMe9BbhaST
LczHyVS+bgXv5/OqcPHOmgPRGYLE+UTwqrDKKpwblE4MyxUkqerGHOvCKszu
6K2V/ilITMNXvRD9WoWlQQ8fyZYIkpoKVvvHD1Wo/661MJolSC4udvyzObIK
rE2n4uc1CJLoTb7jYo+rYHj6aKl4syARFbaMYflVwWLhvpzATkGy9IablO8N
6veeEgbh/YJkxQnr3LUXqhCpcbzk7iiVT5G9xLKT1P42cWoCNCESFDljDf9A
Fbp3fptHFxYi4s+HHxYaUfVn//5zd5YQEb0re9B9cxXWujgEDUoJkeGL2UXO
q6n+uazWNlkh4rp087X/llVhe/XGGacXCxGVW09eb51fhcc3z3xxUBUiKenc
wkUzq3Av2X89baUQ2TVSyq+aYiFLfcf3C9pCxEGQ7VfRz8LZAz/Z/20SImes
bcVKm1lInrn9Z5++EPlvd37ix2oWnC/dNaAbCxF9y9UyD35Tlrf52WcuRPre
q65K+MaC3H6dRXYWQuSwt4xnYiIL2ltKaQ7WQiSMNumf+paFwU9nPo7ZCBF1
7wrLZ2Es9NsFnjttL0R2x67vzr7Pgk2F55cjjkKk+/VSrY6bLLj+cqiovypE
3ujNM+93YoF5eYlHu7sQUZ4o7Jo8y0LxUTvd8ttCZP/mS6+MrVgAKy5ju78Q
OZS1Ud/ZnIUlAqkl2x4KkezN9469NWAhJuXLp79hVL56Nv+SdFhw/LAvQjtC
iGiPirxmqLPw3jJZUTVKiHSUXi6xUGDBP1Div8h4Kq/aPC8/KRbY19bsiEmm
+km87pbNZKHmn3nv+gwhcvZks2flWCWkouhvo3KEyPlI5/1q/yrxTfJ616tC
IfLi8np7H04l5szonVIqFiK1u6RffKusRGWC2qu1LCFybms5d7qwErXPx/cs
aRAig+KPTDy+VsJ77o+iUB7lrM7a2oRKROJgfVinEPn1sdeTvKnE6SFeilI/
lY++eKX7k0qc7RF6EcAXInI1G/dM+Vei4UnPXO9pIfIufD739s1KjBaXHGIw
meSC0rZV7U6V8E2/rjlrFpOk7Ko5ccC2Egdav0gMSzHJDwVlScaRSvwMH8o8
I8skO5oUfXx3VyJBdGTSZjGTbAw+2rJgayU2CwyIdKowSWt1iv+t9ZRjUl5P
aDLJKpHmvlH1StwImb2rW5tJws0/XfmgWIkTs4/nnt7EJHO6THZumluJdF3X
QnsDJnnq/pdXKVKJtJ6Ap6NGTFLloGy6Y7ICQ626rqfNmST0zNrqkb4KvA2O
7rS2YJJN9C0rUporMPFTWrXpCJP4xvYfMK6pwI+k7UNdNkwya6xuYc+fChSx
ZxdX2TPJ0g/mB4uzK3AjrNjZ1JFJXsp6OfmkVCBcyDLe1IVJbpe81jKLqcDp
ifqESncmuYEU884XFTi3bjhny21qffvUlrzgCrQuqbTR8mcS06ot8h99KiD8
9GNpfDCT5OapZTtcr0DY9z0lKWFMsiLAqBoXKlDq+u/p9ggmyVbIq+XaVMDY
SfFy6jsmWSMlw887VIF1ixfUf4pnEuPkOf6fTSuQf1BMUieZSZrmhkt76Ffg
l34+a1sGk8hNMDos11VA/MK8WO1cJpk5R0bj0ooK8FWPGb8vZBJmg7GNlUIF
9j+8eO1jMZMkCGwesJSqgMXdG86bWExSuDBucLlIBUK/L/J4V88k8k7ex7Qn
y2H6yVv2BY9JQvLSVCz6yvFuRZvHok4mmU/iz+5oKYfTfsmrqv1MsnLCtMa8
phyeucXXJUeZ5C7/+4yQv+XQ/upn6j3NJDGf4xOjc8tx2Fb0wy2mMKn4oB5a
kVoOlQjvOtFZwqRnE92pKK4cp+8WhC2SFiYirVInOS/L0ZwWflp8IWXesvjV
j8oxw/HilN9iYTKzgvSa3ilHRL2oygNVYbLTfK6Zl1s5GspfLFRYKUzenixf
7HOpHJbi+Yv8tYXJit59Jt/PlsN4IuXj7U3ChF8VGiJ/pByNlyPEZxgIk3+r
PSwN9pSjLXzv9DxjYWLy4908r23lWDU7bIKxW5g4xhRep20sxyKR2u8uFsJk
4N+vQ9tXlcMtiavgai1MIq5qb4hdVg6vrpatQqeECfFTmF29oBw/z7i5ONgL
k6tvt3nriZfj1qP6zScdhcnNESfBAkY5OLt0/jZdFSYn7j1ylRktQ1L6wX/t
7sJkaGtzsXd3GdQ/Xa5zvS1M/n6qf5LBKQO3axmr6x7Vj0dNpEZVGWbXPDvR
HixMvlgOB2b+LkPDHvF0hzBh0pflNTwvpwxL3IxeuUcIE///bOc9SCnDmy6Z
0PNRwiRZXeenQWwZ/rQ0HWqLFyafmpt6v74sg23wxbiuZGFyfXt6w6FHZYj5
NfHTJUOYFGrLfvlypwwrtsuNNOcIE9NV6UssPMog78RIqi8UJkf2Zx2Y61SG
VM3mTdbFwsS8RvV6qF0Z8sLuH7BjCZM7Bk8McbQMEsa/b+xvECZX+E86FPaV
ge4teLGQJ0wWnr/jlmdUhjOOgkMFncIkWPl2lv+WMjh2Thnu7hcm7kvU/5Nd
W4aMd/6v0vhUno1VXY3Ly8CJE8iqoBzMVXNKoCzyyam+n3KzWdmkJ+V9GUfm
a4wKE53jChLKlDuLNe5HUI49Haf7n2oZZMf+uNwZozz55AlfuQxXd87ebTUh
TLjHc8PmLCvDi92eDi6UsxwiNbhLqX4ODN8NodzDZWUlUZY43vCjmLK+8JY2
C8rvnOI3bZ0UJlWrpze8WFKGyhe7VDWnhImkzP7eFYvLMBGZs9WEsl60q++E
InV+otedPEu5IHJY8S9lh0T5F68oN5W077lIWaigR0pmWphA8nt6qgKV/58T
q9dSXtd6f78fZfPSyl27Kfsse99rSflZXabfXcprq1pUpuTLkMPWehdFOXAX
Pa+IclvL27zvlI00HI9FUJ7dJcvhUD58ed2kI+W1ffenpynnLzULM6T8P2bU
H5M=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  Epilog->{
    PointSize[0.02], 
    PointBox[{0.9, 0.7472729467941909}], 
    PointBox[{1.4, 0.3125299023003551}], 
    PointBox[{2., 0.5413411329464508}], 
    InsetBox[
     FormBox["\"f[x]\"", TraditionalForm], 
     Offset[{30, 16}, {2.3, 0.25429478782327974`}]]},
  Method->{},
  PlotRange->{{0.7, 3}, {0., 0.8336171273356614}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
AnTolGX+P5Li2H0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  Epilog->{
    PointSize[0.02], 
    PointBox[{0.9, -1.3936398605598874`}], 
    PointBox[{1.4, -0.1995278360630615}], 
    PointBox[{2., -2.}], 
    InsetBox[
     FormBox["\"f[x]\"", TraditionalForm], 
     Offset[{30, 16}, {2.3, 0.25429478782327974`}]]},
  Method->{},
  PlotRange->{{0.7, 3}, {-2.998678552876808, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SearchForRootsF", "Subsection"],

Cell["\<\
SearchForRootsF collects potentially three sets of roots as described below \
and returns  Flatten[{soln1, soln2, soln3}].

soln1 = ( Points where the initial samples turn out to be roots of f[x]. )
soln2 = ( Roots found using Brent's method on f[x] where f[x] changes sign. )
soln3 = ( Roots found using GoldenSecant method on f[x] where Abs[f[x]] has a \
local minimum, and f[x] does not change sign.)

Finding the three sets of solutions above is similar to finding the solutions \
using SearchForRootsU above.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The roots found are screened", "Subsection"],

Cell["\<\
SearchForRootsU or SearchForRootsF returns a list of roots found.  Only roots \
that pass the test specified by the RootTest option are returned by \
RootSearch.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Changes to Brent's method", "Subsection"],

Cell[CellGroupData[{

Cell["Tighter convergence check for Brent's method", "Subsubsection"],

Cell[TextData[{
 "As written by Van Wijngaarden, Dekker, and Brent the method stops when the \
root is trapped to \nan interval (a < x < b) with (b-a) \[LessEqual] \
(2*$MachineEpsilon+$MinMachineNumber).  I was never able to find an \
explanation for why $MachineEpsilon is multiplied by two.  It looks to me \
like this is done to account for the fact that the distance between machine \
numbers has sudden jumps at some places.  For example on my computer \n{",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"8", "-", 
     RowBox[{"8.882", "\[Cross]", 
      SuperscriptBox["10", 
       RowBox[{"-", "16"}]]}]}], ")"}], TraditionalForm]]],
 ",  8.0, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"8", "+", 
     RowBox[{"1.776", "\[Cross]", 
      SuperscriptBox["10", 
       RowBox[{"-", "15"}]]}]}], ")"}], TraditionalForm]]],
 "} are three consecutive machine numbers.  The distance between machine \
numbers always increases by a factor of 2 and only happens at powers of 2.  \
There is one exception for machine numbers adjacent to 0.0.\n\nIn my \
implementation I account for this using my function Ulp2 that ensures each \
new estimated root is not a number that was previously considered as a \
potential root.  As a result my implementation of Brent's method either finds \
a number where f[x] is exactly 0.0 or returns one of two adjacent approximate \
numbers where f[x] changes sign."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Brent's method is modified to see if it's converging on a pole\
\>", "Subsubsection"],

Cell["\<\
Suppose we are trying to find a root of Tan[x] starting with samples at \
(x=1.5) and (x=2.0).  Brent's method can be used here because Tan[x] has \
opposite sign at the two values.  However, Brent's method will slowly \
converge on the pole at (x = \[Pi]/2). My implementation of Brent's method \
uses a function called PoleTest to see if Brent's method is likely converging \
on a pole and quits early when this is the case.  For more details see the \
comments near the implementation of PoleTest in the code.\
\>", "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The GoldenSecant method", "Subsection"],

Cell[TextData[{
 "The GoldenSecant method keeps track of three points {x1,f1}, {x2,f2}, and \
{x3,f3} which are used to \nselect a value newX which is the next estimate of \
the root.  If a sample is found where f[x] changes sign Brent's method is \
used to further refine the estimate of the root.  On each iteration newX \
replaces either  x1 or  x3 and the points are shuffled to ensure the \
following are true. \n   \[Bullet]   (x1<x2<x3)  or  (x3<x2<x1) \n   \
\[Bullet]   Abs[ x2-x1 ] \[LessEqual] Abs[ x2-x3 ]\n   \[Bullet]   (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["f2", "f1"], "\[LessEqual]", "1"}], TraditionalForm]]],
 ") and (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["f2", "f3"], "\[LessEqual]", "1"}], TraditionalForm]]],
 ")\nOn each iteration a secant step using points {x1,f1} and {x2,f2} is \
considered.  If the secant step considered is larger than Abs[x3-x2] a \
Golden-Section find minimum step is used instead.  Also if the direction of a \
secant step is in the opposite direction than the previous step then a \
Golden-Section find minimum step is used if the secant step would have been \
larger. This gives a new estimate called newX and we always ensure (newX - x2 \
\[NotEqual] 0) and (newX - x3 \[NotEqual] 0).  In the event the algorithm is \
converging on a local exremum the secant steps are consistently much larger \
than Abs[x3-x2] and the algorithm will quit before reaching the maximum \
number of iterations.  Often times the algorithm determines that a root has \
been found once it narrows the root to the smallest possible interval for the \
precision being used.\n\nIt's well known that the secant method converges \
fairly efficiently, but often fails to converge. By overriding the secant \
estimate with a Golden-Section find minimum step in some cases we can \
guarantee that the method converges on either a local exremum or a root.  "
}], "Text",
 CellTags->"Golden-Secant"],

Cell[CellGroupData[{

Cell["An example when a secant step is used", "Subsubsection"],

Cell["\<\
The next two cells show an example where a secant step using points  p1={x1, \
f1} and  p2={x2, f2} gives 
newX= 2.52157 as a new estimate of the root.  This is a case where the secant \
step gives a better approximation of the root.  In a case such as this the \
Golden-Secant method uses the secant estimate because the new estimate is \
inside Interval[{x2, x3}].\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "+", "0.95"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"1.5", ",", "1.64", ",", "5.0"}], "}"}]}], ";"}], "\n", 
 RowBox[{"newX", "=", 
  RowBox[{"x2", "-", 
   RowBox[{
    RowBox[{"f", "[", "x2", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x2", "-", "x1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", "x2", "]"}], "-", 
       RowBox[{"f", "[", "x1", "]"}]}], ")"}]}]}]}]}]}], "Input"],

Cell[BoxData["2.5215716044124084`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f1", ",", "f2", ",", "f3"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "x1", "]"}], ",", 
      RowBox[{"f", "[", "x2", "]"}], ",", 
      RowBox[{"f", "[", "x3", "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", " ", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "f1"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x2", ",", "f2"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x3", ",", "f3"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<p1\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"12", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "f1"}], "}"}]}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<p2\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"12", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x2", ",", "f2"}], "}"}]}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<p3\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"12", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x3", ",", "f3"}], "}"}]}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Epilog->{
    PointSize[0.02], 
    PointBox[{1.5, 1.0207372016677028`}], 
    PointBox[{1.64, 0.8808515513459381}], 
    PointBox[{5., 1.2336621854632261`}], 
    InsetBox[
     FormBox["\"p1\"", TraditionalForm], 
     Offset[{12, 4}, {1.5, 1.0207372016677028`}]], 
    InsetBox[
     FormBox["\"p2\"", TraditionalForm], 
     Offset[{12, 4}, {1.64, 0.8808515513459381}]], 
    InsetBox[
     FormBox["\"p3\"", TraditionalForm], 
     Offset[{12, 0}, {5., 1.2336621854632261`}]]},
  Method->{},
  PlotRange->{{0, 6}, {-0.04999986731769568, 1.9499999999999924`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["An example when a secant step leads us astray", "Subsubsection"],

Cell["\<\
Suppose we are trying to find the roots between 1.495 and 4.8 of  \
(Abs[Sin[x]]-x/10+0.313).  Further suppose we started with the initial \
samples that the next cell displays. Based on these initial samples we would \
be wise to look harder for a root near samples {3.095, 0.0500758}, {3.195, \
0.046882}, and {3.295, 0.136306}.  \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xpnts", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"1.495", ",", "4.8", ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"Sin", "[", "x", "]"}], "]"}], "-", 
    RowBox[{"x", "/", "10"}], "+", "0.313"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"xpnts", ",", 
      RowBox[{"f", "/@", "xpnts"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", "data", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1", ",", "f1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x2", ",", "f2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x3", ",", "f3"}], "}"}]}], "}"}], "=", 
  RowBox[{"Take", "[", 
   RowBox[{"data", ",", 
    RowBox[{"{", 
     RowBox[{"17", ",", "19"}], "}"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQ/SZwh1zr6+/2r5pVut5P/GTf9hok8NPeNt7Yu7P4
k718K0jgt/1yjzpxS51P9jvlQAJ/7NUvH5/ks+ejfRBIe+A/+9PzLBwrVT7a
Q8z7bz/pq/D2W6kf7A9/1YjpP8TgYBW7o+0+83v7CYdAAowOdTk+lrpf39gD
JYECTA5Gy08aCyx5Za8JFmB2yPhwgm2J6Av7byDtX5kdJqxlEl3o/xRqHovD
/LpZH30jHkHNY3Vg5Mxfei/nHtQ8Nocmno9NuY+u22uBBdgdZohKpicoXISa
x+4w6yfjt105R6DmcTg8qFT81LF4JdQ8TgeHFVv7XzKsgJrH5WB04VtNTdFB
qHncDvN+ZH7YtukM1DxuB+vCbO28C5eh5vE4BNtsnneD7ybUPF6H3wGTWfpY
79nHgs3jc9Awta2VCX4INY/fYcoXV8kNhY+h5vE7GAbZlbpEPLV/VCWyzj1R
wOHQr9XZ2ozP7T0eAgWOCzhsj3SeFZL+wn6dO1BAT9DBhuNRaFTbS3tRkMAU
QYeIiHsve6Je2VcDtT/8BeSLP2f98+AV1Dwhh1MaoU514q+h5gk5cF3esnzb
n1dQ84QdXP4kaktMeGUPAHOsBOM=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{1.495, 0},
  Method->{},
  PlotRange->{{1.495, 4.795}, {0, 1.1606288334080497`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.066, 0.066}, {0.023212576668160994`, 
   0.023212576668160994`}}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3.095`", ",", "0.050075797612169515`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.1950000000000003`", ",", "0.0468819606711155`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.295`", ",", "0.13630634404910463`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
In the next cell we see that a secant step using points {x1, f1}={3.095, \
0.0500758} and {x2, f2}={3.195, 0.046882} gives a new approximate root of \
4.66289 which is well outside the interval that we suspect contains a root.  \
In fact we already have initial samples near 4.66289 and found little reason \
to suspect there is a root there.  In a case such as this the GoldenSecant \
method decides the secant step was a poor approximation of the root and takes \
a Golden-Section find minimum step instead.  So the new estimate of the root \
is approximately  ( newX = x2+0.381966*(x3-x2) ).\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newX", "=", 
  RowBox[{"x2", "-", 
   RowBox[{
    RowBox[{"f", "[", "x2", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x2", "-", "x1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", "x2", "]"}], "-", 
       RowBox[{"f", "[", "x1", "]"}]}], ")"}]}]}]}]}]], "Input"],

Cell[BoxData["4.662888359248664`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f1", ",", "f2", ",", "f3"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "x1", "]"}], ",", 
      RowBox[{"f", "[", "x2", "]"}], ",", 
      RowBox[{"f", "[", "x3", "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "3.09", ",", "3.32"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3.09", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", " ", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "f1"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x2", ",", "f2"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x3", ",", "f3"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<p1\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"12", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "f1"}], "}"}]}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<p2\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "12"}], ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x2", ",", "f2"}], "}"}]}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<p3\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "12"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x3", ",", "f3"}], "}"}]}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
qnLFSgj/AwMF+3c=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{3.09, 0},
  Epilog->{
    PointSize[0.02], 
    PointBox[{3.095, 0.050075797612169515`}], 
    PointBox[{3.1950000000000003`, 0.0468819606711155}], 
    PointBox[{3.295, 0.13630634404910463`}], 
    InsetBox[
     FormBox["\"p1\"", TraditionalForm], 
     Offset[{12, 4}, {3.095, 0.050075797612169515`}]], 
    InsetBox[
     FormBox["\"p2\"", TraditionalForm], 
     Offset[{-12, 4}, {3.1950000000000003`, 0.0468819606711155}]], 
    InsetBox[
     FormBox["\"p3\"", TraditionalForm], 
     Offset[{-12, 0}, {3.295, 0.13630634404910463`}]]},
  Method->{},
  PlotRange->{{3.09, 3.32}, {-0.0011473348045338838`, 0.1584624206908734}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["An example where we are converging on a local extremum", "Subsubsection"],

Cell["\<\
The next three cells show an example where my GoldenSecant method is \
converging on a local exremum.  In a case such as this a new approximation \
based on the secant method is far outside of Interval[{x2,x3}].  When this \
happens on four consecutive iterations the GoldenSecant method decides it's \
converging on a local extremum and stops trying to converge on a root. When \
the algorithm quits for this reason the latest approximation is never \
indicated as a root.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "+", "1.5"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"3.0", ",", "3.07", ",", "3.25"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"f1", ",", "f2", ",", "f3"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "x1", "]"}], ",", 
    RowBox[{"f", "[", "x2", "]"}], ",", 
    RowBox[{"f", "[", "x3", "]"}]}], "}"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.5100075033995546`", ",", "0.5025616595929815`", ",", 
   "0.5058703239194537`"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newX", "=", 
  RowBox[{"x2", "-", 
   RowBox[{
    RowBox[{"f", "[", "x2", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x2", "-", "x1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", "x2", "]"}], "-", 
       RowBox[{"f", "[", "x1", "]"}]}], ")"}]}]}]}]}]], "Input"],

Cell[BoxData["7.794691664959824`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2.99", ",", "3.3"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", " ", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "f1"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x2", ",", "f2"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x3", ",", "f3"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<p1\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "f1"}], "}"}]}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<p2\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x2", ",", "f2"}], "}"}]}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<p3\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"8", ",", "8"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x3", ",", "f3"}], "}"}]}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2.99", ",", "3.3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "2"}]}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", "}"}]}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV13k4VV0bBnBxsPcJyZwhU0UZGpChchaRSCERSiRERfH6MhWiNBEaVNKM
EJIyNlB6ZUiGlwYlR6hkKDIrfff+61y/a59z7bOf9axnr1vZY/9mL14eHh56
Fg8P85lTkKR4rE+QXNttHTPsyuVUzT40UQRzMoN8W2Cup3fTN/iZiO+WIlhS
elWMdb8gyXArMgiDI8K7v4gPCJK4xC4jXtjWTD/v1qAg+aQet1B8O5cz2vpx
dcWQIDH/pHfewIXLMZ5Uc5keFyRrNn15m+TI5bx5wjtwmJ8iUaGPZXs3cTlh
0ZxNcmIUcf003i2+nstpkYt0DJ1PkaFlyWdyTbgcXR2+4i4NiqQqp6uKreJy
blr19vgYUOT4kPZyAz0uR4Ir7jdlThF5zrlnBku5nNVWJles7SkS0H7PJW8x
lxPwsPFiqRtFOBNhbc0LuJyc1LT+FX4UuZVeu7FHkcsZOdo252UoRdrdDy+9
KsflDJmIt8nFUsSsr3pxsTSuH0r8fegcRRr+vhBuFudyWCX7ByauU0SH6loW
JcrlyAacW3kklyKms8wbjIW5nJ6Z0kW1Zbif1ftkLzaX8yTOtEfrJUVOSFr9
EKK4nCuX5vy+2kKRL3tLF7zj53Jqt6SpNcKssZ9nG+EpUUN73laK6KqICdTA
Lic9sr1hP6+506WwTFih09I3FDlXzKeUCidv21ZY8ZYix06VOOyEE+ff8e9q
o4jd8z0HfrC4nNg04071TopUl2rtkoXzAnWN3eCG/Z5HxeE3ZMmVC7CDlPtd
IXhhu6QD72eKNBlmsP/ycTkvJAeqP8D//fYT6YZ5j1/JP9NNEePo/iX34Ajf
iciRr/h+fW6xJZyhP/hxyTfUo/to0lr4NX+34U74oahywBpY4VbDr3qYnZ9p
shx+3Jax+04vRRaqjarNg6c2ONi49KG+vTH0d14uJ1i7YH7FIEUypaKUEuFh
QbOIUfje3lWvTsH7Olvbl/ygyKXs2MPHYI/zk6kX4Me9r36GwdZTRG7vT4p8
j5WR9YaVqhqkpYbRfwK5wWvgWtcB0X2jFHmv27Tj5ywux0w/8sBNePrQ6cd9
cLno3MY3cEZtq+JX+GGlboLJGEXqQmXH2+Hriw8JS49jfdd4fquDg0bZ7OcT
FHGnp1ozYYV4dT6Z3xRZMqLT7g1fGvxVbwl/PLBn2S5YzLb8Ujgs4hxywg2m
xB21O2ANf1kLJ3jkUoxzxh+KXCwLnrGEa9M+3dP9SxHLLRcdtOGDj89vt+Ol
iflC//QpHvSvgrtaDGwlde7cOLwvUmP4ITwvJiF2BN5p+vy4DB9N+ptEwgdh
6+ofBR2wqp3atc+waosV7c9PkwOGFa/q4MY+nqJTFE1O3zlfdxNe66ZVUAHP
3H+meB0uanbOG4NPNl0PTYVTSwsyPGiaNNjtN74I7z7uedGITRN+z21C8fCM
SnXI99k0sdfxKQ2FA5JHgpSEaFLwb4ZPMNxNKwc4wquCkhX+B9f+DPV9Du9T
O3npAHzhqYZLijBNgoYeNe+GNV0SVlnNocnyPVudtsLX6x/pR8EDA3c8HGAx
k286RTD3XFagPTyhZqKpIkqTVxYVt23gytFh+SlYxXmV1XrYJclxJkuMJjm+
PplGcD0rZqoD5jWoEzaESci9MUlxmlzW6gjRhxe5UT+OwDkJsu668LBmWYez
BE149DsCteGT1QrPaCmayFvfyFKFf1fGqK+GS/jkIlXgA+W9Cf5w9e/Tzsqw
Y1Hhjv/g8Qe2CoqwStrG36nSNNm+yosryzz/9Qe7GmAPvrPt82Dqyry6WTI0
WSFS2CEDDyb1XPaG6/vbh6XgssjD+svm0YTdXLZFHNYK77rmAcc8vBwqBt84
aClwAe5r8789F471k2ydhIVGpvlFYfttuYGVsjSht90UEIarHMXbRuFA9xX2
QrDR5lATdTmalGeXps2GlSzNRePh/SJ3Hdlw/8r2XEd5mnyXmDcmCLutWCt5
EjY0276HcbNW1qFH8NLSC10CcMmC/21QUqCJe1BfNz+sofShYDP8vEzQj/E1
ORPZY7CshewUCz4mJtzbCw8tV1FlPCH8j638fJokJkqX8zH9T78v3gT76PG5
M+5gcRSPwLFKPfyMN/Okxz6AJ+2e5PPC/06zB3vg1zWn3RkbjB9wkFGkydwT
tpKM5w+uXnAYFn33OH4WnNR76/Q9uNPX044xq4f61QlbmfLKMg7m+rtIKNHE
YWfyVx74+4eWZ+tgwZdKZYxd3xotDoX3/HMziXFj843Eu3CMt4w/47WvBSba
4a03jtkwLqrZ5yaqjP2r1KvHePG/zVWmsPk3U2XGqRUG2v+DvcfOzmU85/G1
C3dg2w3vBRhHF7P+vIcFvkrOYjxasMdTSAX7t2Y9D2OfvMY6Y/jdcACL8ces
lToB8C+PJGHGNumpKbfh9/PuyDGWyLnGaoXvyVtoM24ruOEvoEqTlr93zRnf
KL31Th82r2zdydi7Is3UF57xfhHNWPNlRk4KPPk9OJPxcH2m1Ct4uc3PZsYl
LdlRf+Ab57R4mXpGfMj5rr2AJsYlS1cyNvuct8Ud5n8y5s+Y3Zv/NAn+fjM6
h3HjjwL1SviL93+DjJPHHp4dgQdn9+ox67n9T9HvhQtpMpFYeYSxCqvUeyvj
UY9mxnlznxiVwTluP48w/RIkU57WB5t5fuIyNlJ8JqKwiCbX1yeZMf1Xpfnv
50jYLd9clunXOJ2X1vfhNB2LOMabjWqKPsP7koX5mH5vt6g/Za5GE6OpbzOM
b21qGDkIy0//iWH2h49D045MWO/DW2EKHvFoXTFbnSZlBm1LaVgoor2tEU73
npfL7L/mox1mvItp8mGHgxOzPy+d7szTgRP0HClm/y643BOdDAtFZBwUgVc/
HFiyfQlN1occiWP2P++jH+fj4QM7u12Z+VD9bGjmKbxcXUiXmR9bGkablTVo
8ndj9qAEvPf7n7CvsOK40lVm/iwb+tsto4nnq8k+z8ynsfFZNlYwJ2QykZlf
0fwCqrkwd0/PRXk4RUmkLlCLJi+vj39SYua943y5GW2aRKjyb14Cn9h/pEhn
KU1qPRPua8DrTnTb+cLzQouktODnpdknWuAX8z4MLWXmnbz+WPYymujoRvTp
wdmfbZq2rqBJZJJGvylTz+mCffFwYFd0uhkzvyWkqEpYkBXsuY6pv/lHY20d
mny6p/fLkvl/mT45LF2a7M0S2mIHn/I/cvy+Hk1M25RUd8Lrj3erfIX/+WG2
chcscMPiqfxKmvTW89t4Mc/bJDx6HNbucU3yhcN0Uzx26NPkTOBu50B4z1TB
mtmGNJG53zF2FN4Q2/3LczVNNtbv3J3H9LPakalkmLp6cCafWY+XCrNqYJ9U
/5QHTP/TW0W01tAkXJ3qLGHWM65GfRS+vKczsxLWPpvneoxDkyhDTdU25n14
LeRluin6bUjxORvnh0ZjyddvYafOy6PC8JmO+y30WuyX4TGtufBs5b5OP9g1
xCVXGmaluf7WM6NJxUzVlwXwWJbp8ipzmqw7rmdG4PeFQle+rKeJTYNnVhic
6MP+T96SJiHbzesi4HVy1Gx7ODmsazgaLojiCy+HC7yd7E/DcRumXC5Z4fe9
C5xTYePOr7JW1jQp7LMIKYdvC1Wm5NpgfmzIZ7FxfnMpr2jugvkCTT6JwKKB
T9mytjjPzEl8Ig4felsaFguvuOsVrwA73sp3cbOjyVu74YDlMGVwTXauPU3+
JCRucoH9doWmBDlivtm0OeTDB5XFW7Pgd/EC9YVwVEfOnA7Y63eZ5SP47Dbu
UcutNNmx+7F9FVxkb7F/vhNNpp2Vsz/CPGaSZtXOmL/vAt3ZON+eXXB/QM6V
JqeMtH75wkU930jlLppIh7/IN8T5u0Lj8ZcR+MqjFnEC1wQkxC3ypMnZuofh
6+CPf/TenYRnHLqd7eFZUjH7bb0wXyZ5bP1g63UK19q9aRJ8Y6nqLbgzw256
3JcmbT7bvOYgHwj5lBVqHkA/+xY4TcA+Po3Rtw7TpDjFqUQH+aTJZ/18nVM0
maqQeJ6C/PJjTaX70WQ8v+Y9XVPkG/Gk6OnO2zjf1ImphSL/mHXf9nTJR/9P
srbXIB+FF9KLOp6gnjmfw0uQn8pjmwojammy+8UTjWLkqxLN1P5Pb2iSuUW6
ZxD5q9j2bviGbly/PGr7DvmsMkj+ffNP1OuqZP1T5LdWqeYz3jO43xwJb2/k
u6vxp/rKZrOJJavqmTXyXyArXWqJDJtsDDJYo4B8aD3Jl5K+kI33eXP/M+RH
ncEXfatWsAnvqzIRC+TLxuIT3WeN2cTc8PKlceTPf/4m6o1tYBPad3HXGeRT
VYvpLUFO8KomnRHk2/ln1ijkwIafFXsldyB/tUb2dMGJkQfS9GGhXayD9s5s
Ih4jrRUOj0QIX1zhwibPJ8Njed2Qn4oU3//cxiYvWJedxdy5HM9FZq5+bmzi
vHEsaqUHl7PDL3ZhOlxrGDzmBDs9rB74CGtunAwIh61NN0ZYu7NJwmue8ApY
d4fjdY2dbKJ+VL7VaheXw5/s09nrwSalk1FZ7p7ot/bsLOVdbPKOzI2MgadU
BwKc4Qvmt1wy4MH7Abw1cIBflWo//KY+TDXTk02EDkvNBHuhPhJP+jrgE+N3
+a7Atdv+PpD2YpO4KZM5T+GnvTFmx+GkyP0GLG+s57IqoXLYeETAUQ0uCKZa
x+DXb66FWsE5T62uanuzyXkl/dt+cAZ/vJc33FXb0JwI/x+F8vC3
     "]]}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{3., 0},
  Epilog->{
    PointSize[0.02], 
    PointBox[{3., 0.5100075033995546}], 
    PointBox[{3.07, 0.5025616595929815}], 
    PointBox[{3.25, 0.5058703239194537}], 
    InsetBox[
     FormBox["\"p1\"", TraditionalForm], 
     Offset[{10, 6}, {3., 0.5100075033995546}]], 
    InsetBox[
     FormBox["\"p2\"", TraditionalForm], 
     Offset[{10, 6}, {3.07, 0.5025616595929815}]], 
    InsetBox[
     FormBox["\"p3\"", TraditionalForm], 
     Offset[{8, 8}, {3.25, 0.5058703239194537}]]},
  Method->{},
  PlotRange->{{2.99, 3.3}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Ticks->{Automatic, {}}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["An example where a change of sign is detected", "Subsubsection"],

Cell["\<\
The next example shows a case where f[x] has the same sign at x1, x2, and x3 \
and a secant step gives a new approximation inside of Interval[{x2,x3}].  \
When f[x] is sampled at the new estimate we find that it has opposite sign \
than it did at x1 and x2.  If f[x] is continuous over Interval[{x2, x3}] \
there are two roots in the interval, and Brent's method can normally converge \
on them easily.  So in a case such as this my GoldenSecant method refines the \
approximation using Brent's method with starting values {x2,  newX} and \
{newX, x3}.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"x", "-", "0.2"}], "]"}], "-", "0.1"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.4", ",", "1.1", ",", "6.0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"f1", ",", "f2", ",", "f3"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "x1", "]"}], ",", 
    RowBox[{"f", "[", "x2", "]"}], ",", 
    RowBox[{"f", "[", "x3", "]"}]}], "}"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8800665778412416`", ",", "0.5216099682706644`", ",", 
   "0.7855195169413189`"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"newX", "=", 
   RowBox[{"x2", "-", 
    RowBox[{
     RowBox[{"f", "[", "x2", "]"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x2", "-", "x1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"f", "[", "x2", "]"}], "-", 
        RowBox[{"f", "[", "x1", "]"}]}], ")"}]}]}]}]}], ";"}], "\n", 
 RowBox[{"{", 
  RowBox[{"newX", ",", 
   RowBox[{"f", "[", "newX", "]"}]}], "}"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.118608579227703`", ",", 
   RowBox[{"-", "0.4408418781324325`"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "7"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", " ", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x1", ",", "f1"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x2", ",", "f2"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"x3", ",", "f3"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<p1\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"4", ",", "8"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "f1"}], "}"}]}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<p2\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x2", ",", "f2"}], "}"}]}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<p3\>\"", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "10"}], ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x3", ",", "f3"}], "}"}]}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
+7Usu01UZNK+fnv4bVxP/WR5dW0qetXKsVsdjes376P2dCcVTR9JqrOK4RLz
3eNr3A2oaFZRZXYY2/y5zQatvVREEN8C3GK5xKzLDp1Xh6io88+mRLc4nM86
k5Oa1lT0TUnQ/iu25fJjoSk2VORka6BvfIdLFL/x/BhkR0UPwyPXLY3nEoMr
wxZmHKloUMx6hwu25LV7yufcqGigZtnRWuwLq0rdTa5S0Yk83vrTd7lEqm/D
vQpvKnqQsSCZi93+4WPl+gAqUrIKc5vE/rdmeCTtOhXRfsd80UzgEmuDZ8Rk
wqhoXof/sD22zRf+LSGRVKR2uvlbEnb4RmmbPzFUdFTri9db7Fc3lYKd7lLR
34WVKr+w2f0bc3qTqEj4dmwv6x6XYGjv6jBLpSLN3coZ/2EbRu3/U/WIil4s
NHlZYXsMn1DYnIXXp+B90g378Y7zex7nUdGNpE2WAdgf4vxc6YVUVDPAto7E
5icj74S9oCJr7gPneOzNesnl82VUtGhoHHkP+3Ri3qArQUXMHxMVd7FjuOXU
bzVU1OgVvngbu9qwecPBRir6OKdseh2bm/LFqq4ZX1+sPPsStsJvtt/Wd7he
XZaytthm+/4+zvpARTk88zH62L4ZlFbWZyqSLiuSU8HOm6fPRPRR0YZXISU8
2D0H1ZbzDOJ67Aw60YX3g5azVc99BH9fsoieha3Dt8dxiENFT6+q9F/GdrC2
jLacwt7NfrEDO6HgbGnjT5y/DskHPNgNQpe/6vyhosj5ZzEVuF6/jgcL5i1Q
UZNGz10PbAvR9EPRgjRU3Kjx7jOuf/CZQq8lNBpqTvcTuI5d/Koq7bI4DVlY
Vxpp/D8vjv1T1nQa2sq9wmeH87WzalK2eTkNbXRX95jH+TtP/6eru5KG3lF3
zkdgt9bLRShq0NCx6+raaTi/C3KaxXFraejPVr1JZew1l//7IriJhoLTD5ak
4bzfUjqqztlOQwLUOc8o3B9lno7mNoiG9guOXFnE/cN+d82jTZ+GVlZcDD6H
beifUFdkSkN8yhofNHG/eXQ9IVUO0JAL33P6TdyPj9eWSCVY0hB3Ps31K+5X
/t4PJ71tacjrrNcBn3AuUbVNalH/Ag1VSW3j8cXzwNzA8W3qZRoya93LeR7K
JfoOVCXMX6OhcK9w1lgIl/jr5LapOJCG7umFm+zE82Rj8ttzSnE0NLA1+Hcp
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
oQeq29NGkkfhf03wEbU=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Epilog->{
    PointSize[0.02], 
    PointBox[{0.4, 0.8800665778412416}], 
    PointBox[{1.1, 0.5216099682706644}], 
    PointBox[{6., 0.7855195169413189}], 
    InsetBox[
     FormBox["\"p1\"", TraditionalForm], 
     Offset[{4, 8}, {0.4, 0.8800665778412416}]], 
    InsetBox[
     FormBox["\"p2\"", TraditionalForm], 
     Offset[{10, 4}, {1.1, 0.5216099682706644}]], 
    InsetBox[
     FormBox["\"p3\"", TraditionalForm], 
     Offset[{-10, 4}, {6., 0.7855195169413189}]]},
  Method->{},
  PlotRange->{{0, 7}, {-1.0999999578676234`, 0.8999999706622367}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["An example where we need to prevent slow convergence", "Subsubsection"],

Cell["\<\
Consider using the secant method on the following function with starting \
values 
(x1, x2, x3) = {-2.23, 11.9, 12.0}.  Several steps of secant iteration on \
this example are shown below.  In this case the secant method hops back and \
forth gradually closing in on a root. \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "<", "7"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"9", "-", "x"}], ")"}], "^", "0.8"}], ",", 
     RowBox[{
      RowBox[{"x", "^", "0.73"}], "-", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"x", "-", "7"}], ")"}]}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.41"}], ",", 
     RowBox[{"-", "2.4"}], ",", "11.9"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"f1", ",", "f2", ",", "f3"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "x1", "]"}], ",", 
    RowBox[{"f", "[", "x2", "]"}], ",", 
    RowBox[{"f", "[", "x3", "]"}]}], "}"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7.011783781583547`", ",", "7.006867113028375`", ",", 
   "5.893382885962459`"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"$DisplayFunction", "=", "Identity"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plt1", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "3"}], ",", "6.999999999"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plt2", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "7.000000001", ",", "13.5"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"txt", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.01", "]"}], ",", " ", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "f1"}], "}"}], "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"x2", ",", "f2"}], "}"}], "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"x3", ",", "f3"}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<p1\>\"", ",", 
           RowBox[{"Offset", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", "8"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x1", ",", "f1"}], "}"}]}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<p2\>\"", ",", 
           RowBox[{"Offset", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"14", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x2", ",", "f2"}], "}"}]}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<p3\>\"", ",", 
           RowBox[{"Offset", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"10", ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x3", ",", "f3"}], "}"}]}], "]"}]}], "]"}]}], "}"}], 
       "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plt1", ",", "plt2", ",", "txt", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "13.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "8"}], "}"}]}], "}"}]}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVk2s01Hkcxse4zLAjZswMM/+Z45Ius5kwSp1m9PuSNmSqU6uSsiliqzUl
IVHpYCoqlevKXVlJqnWSzTZ/ua1rulBzNBEVqcWQMvyHtS+e85zPq+d8XjzW
+2Rbg8gkEkk6n/97uiP7/dwcBR/o/lKV6sSHU9N2w1UaCp44NPKrsYgP5MWP
R2UTFPxI7TN2ogMfjGL7pns/UnCacHVApJAP3GWL6Hg7Bb9aFPPQdwkfxPI7
LmeyKXhy7vkjfIwPMag2nbSKgm8DlW4BmQ+zFR89dEIN8FurEvIzn/GgzzEl
UPSXHp70qNqGFMyDusaLSveFurjAqucQX5cHv3usbtqaqoPjjflXlPkY5HSf
fW3VNKfIcq/Z83YlBhQ3ly7/PEKRyRgsK3nGBbvRSiCcNIqx5QUThYFcEEck
5qS8nlSMRZe4CTUc8FpIKh98MK7ofnVmKCmVAwLb0O2SohHFRiWXpF3MAVxq
93C595AiOa71uiduAYJlucQCVr/CteJEjpOfBTAtWC67y7sVzGq9wgX/mkPF
AC/Dy75ecQXZ3+lKMIfKQ5ydeYG3UeFtyuGjLHOwDBLuVo91ooyDYRlpN9nQ
oFdFdg9VIbeidZer1rLhcceiSFrsB0RyIOiJ7SzgPs2TH336GclPMqm79rNg
7sZmVdLPakQMl799OMqEcxeO64fc+4putinj02OZYOo5ER338jsi50blJTOY
oGr4M04snkHKvUwjVY4ZlPLaukQhs4jDq70idTCDRu/117OekCBC6ijxrmeA
7/B69nAYGdgRNX2yTQz4Ej7u7GugB+pdxxhNvXQo8If8zEf6YK/uY7OC6RDg
9y7lTQgFeNSiNS2jpmC9fvlSpKHCiziXE02nTUH3Eo8aVmYEofpVURH6pvCh
7sGlOqBBY40fDNmawHNa8XVOhzHsmrKntrkugP5K0QSKNQFpytXC457GoCl2
jnoiN4XBDfTwgV9owMizxdoD6OBiWdx7Ye8PUHY5hB4sZMCbOtlvWpkRtBhu
36g7yQB3za2VJmcNIdoptVTebgarC2ilp2OpcGvbUr/sDCZ8tWWkKuUUOLTQ
2DEjjAUmyvR1zdEGcC8m2yvNkw0G/7xtlMv0IbLtdJUNwxyKjDhr3I7pQUdr
pUfmZ3MILrG0lvjrwo1aJMx5YAHJ8TvT6TvJQHYN9ymO5cBPliGC8G06MCbT
FFzz4ULFSe1hrxUk8E976cqwxODu32uWXNwwi0ZWpk+l2czz8wTmN5dZdKp7
RwVnMQYtay2R/4pZlGfew7MWYkCUNnvZWc+ivqx33+3FGCx58cRRMa1F+3NH
yqU7MEjKOvBZUa5FISVU7vnLGHTc+xT4o5kWTW1o6aRdw+DgHz2u0YZadG4o
SZ6SjsHMAdXm5jkClQpMJjNyMPBtPqIN/EKg4TJW582y+V9pg65dbSDQ4bs2
ifVNGGAyXNoYSSBiy3uJRysG9/WcjQxDCZSsvjHR2oFBpx1d7RVIoHKRIOBF
Fwa9KiRp20KgkUp7Sf8ABhPxe2rqBQQ65aMeDxrEYB+8U5CsCGTy7X7pp+H5
fcfNw2I2gRxWOZur1fN+HNv7FWQC4a++t4dPYnBJVLJpaGoGbYmqjp+awkDW
4G1qNTqD+ixOimMIDHw6C75t/zCDjlZLxufmMGjvF+lc7JlB/wFWRDGM
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
w+LR8XEaZZ09dklCAv8DV3GV/w==
      "]]}}, 
   {PointSize[0.01], PointBox[{-2.41, 7.011783781583547}], 
    PointBox[{-2.4, 7.006867113028375}], PointBox[{11.9, 5.893382885962459}], 
    InsetBox["\<\"p1\"\>", Offset[{-2, 8}, {-2.41, 7.011783781583547}]], 
    InsetBox["\<\"p2\"\>", Offset[{14, 2}, {-2.4, 7.006867113028375}]], 
    InsetBox["\<\"p3\"\>", Offset[{10, 9}, {11.9, 5.893382885962459}]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.8},
  Method->{},
  PlotRange->{{-3, 13.5}, {-5, 8}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newX", "=", 
  RowBox[{"x2", "-", 
   RowBox[{
    RowBox[{"f", "[", "x2", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x2", "-", "x1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", "x2", "]"}], "-", 
       RowBox[{"f", "[", "x1", "]"}]}], ")"}]}]}]}]}]], "Input"],

Cell[BoxData["11.851249671198724`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"x3", ",", "newX", ",", "x2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"newX", "=", 
  RowBox[{"x2", "-", 
   RowBox[{
    RowBox[{"f", "[", "x2", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x2", "-", "x1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", "x2", "]"}], "-", 
       RowBox[{"f", "[", "x1", "]"}]}], ")"}]}]}]}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"-", "2.2558552751960903`"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"x3", ",", "newX", ",", "x2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"newX", "=", 
  RowBox[{"x2", "-", 
   RowBox[{
    RowBox[{"f", "[", "x2", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x2", "-", "x1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", "x2", "]"}], "-", 
       RowBox[{"f", "[", "x1", "]"}]}], ")"}]}]}]}]}]}], "Input"],

Cell[BoxData["11.831913126220183`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"x3", ",", "newX", ",", "x2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"newX", "=", 
  RowBox[{"x2", "-", 
   RowBox[{
    RowBox[{"f", "[", "x2", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x2", "-", "x1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", "x2", "]"}], "-", 
       RowBox[{"f", "[", "x1", "]"}]}], ")"}]}]}]}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"-", "2.2260011939964404`"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"x3", ",", "newX", ",", "x2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"newX", "=", 
  RowBox[{"x2", "-", 
   RowBox[{
    RowBox[{"f", "[", "x2", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x2", "-", "x1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", "x2", "]"}], "-", 
       RowBox[{"f", "[", "x1", "]"}]}], ")"}]}]}]}]}]}], "Input"],

Cell[BoxData["11.81022908536247`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"x3", ",", "newX", ",", "x2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"newX", "=", 
  RowBox[{"x2", "-", 
   RowBox[{
    RowBox[{"f", "[", "x2", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x2", "-", "x1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", "x2", "]"}], "-", 
       RowBox[{"f", "[", "x1", "]"}]}], ")"}]}]}]}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"-", "2.207857545193109`"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"x3", ",", "newX", ",", "x2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"newX", "=", 
  RowBox[{"x2", "-", 
   RowBox[{
    RowBox[{"f", "[", "x2", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x2", "-", "x1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", "x2", "]"}], "-", 
       RowBox[{"f", "[", "x1", "]"}]}], ")"}]}]}]}]}]}], "Input"],

Cell[BoxData["11.804231241857446`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"x3", ",", "newX", ",", "x2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"newX", "=", 
  RowBox[{"x2", "-", 
   RowBox[{
    RowBox[{"f", "[", "x2", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x2", "-", "x1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", "x2", "]"}], "-", 
       RowBox[{"f", "[", "x1", "]"}]}], ")"}]}]}]}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"-", "2.195571832210007`"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"x3", ",", "newX", ",", "x2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"newX", "=", 
  RowBox[{"x2", "-", 
   RowBox[{
    RowBox[{"f", "[", "x2", "]"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x2", "-", "x1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", "x2", "]"}], "-", 
       RowBox[{"f", "[", "x1", "]"}]}], ")"}]}]}]}]}]}], "Input"],

Cell[BoxData["11.800428166876882`"], "Output"]
}, Open  ]],

Cell["\<\
To prevent slow convergence such as this my GoldenSecant algorithm checks to \
see if the secant step is changing direction.  When the secant step does \
change direction a Golden-Section find minimum step is taken if the secant \
step would have been larger than a Golden-Section step which is approximately \
 0.381966*Abs[x3-x2].\
\>", "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Subsection"],

Cell["\<\
Over several years I read everything I could find on algorithms for finding \
roots in one dimension.  Only a few of these references directly influenced \
the RootSearch algorithm and references to them can be found above.  Nearly \
everything I have learned on the subject is covered in one of the following.
 \
\>", "Text"],

Cell["\<\
G. E. Alefeld, F.A. Potra, Yixun Shi 1995, Algorithm 748: Enclosing Zeros of \
Continuous Functions, ACM Transactions on Mathematical Software, Vol 21, No \
3, Sept 1995, 327-344.\
\>", "Text"],

Cell["\<\
G. E. Alefeld, F. A. Potra,Yixun Shi 1993, Mathematics of Computation, Vol \
61, No 204, Oct 1993, 733-744.\
\>", "Text"],

Cell["\<\
G. E. Alefeld, F. A. Potra 1992, Some Simple Methods for Enclosing Simple \
Zeros of Nonlinear Equations, BIT 32 (1992), 334-344.\
\>", "Text"],

Cell["\<\
Ned Anderson, \[CapitalARing]ke Bj\[ODoubleDot]rck 1973, A New High Order \
Method of Regula Falsi Type for Computing a Root of an Equation, BIT 13, \
1973, 253-264.\
\>", "Text"],

Cell["\<\
J. C. P. Bus, T. J. Dekker 1975, Two Efficient Algorithms With Guaranteed \
Convergence for Finding a Zero of a Function, ACM Transactions on \
Mathematical Software, Vol 1, No 4, Dec 1975, 330-345.\
\>", "Text"],

Cell["\<\
Kendal E. Atkinson 1989, An Introduction to Numerical Analysis, 2nd edition, \
(John Wiley & Sons).\
\>", "Text"],

Cell["\<\
R.P.Brent 1971, An Algorithm With Guaranteed Convergence for Finding a Zero \
of a Function, Computer Journal, vol 14 (1971), 422-425.\
\>", "Text",
 CellTags->"Brent's paper"],

Cell["\<\
R.P.Brent 1973, Algorithms For Minimization Without Derivatives (Englewood \
Cliffs,NJ:Prentice-Hall).\
\>", "Text",
 CellTags->"Brent's book"],

Cell["\<\
Carl-Erik Fr\[ODoubleDot]berg 1985, Numerical Mathematics Theory and Computer \
Applications, (Benjamin Cummings Publishing).\
\>", "Text"],

Cell["\<\
R. F. King 1976, Methods without Secant Steps for Finding a Bracketed Root, \
Computing 17, 1976, 49-57.\
\>", "Text"],

Cell[TextData[{
 "F. M. Larkin 1980, Root-Finding by Fitting Rational Functions, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " of Computation, Vol 35, No 151, July 1980, 803-816."
}], "Text"],

Cell["\<\
D. Le 1985, Three New Rapidly Convergent Algorithms for Finding a Zero of a \
Function, SIAM J. Stat Comput. 
Vol 6, No 1, Jan 1985, 193-208.\
\>", "Text"],

Cell["\<\
D. Le 1985, An Efficient Derivative-Free Method for Solving Nonlinear \
Equations, ACM Transactions on Mathematical Software, Vol 11, No 3, Sept \
1985, 250-262.\
\>", "Text"],

Cell["\<\
Victor Norton 1985, ALGORITHM 631 Finding a Bracketed Zero by Larkin's Method \
of Rational Interpolation, ACM Transactions on Mathematical Software, Vol 11, \
No 2, June 1985, 120-134.\
\>", "Text"],

Cell["\<\
William H.Press, Saul A.Teukolsky, William T.Vetterling, Brian P.Flannery \
1994, Numerical Recipes in C 
(Cambridge University Press).\
\>", "Text",
 CellTags->"Numerical Recipes"],

Cell["\<\
Anthony Ralston, Phillip Rabinowitz, A First Course in Numerical Analysis \
1978, McGraw-Hill Book Co.\
\>", "Text"],

Cell["\<\
C. J. F. Ridders 1979, Three-Point Iterations Derived From Exponential Curve \
Fitting, IEE Transactions on Circuits and Systems, Vol CAS-26, No 8, Aug \
1979, 669-670. \
\>", "Text"],

Cell["\<\
G. W. Stewart 1993, On Infinitely Many Algorithms for Solving Equations, 
University of Maryland College Park TR-92-121, TR-2990.\
\>", "Text",
 CellTags->"Stewart 1993"],

Cell["\<\
J. F. Traub 1964, Iterative Methods for the Solution of Equations, \
Pretince-Hall Inc., Englewood Cliffs NJ.\
\>", "Text"],

Cell[TextData[{
 "Shr\[ODoubleDot]eder's Method from the MathWorld site at  ",
 ButtonBox["http://mathworld.wolfram.com/SchroedersMethod.html",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://mathworld.wolfram.com/SchroedersMethod.html"], None}]
}], "Text"],

Cell[TextData[ButtonBox["http://mathworld.wolfram.com/HalleysMethod.html",
 BaseStyle->"Hyperlink",
 ButtonData:>{
   URL["http://mathworld.wolfram.com/HalleysMethod.html"], None}]], "Text"],

Cell[TextData[ButtonBox["http://mathworld.wolfram.com/HouseholdersMethod.html",
 BaseStyle->"Hyperlink",
 ButtonData:>{
   URL["http://mathworld.wolfram.com/HouseholdersMethod.html"], 
   None}]], "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1440, 833},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
ShowSelection->True,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "Modify the definitions below to change the default appearance of all \
cells in a given style.  Make modifications to any definition using commands \
in the Format menu.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], PageWidth -> WindowWidth, 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Presentation"], PageWidth -> WindowWidth, 
          CellLabelMargins -> {{24, Inherited}, {Inherited, Inherited}}, 
          ScriptMinSize -> 12], 
         Cell[
          StyleData[All, "Condensed"], PageWidth -> WindowWidth, 
          CellLabelMargins -> {{8, Inherited}, {Inherited, Inherited}}, 
          ScriptMinSize -> 8], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          CellLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          ScriptMinSize -> 5, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          StyleData["Notebook"], PageHeaders -> {{
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"], None, 
             Cell[
              TextData[{
                ValueBox["FileName"]}], "Header"]}, {
             Cell[
              TextData[{
                ValueBox["FileName"]}], "Header"], None, 
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"]}}, CellFrameLabelMargins -> 
          6, StyleMenuListing -> None]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], ShowCellBracket -> False, 
             CellMargins -> {{12, Inherited}, {20, 40}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", Inherited}, 
             LineSpacing -> {1, 11}, LanguageCategory -> "NaturalLanguage", 
             CounterIncrements -> "Title", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}}, FontFamily -> 
             "Helvetica", FontSize -> 36, FontWeight -> "Bold"], 
            Cell[
             StyleData["Title", "Presentation"], 
             CellMargins -> {{24, 10}, {20, 40}}, LineSpacing -> {1, 0}, 
             FontSize -> 44], 
            Cell[
             StyleData["Title", "Condensed"], 
             CellMargins -> {{8, 10}, {4, 8}}, FontSize -> 20], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{2, 10}, {12, 30}}, FontSize -> 24]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], 
             CellMargins -> {{12, Inherited}, {20, 15}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", Inherited}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Subtitle", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subsubtitle", 0}}, FontFamily -> "Helvetica", 
             FontSize -> 24], 
            Cell[
             StyleData["Subtitle", "Presentation"], 
             CellMargins -> {{24, 10}, {20, 20}}, LineSpacing -> {1, 0}, 
             FontSize -> 36], 
            Cell[
             StyleData["Subtitle", "Condensed"], 
             CellMargins -> {{8, 10}, {4, 4}}, FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{2, 10}, {12, 8}}, FontSize -> 18]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], 
             CellMargins -> {{12, Inherited}, {20, 15}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", Inherited}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Subsubtitle", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Helvetica", FontSize -> 14, 
             FontSlant -> "Italic"], 
            Cell[
             StyleData["Subsubtitle", "Presentation"], 
             CellMargins -> {{24, 10}, {20, 20}}, LineSpacing -> {1, 0}, 
             FontSize -> 24], 
            Cell[
             StyleData["Subsubtitle", "Condensed"], 
             CellMargins -> {{8, 10}, {8, 8}}, FontSize -> 12], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{2, 10}, {12, 8}}, FontSize -> 14]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{0, 0}, {0, 2.5}}, 
             CellDingbat -> None, ShowGroupOpener -> True, 
             CellMargins -> {{25, Inherited}, {8, 24}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", Inherited}, 
             LineSpacing -> {1, 7}, LanguageCategory -> "NaturalLanguage", 
             CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Helvetica", FontSize -> 16, FontWeight -> "Bold", 
             Background -> GrayLevel[0.907195]], 
            Cell[
             StyleData["Section", "Presentation"], 
             CellMargins -> {{40, 10}, {11, 32}}, LineSpacing -> {1, 0}, 
             FontSize -> 24], 
            Cell[
             StyleData["Section", "Condensed"], 
             CellMargins -> {{18, Inherited}, {6, 12}}, FontSize -> 12], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{13, 0}, {7, 22}}, FontSize -> 14]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellFrame -> {{0, 0}, {0, 1.5}}, 
             CellDingbat -> None, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {8, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultNewInlineCellStyle -> "None", 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", Inherited}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Subsection", CounterAssignments -> {{"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             Background -> None], 
            Cell[
             StyleData["Subsection", "Presentation"], 
             CellMargins -> {{36, 10}, {11, 32}}, LineSpacing -> {1, 0}, 
             FontSize -> 22], 
            Cell[
             StyleData["Subsection", "Condensed"], 
             CellMargins -> {{16, Inherited}, {6, 12}}, FontSize -> 12], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{9, 0}, {7, 22}}, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellFrame -> {{0, 0}, {0, 1}}, 
             CellDingbat -> None, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {8, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, CellFrameColor -> GrayLevel[0], DefaultNewInlineCellStyle -> 
             "None", InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", Inherited}, 
             LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Subsubsection", FontFamily -> "Times", FontWeight -> "Bold"], 
            Cell[
             StyleData["Subsubsection", "Presentation"], 
             CellMargins -> {{34, 10}, {11, 26}}, LineSpacing -> {1, 0}, 
             FontSize -> 18], 
            Cell[
             StyleData["Subsubsection", "Condensed"], 
             CellMargins -> {{17, Inherited}, {6, 12}}, FontSize -> 10], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{9, 0}, {7, 14}}, FontSize -> 11]}, Closed]]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], CellMargins -> {{12, 10}, {7, 7}}, 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", Inherited}, 
             Hyphenation -> True, LineSpacing -> {1, 3}, CounterIncrements -> 
             "Text"], 
            Cell[
             StyleData["Text", "Presentation"], 
             CellMargins -> {{24, 10}, {10, 10}}, LineSpacing -> {1, 5}, 
             FontSize -> 16], 
            Cell[
             StyleData["Text", "Condensed"], CellMargins -> {{8, 10}, {6, 6}},
              LineSpacing -> {1, 1}, FontSize -> 11], 
            Cell[
             StyleData["Text", "Printout"], CellMargins -> {{2, 2}, {6, 6}}, 
             TextJustification -> 0.5, FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], CellMargins -> {{12, 10}, {6, 6}}, 
             DefaultNewInlineCellStyle -> "None", Hyphenation -> True, 
             LineSpacing -> {1, 3}, LanguageCategory -> "NaturalLanguage", 
             CounterIncrements -> "SmallText", FontFamily -> "Helvetica", 
             FontSize -> 9], 
            Cell[
             StyleData["SmallText", "Presentation"], 
             CellMargins -> {{24, 10}, {8, 8}}, LineSpacing -> {1, 5}, 
             FontSize -> 12], 
            Cell[
             StyleData["SmallText", "Condensed"], 
             CellMargins -> {{8, 10}, {5, 5}}, LineSpacing -> {1, 2}, 
             FontSize -> 9], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{2, 2}, {5, 5}}, TextJustification -> 0.5, 
             FontSize -> 7]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names. Some attributes for these styles are actually set in FormatType Styles \
(in the last section of this stylesheet). ", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellMargins -> {{45, 10}, {5, 7}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, DefaultFormatType -> 
             DefaultInputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, LanguageCategory -> "Mathematica", 
             FormatType -> InputForm, ShowStringCharacters -> True, 
             NumberMarks -> True, LinebreakAdjustments -> {0.85, 2, 10, 0, 1},
              CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Presentation"], 
             CellMargins -> {{72, Inherited}, {8, 10}}, LineSpacing -> {1, 0},
              FontSize -> 16], 
            Cell[
             StyleData["Input", "Condensed"], 
             CellMargins -> {{40, 10}, {2, 3}}, FontSize -> 11], 
            Cell[
             StyleData["Input", "Printout"], CellMargins -> {{39, 0}, {4, 6}},
              LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 9]}, 
           Closed]], 
         Cell[
          StyleData["InputOnly"], Evaluatable -> True, CellGroupingRules -> 
          "InputGrouping", CellHorizontalScrolling -> True, DefaultFormatType -> 
          DefaultInputFormatType, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           AutoItalicWords -> {}, LanguageCategory -> "Mathematica", 
          FormatType -> InputForm, ShowStringCharacters -> True, NumberMarks -> 
          True, LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, 
          CounterIncrements -> "Input", StyleMenuListing -> None, FontWeight -> 
          "Bold"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], CellMargins -> {{47, 10}, {7, 5}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, DefaultFormatType -> 
             DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, LanguageCategory -> None, FormatType -> 
             InputForm, CounterIncrements -> "Output"], 
            Cell[
             StyleData["Output", "Presentation"], 
             CellMargins -> {{72, Inherited}, {10, 8}}, LineSpacing -> {1, 0},
              FontSize -> 16], 
            Cell[
             StyleData["Output", "Condensed"], 
             CellMargins -> {{41, Inherited}, {3, 2}}, FontSize -> 11], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{39, 0}, {6, 4}}, FontSize -> 9]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, LanguageCategory -> None, FormatType -> 
             InputForm, CounterIncrements -> "Message", StyleMenuListing -> 
             None, FontSize -> 11, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Presentation"], 
             CellMargins -> {{72, Inherited}, {Inherited, Inherited}}, 
             LineSpacing -> {1, 0}, FontSize -> 16], 
            Cell[
             StyleData["Message", "Condensed"], 
             CellMargins -> {{41, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 11], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{39, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 7, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, DefaultFormatType -> DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, LanguageCategory -> None, FormatType -> 
             InputForm, CounterIncrements -> "Print", StyleMenuListing -> 
             None], 
            Cell[
             StyleData["Print", "Presentation"], 
             CellMargins -> {{72, Inherited}, {Inherited, Inherited}}, 
             LineSpacing -> {1, 0}, FontSize -> 16], 
            Cell[
             StyleData["Print", "Condensed"], 
             CellMargins -> {{41, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 11], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{39, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 8]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{4, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, LanguageCategory -> 
             None, FormatType -> InputForm, CounterIncrements -> "Graphics", 
             ImageMargins -> {{43, Inherited}, {Inherited, 0}}, 
             StyleMenuListing -> None, FontFamily -> "Courier", FontSize -> 
             10], 
            Cell[
             StyleData["Graphics", "Presentation"], 
             ImageMargins -> {{62, Inherited}, {Inherited, 0}}], 
            Cell[
             StyleData["Graphics", "Condensed"], 
             ImageMargins -> {{38, Inherited}, {Inherited, 0}}, Magnification -> 
             0.6], 
            Cell[
             StyleData["Graphics", "Printout"], 
             ImageMargins -> {{30, Inherited}, {Inherited, 0}}, Magnification -> 
             0.8]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], LanguageCategory -> None, 
             StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 
             9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Presentation"], FontSize -> 12], 
            Cell[
             StyleData["CellLabel", "Condensed"], FontSize -> 9], 
            Cell[
             StyleData["CellLabel", "Printout"], FontFamily -> "Courier", 
             FontSize -> 8, FontSlant -> "Italic", FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Inline Formatting", "Section"], 
         Cell[
         "These styles are for modifying individual words or letters in a \
cell exclusive of the cell tag.", "Text"], 
         Cell[
          StyleData["RM"], StyleMenuListing -> None, FontWeight -> "Plain", 
          FontSlant -> "Plain"], 
         Cell[
          StyleData["BF"], StyleMenuListing -> None, FontWeight -> "Bold"], 
         Cell[
          StyleData["IT"], StyleMenuListing -> None, FontSlant -> "Italic"], 
         Cell[
          StyleData["TR"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Plain", FontSlant -> "Plain"], 
         Cell[
          StyleData["TI"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Plain", FontSlant -> "Italic"], 
         Cell[
          StyleData["TB"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Bold", FontSlant -> "Plain"], 
         Cell[
          StyleData["TBI"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Bold", FontSlant -> "Italic"], 
         Cell[
          StyleData["MR"], 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           StyleMenuListing -> None, FontFamily -> "Courier", FontWeight -> 
          "Plain", FontSlant -> "Plain"], 
         Cell[
          StyleData["MO"], 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           StyleMenuListing -> None, FontFamily -> "Courier", FontWeight -> 
          "Plain", FontSlant -> "Italic"], 
         Cell[
          StyleData["MB"], 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           StyleMenuListing -> None, FontFamily -> "Courier", FontWeight -> 
          "Bold", FontSlant -> "Plain"], 
         Cell[
          StyleData["MBO"], 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           StyleMenuListing -> None, FontFamily -> "Courier", FontWeight -> 
          "Bold", FontSlant -> "Italic"], 
         Cell[
          StyleData["SR"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Plain", FontSlant -> "Plain"], 
         Cell[
          StyleData["SO"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Plain", FontSlant -> "Italic"], 
         Cell[
          StyleData["SB"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Bold", FontSlant -> "Plain"], 
         Cell[
          StyleData["SBO"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Bold", FontSlant -> "Italic"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SO10"], StyleMenuListing -> None, FontFamily -> 
             "Helvetica", FontSize -> 10, FontWeight -> "Plain", FontSlant -> 
             "Italic"], 
            Cell[
             StyleData["SO10", "Printout"], StyleMenuListing -> None, 
             FontFamily -> "Helvetica", FontSize -> 7, FontWeight -> "Plain", 
             FontSlant -> "Italic"], 
            Cell[
             StyleData["SO10", "EnhancedPrintout"], StyleMenuListing -> None, 
             FontFamily -> "Futura", FontSize -> 7, FontWeight -> "Plain", 
             FontSlant -> "Italic"]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Formulas and Programming", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineFormula"], CellMargins -> {{10, 4}, {0, 8}}, 
             CellHorizontalScrolling -> True, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, LanguageCategory -> 
             "Formula", ScriptLevel -> 1, SingleLetterItalics -> True], 
            Cell[
             StyleData["InlineFormula", "Presentation"], 
             CellMargins -> {{24, 10}, {10, 10}}, LineSpacing -> {1, 5}, 
             FontSize -> 16], 
            Cell[
             StyleData["InlineFormula", "Condensed"], 
             CellMargins -> {{8, 10}, {6, 6}}, LineSpacing -> {1, 1}, 
             FontSize -> 11], 
            Cell[
             StyleData["InlineFormula", "Printout"], 
             CellMargins -> {{2, 0}, {6, 6}}, FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["DisplayFormula"], 
             CellMargins -> {{42, Inherited}, {Inherited, Inherited}}, 
             CellHorizontalScrolling -> True, DefaultFormatType -> 
             DefaultInputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, LanguageCategory -> 
             "Formula", ScriptLevel -> 0, SingleLetterItalics -> True, 
             UnderoverscriptBoxOptions -> {LimitsPositioning -> True}], 
            Cell[
             StyleData["DisplayFormula", "Presentation"], 
             LineSpacing -> {1, 5}, FontSize -> 16], 
            Cell[
             StyleData["DisplayFormula", "Condensed"], LineSpacing -> {1, 1}, 
             FontSize -> 11], 
            Cell[
             StyleData["DisplayFormula", "Printout"], FontSize -> 10]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Program"], CellFrame -> {{0, 0}, {0.5, 0.5}}, 
             CellMargins -> {{10, 4}, {0, 8}}, CellHorizontalScrolling -> 
             True, Hyphenation -> False, LanguageCategory -> "Formula", 
             ScriptLevel -> 1, FontFamily -> "Courier"], 
            Cell[
             StyleData["Program", "Presentation"], 
             CellMargins -> {{24, 10}, {10, 10}}, LineSpacing -> {1, 5}, 
             FontSize -> 16], 
            Cell[
             StyleData["Program", "Condensed"], 
             CellMargins -> {{8, 10}, {6, 6}}, LineSpacing -> {1, 1}, 
             FontSize -> 11], 
            Cell[
             StyleData["Program", "Printout"], 
             CellMargins -> {{2, 0}, {6, 6}}, FontSize -> 9]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Outline Styles", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Outline1"], CellMargins -> {{12, 10}, {7, 7}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, 
             ParagraphIndent -> -38, CounterIncrements -> "Outline1", 
             FontSize -> 18, FontWeight -> "Bold", 
             CounterBoxOptions -> {CounterFunction :> CapitalRomanNumeral}], 
            Cell[
             StyleData["Outline1", "Printout"], 
             CounterBoxOptions -> {CounterFunction :> CapitalRomanNumeral}]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Outline2"], CellMargins -> {{59, 10}, {7, 7}}, 
             CellGroupingRules -> {"SectionGrouping", 60}, 
             ParagraphIndent -> -27, CounterIncrements -> "Outline2", 
             FontSize -> 15, FontWeight -> "Bold", 
             CounterBoxOptions -> {CounterFunction :> (Part[
                 CharacterRange["A", "Z"], #]& )}], 
            Cell[
             StyleData["Outline2", "Printout"], 
             CounterBoxOptions -> {CounterFunction :> (Part[
                 CharacterRange["A", "Z"], #]& )}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Outline3"], CellMargins -> {{108, 10}, {7, 7}}, 
             CellGroupingRules -> {"SectionGrouping", 70}, 
             ParagraphIndent -> -21, CounterIncrements -> "Outline3", 
             FontSize -> 12, 
             CounterBoxOptions -> {CounterFunction :> Identity}], 
            Cell[
             StyleData["Outline3", "Printout"], 
             CounterBoxOptions -> {CounterFunction :> Identity}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Outline4"], CellMargins -> {{158, 10}, {7, 7}}, 
             CellGroupingRules -> {"SectionGrouping", 80}, 
             ParagraphIndent -> -18, CounterIncrements -> "Outline4", 
             FontSize -> 10, CounterBoxOptions -> {CounterFunction :> (Part[
                 CharacterRange["a", "z"], #]& )}], 
            Cell[
             StyleData["Outline4", "Printout"]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               ButtonData}], 
            Cell[
             StyleData["Hyperlink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["Hyperlink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["Hyperlink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
         "The following styles are for linking automatically to the on-line \
help system.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MainBookLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["MainBook", #]}]& )}], 
            Cell[
             StyleData["MainBookLink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["MainBookLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["MainBookLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["AddOnsLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["AddOns", #]}]& )}], 
            Cell[
             StyleData["AddOnsLink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["AddOnsLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["AddOnsLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuide", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["RefGuideLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["RefGuideLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["GettingStartedLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"], FontSize -> 
             16], 
            Cell[
             StyleData["OtherInformationLink", "Condensed"], FontSize -> 11], 
            
            Cell[
             StyleData["OtherInformationLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
          "NaturalLanguage", StyleMenuListing -> None, FontSize -> 10, 
          FontSlant -> "Italic"], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
          "NaturalLanguage", StyleMenuListing -> None, FontSize -> 9, 
          FontSlant -> "Italic"], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Placeholder"], Placeholder -> True, StyleMenuListing -> 
             None, FontSlant -> "Italic", FontColor -> 
             RGBColor[0.890623, 0.864698, 0.384756], 
             TagBoxOptions -> {
              Editable -> False, Selectable -> False, StripWrapperBoxes -> 
               False}], 
            Cell[
             StyleData["Placeholder", "Presentation"]], 
            Cell[
             StyleData["Placeholder", "Condensed"]], 
            Cell[
             StyleData["Placeholder", "Printout"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrimaryPlaceholder"], StyleMenuListing -> None, 
             DrawHighlighted -> True, FontSlant -> "Italic", Background -> 
             RGBColor[0.912505, 0.891798, 0.507774], 
             TagBoxOptions -> {
              Editable -> False, Selectable -> False, StripWrapperBoxes -> 
               False}], 
            Cell[
             StyleData["PrimaryPlaceholder", "Presentation"]], 
            Cell[
             StyleData["PrimaryPlaceholder", "Condensed"]], 
            Cell[
             StyleData["PrimaryPlaceholder", "Printout"]]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options. This is particularly true of Input and Output.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, Hyphenation -> False, 
          AutoItalicWords -> {}, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12, Background -> GrayLevel[1]], 
         Cell[
          StyleData["InputForm"], InputAutoReplacements -> {}, 
          AllowInlineCells -> False, Hyphenation -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {0.6, 1}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], 
          InputAutoReplacements -> {
           "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> 
            "\[LessEqual]", ">=" -> "\[GreaterEqual]", "!=" -> "\[NotEqual]", 
            "==" -> "\[Equal]", Inherited}, LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], 
          InputAutoReplacements -> {
           "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> 
            "\[LessEqual]", ">=" -> "\[GreaterEqual]", "!=" -> "\[NotEqual]", 
            "==" -> "\[Equal]", Inherited}, LineSpacing -> {1.25, 0}, 
          TraditionalFunctionNotation -> True, DelimiterMatching -> None, 
          StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          StyleData["InlineCell"], LanguageCategory -> "Formula", ScriptLevel -> 
          1, StyleMenuListing -> None], 
         Cell[
          StyleData["InlineCellEditing"], StyleMenuListing -> None, 
          Background -> RGBColor[1, 0.749996, 0.8]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Automatic Styles", "Section"], 
         Cell[
         "The cells below define styles that are used to affect the display \
of certain types of objects in typeset expressions.  For example, \
\"UnmatchedBracket\" style defines how unmatched bracket, curly bracket, and \
parenthesis characters are displayed (typically by coloring them to make them \
stand out).", "Text"], 
         Cell[
          StyleData["UnmatchedBracket"], StyleMenuListing -> None, FontColor -> 
          RGBColor[0.760006, 0.330007, 0.8]]}, Closed]]}, Open]]}, Visible -> 
  False, FrontEndVersion -> 
  "9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, 2012)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Instalation"->{
  Cell[6104, 208, 191, 4, 41, "Text",
   CellTags->"Instalation"]},
 "Info3569557625-4343972"->{
  Cell[7223, 241, 247, 4, 65, "Print",
   CellTags->"Info3569557625-4343972"]},
 "Info3569557628-8744552"->{
  Cell[475724, 8508, 494, 7, 117, "Print",
   CellTags->"Info3569557628-8744552"]},
 "Info3569557629-5953613"->{
  Cell[548231, 9879, 433, 10, 64, "Print",
   CellTags->"Info3569557629-5953613"]},
 "Info3569557630-5870893"->{
  Cell[561107, 10263, 473, 7, 117, "Print",
   CellTags->"Info3569557630-5870893"]},
 "Info3569557631-1967172"->{
  Cell[575852, 10694, 625, 9, 143, "Print",
   CellTags->"Info3569557631-1967172"]},
 "Info3569557632-5798462"->{
  Cell[593870, 11159, 281, 4, 91, "Print",
   CellTags->"Info3569557632-5798462"]},
 "Info3569557633-6258180"->{
  Cell[616190, 11591, 294, 5, 91, "Print",
   CellTags->"Info3569557633-6258180"]},
 "Info3569557633-3022385"->{
  Cell[627845, 11852, 292, 5, 91, "Print",
   CellTags->"Info3569557633-3022385"]},
 "Golden-Secant"->{
  Cell[754607, 14456, 1957, 33, 375, "Text",
   CellTags->"Golden-Secant"]},
 "Brent's paper"->{
  Cell[819487, 16077, 186, 4, 41, "Text",
   CellTags->"Brent's paper"]},
 "Brent's book"->{
  Cell[819676, 16083, 153, 4, 41, "Text",
   CellTags->"Brent's book"]},
 "Numerical Recipes"->{
  Cell[820886, 16124, 191, 5, 66, "Text",
   CellTags->"Numerical Recipes"]},
 "Stewart 1993"->{
  Cell[821405, 16142, 180, 4, 66, "Text",
   CellTags->"Stewart 1993"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Instalation", 868284, 17142},
 {"Info3569557625-4343972", 868381, 17145},
 {"Info3569557628-8744552", 868490, 17148},
 {"Info3569557629-5953613", 868603, 17151},
 {"Info3569557630-5870893", 868716, 17154},
 {"Info3569557631-1967172", 868830, 17157},
 {"Info3569557632-5798462", 868944, 17160},
 {"Info3569557633-6258180", 869057, 17163},
 {"Info3569557633-3022385", 869170, 17166},
 {"Golden-Secant", 869274, 17169},
 {"Brent's paper", 869371, 17172},
 {"Brent's book", 869464, 17175},
 {"Numerical Recipes", 869561, 17178},
 {"Stewart 1993", 869658, 17181}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 377, 15, 250, "Title"],
Cell[CellGroupData[{
Cell[981, 41, 34, 0, 104, "Section"],
Cell[CellGroupData[{
Cell[1040, 45, 33, 0, 81, "Subsection"],
Cell[1076, 47, 146, 5, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1259, 57, 33, 0, 81, "Subsection"],
Cell[1295, 59, 138, 3, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1470, 67, 33, 0, 81, "Subsection"],
Cell[1506, 69, 819, 22, 98, "Text"],
Cell[CellGroupData[{
Cell[2350, 95, 378, 11, 63, "Input"],
Cell[2731, 108, 412, 9, 35, "Message"],
Cell[3146, 119, 453, 10, 35, "Message"],
Cell[3602, 131, 283, 8, 38, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3934, 145, 33, 0, 81, "Subsection"],
Cell[3970, 147, 469, 9, 288, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4476, 161, 33, 0, 81, "Subsection"],
Cell[4512, 163, 623, 11, 190, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5184, 180, 53, 0, 104, "Section"],
Cell[5240, 182, 255, 4, 66, "Text"],
Cell[CellGroupData[{
Cell[5520, 190, 480, 12, 111, "Input"],
Cell[6003, 204, 86, 1, 38, "Output"]
}, Open  ]],
Cell[6104, 208, 191, 4, 41, "Text",
 CellTags->"Instalation"],
Cell[CellGroupData[{
Cell[6320, 216, 82, 1, 38, "Input"],
Cell[6405, 219, 653, 12, 62, "Message"]
}, Open  ]],
Cell[7073, 234, 69, 0, 41, "Text"],
Cell[CellGroupData[{
Cell[7167, 238, 53, 1, 38, "Input"],
Cell[7223, 241, 247, 4, 65, "Print",
 CellTags->"Info3569557625-4343972"]
}, Open  ]],
Cell[7485, 248, 1011, 16, 190, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8533, 269, 27, 0, 104, "Section"],
Cell[CellGroupData[{
Cell[8585, 273, 31, 0, 81, "Subsection"],
Cell[8619, 275, 106, 3, 41, "Text"],
Cell[CellGroupData[{
Cell[8750, 282, 425, 14, 92, "Input"],
Cell[9178, 298, 42049, 696, 367, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51264, 999, 262, 8, 38, "Input"],
Cell[51529, 1009, 517, 10, 35, "Message"],
Cell[52049, 1021, 2016, 55, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54102, 1081, 59, 1, 38, "Input"],
Cell[54164, 1084, 29, 0, 38, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54242, 1090, 31, 0, 81, "Subsection"],
Cell[54276, 1092, 420, 9, 66, "Text"],
Cell[CellGroupData[{
Cell[54721, 1105, 959, 30, 121, "Input"],
Cell[55683, 1137, 16539, 278, 373, "Output"],
Cell[72225, 1417, 2463, 47, 354, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74725, 1469, 262, 8, 56, "Input"],
Cell[74990, 1479, 517, 10, 35, "Message"],
Cell[75510, 1491, 240, 7, 56, "Output"]
}, Open  ]],
Cell[75765, 1501, 230, 4, 66, "Text"],
Cell[CellGroupData[{
Cell[76020, 1509, 82, 2, 56, "Input"],
Cell[76105, 1513, 97, 2, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76251, 1521, 31, 0, 81, "Subsection"],
Cell[76285, 1523, 365, 6, 66, "Text"],
Cell[76653, 1531, 343, 11, 67, "Input",
 Evaluatable->False],
Cell[76999, 1544, 108, 3, 41, "Text"],
Cell[CellGroupData[{
Cell[77132, 1551, 296, 9, 56, "Input"],
Cell[77431, 1562, 792, 28, 78, "Output"]
}, Open  ]],
Cell[78238, 1593, 92, 2, 41, "Text"],
Cell[CellGroupData[{
Cell[78355, 1599, 332, 10, 56, "Input"],
Cell[78690, 1611, 517, 10, 35, "Message"],
Cell[79210, 1623, 120, 3, 56, "Output"]
}, Open  ]],
Cell[79345, 1629, 513, 16, 72, "Text"],
Cell[CellGroupData[{
Cell[79883, 1649, 80, 2, 56, "Input"],
Cell[79966, 1653, 90, 2, 63, "Output"]
}, Open  ]],
Cell[80071, 1658, 349, 6, 66, "Text"],
Cell[CellGroupData[{
Cell[80445, 1668, 236, 8, 56, "Input"],
Cell[80684, 1678, 52, 1, 56, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80785, 1685, 31, 0, 81, "Subsection"],
Cell[80819, 1687, 103, 3, 41, "Text"],
Cell[CellGroupData[{
Cell[80947, 1694, 720, 23, 105, "Input"],
Cell[81670, 1719, 15902, 267, 385, "Output"]
}, Open  ]],
Cell[97587, 1989, 474, 9, 91, "Text"],
Cell[CellGroupData[{
Cell[98086, 2002, 264, 8, 56, "Input"],
Cell[98353, 2012, 517, 10, 35, "Message"],
Cell[98873, 2024, 218, 6, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99128, 2035, 82, 2, 56, "Input"],
Cell[99213, 2039, 97, 2, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99359, 2047, 31, 0, 81, "Subsection"],
Cell[99393, 2049, 124, 3, 41, "Text"],
Cell[CellGroupData[{
Cell[99542, 2056, 818, 27, 105, "Input"],
Cell[100363, 2085, 41155, 682, 384, "Output"]
}, Open  ]],
Cell[141533, 2770, 74, 0, 41, "Text"],
Cell[CellGroupData[{
Cell[141632, 2774, 270, 8, 56, "Input"],
Cell[141905, 2784, 517, 10, 35, "Message"],
Cell[142425, 2796, 384, 10, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142846, 2811, 82, 2, 56, "Input"],
Cell[142931, 2815, 203, 5, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143183, 2826, 31, 0, 81, "Subsection"],
Cell[143217, 2828, 511, 15, 67, "Text"],
Cell[CellGroupData[{
Cell[143753, 2847, 724, 24, 113, "Input"],
Cell[144480, 2873, 517, 10, 35, "Message"],
Cell[145000, 2885, 210, 7, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145247, 2897, 314, 9, 56, "Input"],
Cell[145564, 2908, 517, 10, 35, "Message"],
Cell[146084, 2920, 517, 10, 35, "Message"],
Cell[146604, 2932, 517, 10, 35, "Message"],
Cell[147124, 2944, 497, 10, 35, "Message"],
Cell[147624, 2956, 352, 12, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148013, 2973, 82, 2, 56, "Input"],
Cell[148098, 2977, 77, 2, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148212, 2984, 372, 12, 81, "Input"],
Cell[148587, 2998, 13515, 230, 386, 2765, 52, "CachedBoxData", "BoxData", \
"Output"],
Cell[162105, 3230, 13481, 230, 381, 2670, 51, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175635, 3466, 31, 0, 81, "Subsection"],
Cell[175669, 3468, 480, 9, 91, "Text"],
Cell[CellGroupData[{
Cell[176174, 3481, 551, 15, 81, "Input"],
Cell[176728, 3498, 289160, 4749, 349, "Output"]
}, Open  ]],
Cell[465903, 8250, 224, 4, 66, "Text"],
Cell[CellGroupData[{
Cell[466152, 8258, 358, 10, 56, "Input"],
Cell[466513, 8270, 517, 10, 35, "Message"],
Cell[467033, 8282, 8303, 202, 369, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475373, 8489, 59, 1, 56, "Input"],
Cell[475435, 8492, 30, 0, 56, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[475526, 8499, 36, 0, 104, "Section"],
Cell[475565, 8501, 71, 0, 41, "Text"],
Cell[CellGroupData[{
Cell[475661, 8505, 60, 1, 56, "Input"],
Cell[475724, 8508, 494, 7, 117, "Print",
 CellTags->"Info3569557628-8744552"]
}, Open  ]],
Cell[476233, 8518, 188, 4, 41, "Text"],
Cell[CellGroupData[{
Cell[476446, 8526, 723, 23, 105, "Input"],
Cell[477172, 8551, 517, 10, 35, "Message"],
Cell[477692, 8563, 218, 6, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477947, 8574, 74, 1, 56, "Input"],
Cell[478024, 8577, 1672, 41, 539, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479733, 8623, 71, 1, 56, "Input"],
Cell[479807, 8626, 29, 0, 56, "Output"]
}, Open  ]],
Cell[479851, 8629, 130, 3, 41, "Text"],
Cell[CellGroupData[{
Cell[480006, 8636, 827, 28, 105, "Input"],
Cell[480836, 8666, 517, 10, 35, "Message"],
Cell[481356, 8678, 384, 10, 56, "Output"]
}, Open  ]],
Cell[481755, 8691, 233, 4, 66, "Text"],
Cell[CellGroupData[{
Cell[482013, 8699, 106, 2, 56, "Input"],
Cell[482122, 8703, 60294, 994, 383, 8296, 140, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[542431, 9700, 93, 2, 41, "Text"],
Cell[CellGroupData[{
Cell[542549, 9706, 336, 11, 57, "Input"],
Cell[542888, 9719, 1675, 37, 583, "Output"]
}, Open  ]],
Cell[544578, 9759, 108, 3, 41, "Text"],
Cell[CellGroupData[{
Cell[544711, 9766, 306, 10, 57, "Input"],
Cell[545020, 9778, 1367, 31, 439, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[546436, 9815, 37, 0, 104, "Section"],
Cell[546476, 9817, 102, 2, 41, "Text"],
Cell[CellGroupData[{
Cell[546603, 9823, 101, 2, 56, "Input"],
Cell[546707, 9827, 1292, 38, 185, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548036, 9870, 36, 0, 81, "Subsection"],
Cell[548075, 9872, 72, 0, 41, "Text"],
Cell[CellGroupData[{
Cell[548172, 9876, 56, 1, 56, "Input"],
Cell[548231, 9879, 433, 10, 64, "Print",
 CellTags->"Info3569557629-5953613"]
}, Open  ]],
Cell[548679, 9892, 102, 2, 41, "Text"],
Cell[CellGroupData[{
Cell[548806, 9898, 368, 11, 83, "Input"],
Cell[549177, 9911, 517, 10, 35, "Message"],
Cell[549697, 9923, 517, 10, 35, "Message"],
Cell[550217, 9935, 517, 10, 35, "Message"],
Cell[550737, 9947, 497, 10, 35, "Message"],
Cell[551237, 9959, 807, 27, 105, "Output"]
}, Open  ]],
Cell[552059, 9989, 133, 3, 41, "Text"],
Cell[CellGroupData[{
Cell[552217, 9996, 154, 5, 83, "Input"],
Cell[552374, 10003, 211, 5, 63, "Output"]
}, Open  ]],
Cell[552600, 10011, 386, 9, 89, "Text"],
Cell[CellGroupData[{
Cell[553011, 10024, 372, 11, 80, "Input"],
Cell[553386, 10037, 517, 10, 35, "Message"],
Cell[553906, 10049, 517, 10, 35, "Message"],
Cell[554426, 10061, 517, 10, 35, "Message"],
Cell[554946, 10073, 497, 10, 35, "Message"],
Cell[555446, 10085, 528, 15, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556011, 10105, 154, 5, 83, "Input"],
Cell[556168, 10112, 205, 5, 63, "Output"]
}, Open  ]],
Cell[556388, 10120, 144, 4, 55, "Text"],
Cell[CellGroupData[{
Cell[556557, 10128, 390, 11, 56, "Input"],
Cell[556950, 10141, 517, 10, 35, "Message"],
Cell[557470, 10153, 517, 10, 35, "Message"],
Cell[557990, 10165, 517, 10, 35, "Message"],
Cell[558510, 10177, 497, 10, 35, "Message"],
Cell[559010, 10189, 917, 32, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559964, 10226, 170, 5, 56, "Input"],
Cell[560137, 10233, 718, 15, 95, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[560904, 10254, 38, 0, 81, "Subsection"],
Cell[560945, 10256, 75, 0, 41, "Text"],
Cell[CellGroupData[{
Cell[561045, 10260, 59, 1, 56, "Input"],
Cell[561107, 10263, 473, 7, 117, "Print",
 CellTags->"Info3569557630-5870893"]
}, Open  ]],
Cell[561595, 10273, 875, 20, 141, "Text"],
Cell[CellGroupData[{
Cell[562495, 10297, 389, 11, 56, "Input"],
Cell[562887, 10310, 517, 10, 35, "Message"],
Cell[563407, 10322, 517, 10, 35, "Message"],
Cell[563927, 10334, 517, 10, 35, "Message"],
Cell[564447, 10346, 497, 10, 35, "Message"],
Cell[564947, 10358, 120, 3, 56, "Output"]
}, Open  ]],
Cell[565082, 10364, 150, 3, 41, "Text"],
Cell[CellGroupData[{
Cell[565257, 10371, 80, 2, 56, "Input"],
Cell[565340, 10375, 52, 1, 56, "Output"]
}, Open  ]],
Cell[565407, 10379, 197, 4, 55, "Text"],
Cell[CellGroupData[{
Cell[565629, 10387, 547, 17, 105, "Input"],
Cell[566179, 10406, 517, 10, 35, "Message"],
Cell[566699, 10418, 1013, 25, 95, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[567749, 10448, 56, 1, 56, "Input"],
Cell[567808, 10451, 526, 10, 95, "Output"]
}, Open  ]],
Cell[568349, 10464, 397, 6, 66, "Text"],
Cell[CellGroupData[{
Cell[568771, 10474, 202, 5, 57, "Input"],
Cell[568976, 10481, 292, 10, 78, "Output"]
}, Open  ]],
Cell[569283, 10494, 250, 4, 66, "Text"],
Cell[CellGroupData[{
Cell[569558, 10502, 205, 7, 56, "Input"],
Cell[569766, 10511, 77, 0, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[569880, 10516, 205, 7, 56, "Input"],
Cell[570088, 10525, 78, 0, 56, "Output"]
}, Open  ]],
Cell[570181, 10528, 427, 7, 91, "Text"],
Cell[CellGroupData[{
Cell[570633, 10539, 352, 9, 56, "Input"],
Cell[570988, 10550, 517, 10, 35, "Message"],
Cell[571508, 10562, 517, 10, 35, "Message"],
Cell[572028, 10574, 517, 10, 35, "Message"],
Cell[572548, 10586, 497, 10, 35, "Message"],
Cell[573048, 10598, 1579, 57, 223, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574664, 10660, 56, 1, 56, "Input"],
Cell[574723, 10663, 406, 8, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[575178, 10677, 30, 0, 81, "Subsection"],
Cell[575211, 10679, 562, 8, 91, "Text"],
Cell[CellGroupData[{
Cell[575798, 10691, 51, 1, 56, "Input"],
Cell[575852, 10694, 625, 9, 143, "Print",
 CellTags->"Info3569557631-1967172"]
}, Open  ]],
Cell[576492, 10706, 497, 13, 66, "Text"],
Cell[CellGroupData[{
Cell[577014, 10723, 607, 20, 105, "Input"],
Cell[577624, 10745, 7928, 137, 385, "Output"]
}, Open  ]],
Cell[585567, 10885, 267, 7, 41, "Text"],
Cell[CellGroupData[{
Cell[585859, 10896, 389, 13, 56, "Input"],
Cell[586251, 10911, 517, 10, 35, "Message"],
Cell[586771, 10923, 240, 7, 56, "Output"]
}, Open  ]],
Cell[587026, 10933, 376, 7, 66, "Text"],
Cell[CellGroupData[{
Cell[587427, 10944, 392, 13, 56, "Input"],
Cell[587822, 10959, 517, 10, 35, "Message"],
Cell[588342, 10971, 45, 1, 56, "Output"]
}, Open  ]],
Cell[588402, 10975, 337, 6, 66, "Text"],
Cell[CellGroupData[{
Cell[588764, 10985, 324, 10, 56, "Input"],
Cell[589091, 10997, 517, 10, 35, "Message"],
Cell[589611, 11009, 240, 7, 56, "Output"]
}, Open  ]],
Cell[589866, 11019, 604, 16, 67, "Text"],
Cell[CellGroupData[{
Cell[590495, 11039, 360, 11, 56, "Input"],
Cell[590858, 11052, 517, 10, 35, "Message"],
Cell[591378, 11064, 121, 3, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[591536, 11072, 60, 0, 74, "Subsubsection"],
Cell[591599, 11074, 69, 0, 41, "Text"],
Cell[CellGroupData[{
Cell[591693, 11078, 99, 2, 56, "Input"],
Cell[591795, 11082, 409, 12, 63, "Output"]
}, Open  ]],
Cell[592219, 11097, 287, 5, 66, "Text"],
Cell[592509, 11104, 245, 8, 38, "Input",
 Evaluatable->False],
Cell[592757, 11114, 436, 13, 48, "Text"],
Cell[593196, 11129, 305, 10, 41, "Input",
 Evaluatable->False],
Cell[593504, 11141, 123, 3, 41, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[593676, 11150, 35, 0, 81, "Subsection"],
Cell[593714, 11152, 72, 0, 41, "Text"],
Cell[CellGroupData[{
Cell[593811, 11156, 56, 1, 56, "Input"],
Cell[593870, 11159, 281, 4, 91, "Print",
 CellTags->"Info3569557632-5798462"]
}, Open  ]],
Cell[594166, 11166, 641, 11, 116, "Text"],
Cell[CellGroupData[{
Cell[594832, 11181, 819, 26, 105, "Input"],
Cell[595654, 11209, 18240, 306, 385, "Output"],
Cell[613897, 11517, 517, 10, 35, "Message"],
Cell[614417, 11529, 106, 3, 56, "Output"]
}, Open  ]],
Cell[614538, 11535, 50, 0, 41, "Text"],
Cell[CellGroupData[{
Cell[614613, 11539, 441, 13, 56, "Input"],
Cell[615057, 11554, 517, 10, 35, "Message"],
Cell[615577, 11566, 367, 10, 56, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[615993, 11582, 36, 0, 81, "Subsection"],
Cell[616032, 11584, 73, 0, 41, "Text"],
Cell[CellGroupData[{
Cell[616130, 11588, 57, 1, 56, "Input"],
Cell[616190, 11591, 294, 5, 91, "Print",
 CellTags->"Info3569557633-6258180"]
}, Open  ]],
Cell[616499, 11599, 324, 5, 66, "Text"],
Cell[CellGroupData[{
Cell[616848, 11608, 1176, 39, 169, "Input"],
Cell[618027, 11649, 7727, 133, 400, "Output"],
Cell[625757, 11784, 517, 10, 35, "Message"],
Cell[626277, 11796, 141, 4, 56, "Output"]
}, Open  ]],
Cell[626433, 11803, 61, 0, 41, "Text"],
Cell[CellGroupData[{
Cell[626519, 11807, 317, 9, 56, "Input"],
Cell[626839, 11818, 517, 10, 35, "Message"],
Cell[627359, 11830, 240, 7, 56, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[627648, 11843, 36, 0, 81, "Subsection"],
Cell[627687, 11845, 73, 0, 41, "Text"],
Cell[CellGroupData[{
Cell[627785, 11849, 57, 1, 56, "Input"],
Cell[627845, 11852, 292, 5, 91, "Print",
 CellTags->"Info3569557633-3022385"]
}, Open  ]],
Cell[628152, 11860, 376, 6, 66, "Text"],
Cell[CellGroupData[{
Cell[628553, 11870, 723, 24, 162, "Input"],
Cell[629279, 11896, 39467, 654, 384, "Output"],
Cell[668749, 12552, 517, 10, 35, "Message"],
Cell[669269, 12564, 1088, 30, 81, "Output"]
}, Open  ]],
Cell[670372, 12597, 96, 2, 41, "Text"],
Cell[CellGroupData[{
Cell[670493, 12603, 466, 14, 110, "Input"],
Cell[670962, 12619, 517, 10, 35, "Message"],
Cell[671482, 12631, 2016, 55, 105, "Output"],
Cell[673501, 12688, 29, 0, 56, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[673591, 12695, 43, 0, 104, "Section"],
Cell[673637, 12697, 2208, 42, 436, "Text"],
Cell[CellGroupData[{
Cell[675870, 12743, 144, 5, 81, "Subsection"],
Cell[676017, 12750, 1690, 43, 168, "Text"],
Cell[677710, 12795, 1218, 36, 142, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[678965, 12836, 52, 0, 81, "Subsection"],
Cell[679020, 12838, 1259, 18, 214, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[680316, 12861, 37, 0, 81, "Subsection"],
Cell[680356, 12863, 1367, 28, 486, "Text"],
Cell[CellGroupData[{
Cell[681748, 12895, 30, 0, 74, "Subsubsection"],
Cell[681781, 12897, 404, 7, 91, "Text"],
Cell[CellGroupData[{
Cell[682210, 12908, 2907, 89, 297, "Input"],
Cell[685120, 12999, 8284, 145, 351, "Output"],
Cell[693407, 13146, 2352, 48, 357, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[695808, 13200, 30, 0, 74, "Subsubsection"],
Cell[695841, 13202, 495, 8, 91, "Text"],
Cell[CellGroupData[{
Cell[696361, 13214, 3461, 109, 297, "Input"],
Cell[699825, 13325, 7643, 136, 379, "Output"],
Cell[707471, 13463, 6236, 113, 393, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[713756, 13582, 30, 0, 74, "Subsubsection"],
Cell[713789, 13584, 312, 5, 66, "Text"],
Cell[CellGroupData[{
Cell[714126, 13593, 3233, 98, 297, "Input"],
Cell[717362, 13693, 6024, 109, 385, "Output"],
Cell[723389, 13804, 2374, 49, 365, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[725812, 13859, 30, 0, 74, "Subsubsection"],
Cell[725845, 13861, 682, 13, 190, "Text"],
Cell[CellGroupData[{
Cell[726552, 13878, 3597, 108, 361, "Input"],
Cell[730152, 13988, 17257, 294, 397, "Output"],
Cell[747412, 14284, 3898, 75, 385, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[751371, 14366, 37, 0, 81, "Subsection"],
Cell[751411, 14368, 537, 11, 190, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[751985, 14384, 50, 0, 81, "Subsection"],
Cell[752038, 14386, 185, 4, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[752260, 14395, 47, 0, 81, "Subsection"],
Cell[CellGroupData[{
Cell[752332, 14399, 69, 0, 74, "Subsubsection"],
Cell[752404, 14401, 1435, 30, 221, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[753876, 14436, 95, 2, 74, "Subsubsection"],
Cell[753974, 14440, 536, 8, 91, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[754559, 14454, 45, 0, 81, "Subsection"],
Cell[754607, 14456, 1957, 33, 375, "Text",
 CellTags->"Golden-Secant"],
Cell[CellGroupData[{
Cell[756589, 14493, 62, 0, 74, "Subsubsection"],
Cell[756654, 14495, 390, 7, 91, "Text"],
Cell[CellGroupData[{
Cell[757069, 14506, 675, 23, 129, "Input"],
Cell[757747, 14531, 46, 0, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[757830, 14536, 1903, 56, 201, "Input"],
Cell[759736, 14594, 8072, 145, 378, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[767857, 14745, 70, 0, 74, "Subsubsection"],
Cell[767930, 14747, 356, 6, 66, "Text"],
Cell[CellGroupData[{
Cell[768311, 14757, 1003, 33, 153, "Input"],
Cell[769317, 14792, 1090, 23, 386, "Output"],
Cell[770410, 14817, 315, 8, 56, "Output"]
}, Open  ]],
Cell[770740, 14828, 618, 9, 116, "Text"],
Cell[CellGroupData[{
Cell[771383, 14841, 332, 11, 56, "Input"],
Cell[771718, 14854, 45, 0, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[771800, 14859, 2095, 62, 225, "Input"],
Cell[773898, 14923, 3223, 65, 377, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[777170, 14994, 79, 0, 74, "Subsubsection"],
Cell[777252, 14996, 497, 8, 91, "Text"],
Cell[CellGroupData[{
Cell[777774, 15008, 624, 21, 129, "Input"],
Cell[778401, 15031, 144, 4, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[778582, 15040, 332, 11, 56, "Input"],
Cell[778917, 15053, 45, 0, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[778999, 15058, 2010, 58, 177, "Input"],
Cell[781012, 15118, 5665, 106, 330, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[786726, 15230, 70, 0, 74, "Subsubsection"],
Cell[786799, 15232, 576, 9, 116, "Text"],
Cell[CellGroupData[{
Cell[787400, 15245, 631, 21, 129, "Input"],
Cell[788034, 15268, 144, 4, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[788215, 15277, 453, 15, 81, "Input"],
Cell[788671, 15294, 127, 3, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[788835, 15302, 1596, 46, 153, "Input"],
Cell[790434, 15350, 12250, 214, 365, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[802733, 15570, 77, 0, 74, "Subsubsection"],
Cell[802813, 15572, 299, 6, 91, "Text"],
Cell[CellGroupData[{
Cell[803137, 15582, 879, 30, 105, "Input"],
Cell[804019, 15614, 141, 4, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[804197, 15623, 2681, 77, 249, "Input"],
Cell[806881, 15702, 5354, 95, 385, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[812272, 15802, 332, 11, 56, "Input"],
Cell[812607, 15815, 46, 0, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[812690, 15820, 531, 18, 81, "Input"],
Cell[813224, 15840, 63, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[813324, 15846, 531, 18, 81, "Input"],
Cell[813858, 15866, 46, 0, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[813941, 15871, 531, 18, 81, "Input"],
Cell[814475, 15891, 63, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[814575, 15897, 531, 18, 81, "Input"],
Cell[815109, 15917, 45, 0, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[815191, 15922, 531, 18, 81, "Input"],
Cell[815725, 15942, 62, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[815824, 15948, 531, 18, 81, "Input"],
Cell[816358, 15968, 46, 0, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[816441, 15973, 531, 18, 81, "Input"],
Cell[816975, 15993, 62, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[817074, 15999, 531, 18, 81, "Input"],
Cell[817608, 16019, 46, 0, 56, "Output"]
}, Open  ]],
Cell[817669, 16022, 356, 6, 66, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[818074, 16034, 32, 0, 81, "Subsection"],
Cell[818109, 16036, 336, 6, 91, "Text"],
Cell[818448, 16044, 203, 4, 66, "Text"],
Cell[818654, 16050, 131, 3, 41, "Text"],
Cell[818788, 16055, 153, 3, 41, "Text"],
Cell[818944, 16060, 189, 4, 43, "Text"],
Cell[819136, 16066, 222, 4, 66, "Text"],
Cell[819361, 16072, 123, 3, 41, "Text"],
Cell[819487, 16077, 186, 4, 41, "Text",
 CellTags->"Brent's paper"],
Cell[819676, 16083, 153, 4, 41, "Text",
 CellTags->"Brent's book"],
Cell[819832, 16089, 149, 3, 41, "Text"],
Cell[819984, 16094, 128, 3, 41, "Text"],
Cell[820115, 16099, 200, 5, 41, "Text"],
Cell[820318, 16106, 165, 4, 66, "Text"],
Cell[820486, 16112, 185, 4, 41, "Text"],
Cell[820674, 16118, 209, 4, 66, "Text"],
Cell[820886, 16124, 191, 5, 66, "Text",
 CellTags->"Numerical Recipes"],
Cell[821080, 16131, 126, 3, 41, "Text"],
Cell[821209, 16136, 193, 4, 41, "Text"],
Cell[821405, 16142, 180, 4, 66, "Text",
 CellTags->"Stewart 1993"],
Cell[821588, 16148, 133, 3, 41, "Text"],
Cell[821724, 16153, 267, 6, 41, "Text"],
Cell[821994, 16161, 190, 3, 41, "Text"],
Cell[822187, 16166, 204, 4, 41, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
